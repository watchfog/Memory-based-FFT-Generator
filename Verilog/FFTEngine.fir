circuit FFTEngine :
  module FFTTwiddle :
    output io : { flip nk : UInt, flip twiLutCaseIndex : UInt, wR : UInt, wI : UInt}

    wire twi_cos_tb1_p10 : UInt<12>[128] @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[0] <= UInt<12>("h400") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[1] <= UInt<12>("h400") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[2] <= UInt<12>("h3ff") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[3] <= UInt<12>("h3fd") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[4] <= UInt<12>("h3fb") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[5] <= UInt<12>("h3f8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[6] <= UInt<12>("h3f5") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[7] <= UInt<12>("h3f1") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[8] <= UInt<12>("h3ec") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[9] <= UInt<12>("h3e7") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[10] <= UInt<12>("h3e1") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[11] <= UInt<12>("h3db") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[12] <= UInt<12>("h3d4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[13] <= UInt<12>("h3cc") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[14] <= UInt<12>("h3c4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[15] <= UInt<12>("h3bb") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[16] <= UInt<12>("h3b2") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[17] <= UInt<12>("h3a8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[18] <= UInt<12>("h39e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[19] <= UInt<12>("h393") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[20] <= UInt<12>("h387") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[21] <= UInt<12>("h37b") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[22] <= UInt<12>("h36e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[23] <= UInt<12>("h361") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[24] <= UInt<12>("h353") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[25] <= UInt<12>("h345") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[26] <= UInt<12>("h336") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[27] <= UInt<12>("h327") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[28] <= UInt<12>("h318") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[29] <= UInt<12>("h307") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[30] <= UInt<12>("h2f7") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[31] <= UInt<12>("h2e6") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[32] <= UInt<12>("h2d4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[33] <= UInt<12>("h2c2") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[34] <= UInt<12>("h2b0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[35] <= UInt<12>("h29d") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[36] <= UInt<12>("h28a") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[37] <= UInt<12>("h276") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[38] <= UInt<12>("h262") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[39] <= UInt<12>("h24e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[40] <= UInt<12>("h239") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[41] <= UInt<12>("h224") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[42] <= UInt<12>("h20e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[43] <= UInt<12>("h1f9") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[44] <= UInt<12>("h1e3") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[45] <= UInt<12>("h1cc") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[46] <= UInt<12>("h1b6") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[47] <= UInt<12>("h19f") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[48] <= UInt<12>("h188") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[49] <= UInt<12>("h171") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[50] <= UInt<12>("h159") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[51] <= UInt<12>("h141") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[52] <= UInt<12>("h129") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[53] <= UInt<12>("h111") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[54] <= UInt<12>("hf9") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[55] <= UInt<12>("he0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[56] <= UInt<12>("hc8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[57] <= UInt<12>("haf") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[58] <= UInt<12>("h96") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[59] <= UInt<12>("h7d") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[60] <= UInt<12>("h64") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[61] <= UInt<12>("h4b") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[62] <= UInt<12>("h32") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[63] <= UInt<12>("h19") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[64] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[65] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[66] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[67] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[68] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[69] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[70] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[71] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[72] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[73] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[74] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[75] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[76] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[77] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[78] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[79] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[80] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[81] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[82] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[83] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[84] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[85] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[86] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[87] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[88] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[89] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[90] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[91] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[92] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[93] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[94] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[95] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[96] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[97] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[98] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[99] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[100] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[101] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[102] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[103] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[104] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[105] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[106] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[107] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[108] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[109] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[110] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[111] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[112] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[113] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[114] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[115] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[116] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[117] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[118] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[119] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[120] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[121] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[122] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[123] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[124] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[125] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[126] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[127] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    wire twi_sin_tb1_p10 : UInt<12>[128] @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[0] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[1] <= UInt<12>("h19") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[2] <= UInt<12>("h32") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[3] <= UInt<12>("h4b") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[4] <= UInt<12>("h64") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[5] <= UInt<12>("h7d") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[6] <= UInt<12>("h96") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[7] <= UInt<12>("haf") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[8] <= UInt<12>("hc8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[9] <= UInt<12>("he0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[10] <= UInt<12>("hf9") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[11] <= UInt<12>("h111") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[12] <= UInt<12>("h129") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[13] <= UInt<12>("h141") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[14] <= UInt<12>("h159") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[15] <= UInt<12>("h171") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[16] <= UInt<12>("h188") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[17] <= UInt<12>("h19f") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[18] <= UInt<12>("h1b6") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[19] <= UInt<12>("h1cc") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[20] <= UInt<12>("h1e3") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[21] <= UInt<12>("h1f9") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[22] <= UInt<12>("h20e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[23] <= UInt<12>("h224") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[24] <= UInt<12>("h239") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[25] <= UInt<12>("h24e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[26] <= UInt<12>("h262") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[27] <= UInt<12>("h276") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[28] <= UInt<12>("h28a") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[29] <= UInt<12>("h29d") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[30] <= UInt<12>("h2b0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[31] <= UInt<12>("h2c2") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[32] <= UInt<12>("h2d4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[33] <= UInt<12>("h2e6") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[34] <= UInt<12>("h2f7") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[35] <= UInt<12>("h307") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[36] <= UInt<12>("h318") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[37] <= UInt<12>("h327") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[38] <= UInt<12>("h336") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[39] <= UInt<12>("h345") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[40] <= UInt<12>("h353") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[41] <= UInt<12>("h361") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[42] <= UInt<12>("h36e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[43] <= UInt<12>("h37b") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[44] <= UInt<12>("h387") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[45] <= UInt<12>("h393") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[46] <= UInt<12>("h39e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[47] <= UInt<12>("h3a8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[48] <= UInt<12>("h3b2") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[49] <= UInt<12>("h3bb") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[50] <= UInt<12>("h3c4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[51] <= UInt<12>("h3cc") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[52] <= UInt<12>("h3d4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[53] <= UInt<12>("h3db") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[54] <= UInt<12>("h3e1") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[55] <= UInt<12>("h3e7") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[56] <= UInt<12>("h3ec") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[57] <= UInt<12>("h3f1") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[58] <= UInt<12>("h3f5") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[59] <= UInt<12>("h3f8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[60] <= UInt<12>("h3fb") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[61] <= UInt<12>("h3fd") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[62] <= UInt<12>("h3ff") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[63] <= UInt<12>("h400") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[64] <= UInt<12>("h400") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[65] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[66] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[67] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[68] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[69] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[70] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[71] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[72] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[73] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[74] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[75] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[76] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[77] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[78] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[79] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[80] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[81] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[82] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[83] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[84] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[85] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[86] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[87] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[88] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[89] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[90] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[91] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[92] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[93] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[94] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[95] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[96] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[97] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[98] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[99] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[100] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[101] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[102] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[103] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[104] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[105] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[106] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[107] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[108] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[109] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[110] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[111] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[112] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[113] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[114] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[115] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[116] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[117] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[118] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[119] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[120] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[121] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[122] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[123] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[124] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[125] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[126] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[127] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    node _idx_r_T = bits(io.nk, 6, 6) @[FFTTwiddle.scala 35:27]
    node _idx_r_T_1 = bits(io.nk, 5, 0) @[FFTTwiddle.scala 35:50]
    node _idx_r_T_2 = orr(_idx_r_T_1) @[FFTTwiddle.scala 35:73]
    node _idx_r_T_3 = and(_idx_r_T, _idx_r_T_2) @[FFTTwiddle.scala 35:43]
    node _idx_r_T_4 = not(io.nk) @[FFTTwiddle.scala 35:80]
    node _idx_r_T_5 = add(_idx_r_T_4, UInt<1>("h1")) @[FFTTwiddle.scala 35:87]
    node _idx_r_T_6 = tail(_idx_r_T_5, 1) @[FFTTwiddle.scala 35:87]
    node idx_r = mux(_idx_r_T_3, _idx_r_T_6, io.nk) @[FFTTwiddle.scala 35:20]
    node _lut_chg_sign_flag_r_T = bits(io.nk, 6, 6) @[FFTTwiddle.scala 37:36]
    node _lut_chg_sign_flag_r_T_1 = bits(io.nk, 5, 0) @[FFTTwiddle.scala 37:60]
    node _lut_chg_sign_flag_r_T_2 = orr(_lut_chg_sign_flag_r_T_1) @[FFTTwiddle.scala 37:83]
    node lut_chg_sign_flag_r = and(_lut_chg_sign_flag_r_T, _lut_chg_sign_flag_r_T_2) @[FFTTwiddle.scala 37:52]
    node _lut_w_r_T = or(idx_r, UInt<7>("h0"))
    node _lut_w_r_T_1 = bits(_lut_w_r_T, 6, 0)
    node idx_i = bits(idx_r, 6, 0) @[FFTTwiddle.scala 41:22]
    node _chg_sign_flag_r_T = eq(io.twiLutCaseIndex, UInt<2>("h2")) @[FFTTwiddle.scala 47:51]
    node _chg_sign_flag_r_T_1 = eq(lut_chg_sign_flag_r, UInt<1>("h0")) @[FFTTwiddle.scala 47:61]
    node chg_sign_flag_r = mux(_chg_sign_flag_r_T, _chg_sign_flag_r_T_1, lut_chg_sign_flag_r) @[FFTTwiddle.scala 47:30]
    node _chg_sign_flag_i_T = eq(io.twiLutCaseIndex, UInt<1>("h1")) @[FFTTwiddle.scala 48:51]
    node _chg_sign_flag_i_T_1 = eq(UInt<1>("h1"), UInt<1>("h0")) @[FFTTwiddle.scala 48:61]
    node chg_sign_flag_i = mux(_chg_sign_flag_i_T, _chg_sign_flag_i_T_1, UInt<1>("h1")) @[FFTTwiddle.scala 48:30]
    node _io_wR_T = not(twi_cos_tb1_p10[_lut_w_r_T_1]) @[FFTTwiddle.scala 50:36]
    node _io_wR_T_1 = add(_io_wR_T, UInt<1>("h1")) @[FFTTwiddle.scala 50:45]
    node _io_wR_T_2 = tail(_io_wR_T_1, 1) @[FFTTwiddle.scala 50:45]
    node _io_wR_T_3 = mux(chg_sign_flag_r, _io_wR_T_2, twi_cos_tb1_p10[_lut_w_r_T_1]) @[FFTTwiddle.scala 50:17]
    io.wR <= _io_wR_T_3 @[FFTTwiddle.scala 50:11]
    node _io_wI_T = not(twi_sin_tb1_p10[idx_i]) @[FFTTwiddle.scala 51:36]
    node _io_wI_T_1 = add(_io_wI_T, UInt<1>("h1")) @[FFTTwiddle.scala 51:45]
    node _io_wI_T_2 = tail(_io_wI_T_1, 1) @[FFTTwiddle.scala 51:45]
    node _io_wI_T_3 = mux(chg_sign_flag_i, _io_wI_T_2, twi_sin_tb1_p10[idx_i]) @[FFTTwiddle.scala 51:17]
    io.wI <= _io_wI_T_3 @[FFTTwiddle.scala 51:11]

  module FFTMultiply :
    output io : { flip a : UInt<18>, flip b : UInt<18>, flip tc : UInt<1>, product : UInt<36>}

    node _temp_a_T = bits(io.a, 17, 17) @[FFTMultiply.scala 14:26]
    node _temp_a_T_1 = not(io.a) @[FFTMultiply.scala 14:51]
    node _temp_a_T_2 = add(_temp_a_T_1, UInt<1>("h1")) @[FFTMultiply.scala 14:57]
    node _temp_a_T_3 = tail(_temp_a_T_2, 1) @[FFTMultiply.scala 14:57]
    node temp_a = mux(_temp_a_T, _temp_a_T_3, io.a) @[FFTMultiply.scala 14:21]
    node _temp_b_T = bits(io.b, 17, 17) @[FFTMultiply.scala 15:26]
    node _temp_b_T_1 = not(io.b) @[FFTMultiply.scala 15:51]
    node _temp_b_T_2 = add(_temp_b_T_1, UInt<1>("h1")) @[FFTMultiply.scala 15:57]
    node _temp_b_T_3 = tail(_temp_b_T_2, 1) @[FFTMultiply.scala 15:57]
    node temp_b = mux(_temp_b_T, _temp_b_T_3, io.b) @[FFTMultiply.scala 15:21]
    node long_temp1 = mul(temp_a, temp_b) @[FFTMultiply.scala 17:29]
    node _long_temp2_T = sub(long_temp1, UInt<1>("h1")) @[FFTMultiply.scala 18:35]
    node _long_temp2_T_1 = tail(_long_temp2_T, 1) @[FFTMultiply.scala 18:35]
    node long_temp2 = not(_long_temp2_T_1) @[FFTMultiply.scala 18:22]
    node _io_product_T = xor(io.a, io.a) @[FFTMultiply.scala 20:31]
    node _io_product_T_1 = xorr(_io_product_T) @[FFTMultiply.scala 20:39]
    node _io_product_T_2 = neq(_io_product_T_1, UInt<1>("h0")) @[FFTMultiply.scala 20:44]
    node _io_product_T_3 = xor(io.b, io.b) @[FFTMultiply.scala 20:67]
    node _io_product_T_4 = xorr(_io_product_T_3) @[FFTMultiply.scala 20:75]
    node _io_product_T_5 = neq(_io_product_T_4, UInt<1>("h0")) @[FFTMultiply.scala 20:80]
    node _io_product_T_6 = or(_io_product_T_2, _io_product_T_5) @[FFTMultiply.scala 20:57]
    node _io_product_T_7 = xor(io.tc, io.tc) @[FFTMultiply.scala 20:104]
    node _io_product_T_8 = xorr(_io_product_T_7) @[FFTMultiply.scala 20:113]
    node _io_product_T_9 = neq(_io_product_T_8, UInt<1>("h0")) @[FFTMultiply.scala 20:118]
    node _io_product_T_10 = or(_io_product_T_6, _io_product_T_9) @[FFTMultiply.scala 20:93]
    node _io_product_T_11 = mux(UInt<1>("h1"), UInt<36>("hfffffffff"), UInt<36>("h0")) @[Bitwise.scala 77:12]
    node _io_product_T_12 = bits(io.a, 17, 17) @[FFTMultiply.scala 20:194]
    node _io_product_T_13 = bits(io.b, 17, 17) @[FFTMultiply.scala 20:223]
    node _io_product_T_14 = xor(_io_product_T_12, _io_product_T_13) @[FFTMultiply.scala 20:217]
    node _io_product_T_15 = orr(long_temp1) @[FFTMultiply.scala 20:262]
    node _io_product_T_16 = and(_io_product_T_14, _io_product_T_15) @[FFTMultiply.scala 20:247]
    node _io_product_T_17 = cat(UInt<1>("h1"), long_temp2) @[Cat.scala 33:92]
    node _io_product_T_18 = cat(UInt<1>("h0"), long_temp1) @[Cat.scala 33:92]
    node _io_product_T_19 = mux(_io_product_T_16, _io_product_T_17, _io_product_T_18) @[FFTMultiply.scala 20:187]
    node _io_product_T_20 = mul(io.a, io.b) @[FFTMultiply.scala 20:329]
    node _io_product_T_21 = mux(io.tc, _io_product_T_19, _io_product_T_20) @[FFTMultiply.scala 20:176]
    node _io_product_T_22 = mux(_io_product_T_10, _io_product_T_11, _io_product_T_21) @[FFTMultiply.scala 20:22]
    io.product <= _io_product_T_22 @[FFTMultiply.scala 20:16]

  module FFT3PipelineCalc :
    input clock : Clock
    input reset : Reset
    output io : { flip dataInSR : UInt, flip dataInSI : UInt, flip dataInTR : UInt, flip dataInTI : UInt, dataOutSR3c : UInt, dataOutSI3c : UInt, dataOutTR3c : UInt, dataOutTI3c : UInt, flip nk : UInt, flip rShiftSym : UInt<1>, flip isFFT : UInt<1>, flip dataMode : UInt<1>, flip state1c : UInt<1>, flip state2c : UInt<1>}

    clock is invalid
    reset is invalid
    io is invalid
    node _dataInSRRnd_T = bits(io.dataInSR, 15, 15) @[FFT3PipelineCalc.scala 28:38]
    node _dataInSRRnd_T_1 = bits(io.dataInSR, 15, 1) @[FFT3PipelineCalc.scala 28:69]
    node _dataInSRRnd_T_2 = cat(_dataInSRRnd_T, _dataInSRRnd_T_1) @[Cat.scala 33:92]
    node _dataInSRRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInSRRnd_T_4 = bits(io.dataInSR, 0, 0) @[FFT3PipelineCalc.scala 28:138]
    node _dataInSRRnd_T_5 = cat(_dataInSRRnd_T_3, _dataInSRRnd_T_4) @[Cat.scala 33:92]
    node _dataInSRRnd_T_6 = add(_dataInSRRnd_T_2, _dataInSRRnd_T_5) @[FFT3PipelineCalc.scala 28:92]
    node dataInSRRnd = tail(_dataInSRRnd_T_6, 1) @[FFT3PipelineCalc.scala 28:92]
    node _dataInSIRnd_T = bits(io.dataInSI, 15, 15) @[FFT3PipelineCalc.scala 29:38]
    node _dataInSIRnd_T_1 = bits(io.dataInSI, 15, 1) @[FFT3PipelineCalc.scala 29:69]
    node _dataInSIRnd_T_2 = cat(_dataInSIRnd_T, _dataInSIRnd_T_1) @[Cat.scala 33:92]
    node _dataInSIRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInSIRnd_T_4 = bits(io.dataInSI, 0, 0) @[FFT3PipelineCalc.scala 29:138]
    node _dataInSIRnd_T_5 = cat(_dataInSIRnd_T_3, _dataInSIRnd_T_4) @[Cat.scala 33:92]
    node _dataInSIRnd_T_6 = add(_dataInSIRnd_T_2, _dataInSIRnd_T_5) @[FFT3PipelineCalc.scala 29:92]
    node dataInSIRnd = tail(_dataInSIRnd_T_6, 1) @[FFT3PipelineCalc.scala 29:92]
    node _dataInTRRnd_T = bits(io.dataInTR, 15, 15) @[FFT3PipelineCalc.scala 30:38]
    node _dataInTRRnd_T_1 = bits(io.dataInTR, 15, 1) @[FFT3PipelineCalc.scala 30:69]
    node _dataInTRRnd_T_2 = cat(_dataInTRRnd_T, _dataInTRRnd_T_1) @[Cat.scala 33:92]
    node _dataInTRRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInTRRnd_T_4 = bits(io.dataInTR, 0, 0) @[FFT3PipelineCalc.scala 30:138]
    node _dataInTRRnd_T_5 = cat(_dataInTRRnd_T_3, _dataInTRRnd_T_4) @[Cat.scala 33:92]
    node _dataInTRRnd_T_6 = add(_dataInTRRnd_T_2, _dataInTRRnd_T_5) @[FFT3PipelineCalc.scala 30:92]
    node dataInTRRnd = tail(_dataInTRRnd_T_6, 1) @[FFT3PipelineCalc.scala 30:92]
    node _dataInTIRnd_T = bits(io.dataInTI, 15, 15) @[FFT3PipelineCalc.scala 31:38]
    node _dataInTIRnd_T_1 = bits(io.dataInTI, 15, 1) @[FFT3PipelineCalc.scala 31:69]
    node _dataInTIRnd_T_2 = cat(_dataInTIRnd_T, _dataInTIRnd_T_1) @[Cat.scala 33:92]
    node _dataInTIRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInTIRnd_T_4 = bits(io.dataInTI, 0, 0) @[FFT3PipelineCalc.scala 31:138]
    node _dataInTIRnd_T_5 = cat(_dataInTIRnd_T_3, _dataInTIRnd_T_4) @[Cat.scala 33:92]
    node _dataInTIRnd_T_6 = add(_dataInTIRnd_T_2, _dataInTIRnd_T_5) @[FFT3PipelineCalc.scala 31:92]
    node dataInTIRnd = tail(_dataInTIRnd_T_6, 1) @[FFT3PipelineCalc.scala 31:92]
    node dataInSR1c = mux(io.rShiftSym, dataInSRRnd, io.dataInSR) @[FFT3PipelineCalc.scala 33:25]
    node dataInSI1c = mux(io.rShiftSym, dataInSIRnd, io.dataInSI) @[FFT3PipelineCalc.scala 34:25]
    node dataInTR1c = mux(io.rShiftSym, dataInTRRnd, io.dataInTR) @[FFT3PipelineCalc.scala 35:25]
    node dataInTI1c = mux(io.rShiftSym, dataInTIRnd, io.dataInTI) @[FFT3PipelineCalc.scala 36:25]
    reg nk1c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      nk1c <= io.nk @[Reg.scala 36:22]
    node _twiLutIdx1c_T = bits(nk1c, 5, 0) @[FFT3PipelineCalc.scala 40:31]
    node twiLutIdx1c = cat(_twiLutIdx1c_T, UInt<1>("h0")) @[Cat.scala 33:92]
    node twiLutCaseIdx1c = mux(io.isFFT, UInt<2>("h0"), UInt<2>("h1")) @[FFT3PipelineCalc.scala 42:30]
    inst fftTwiddle of FFTTwiddle @[FFT3PipelineCalc.scala 44:28]
    fftTwiddle.io.nk <= twiLutIdx1c @[FFT3PipelineCalc.scala 45:22]
    fftTwiddle.io.twiLutCaseIndex <= twiLutCaseIdx1c @[FFT3PipelineCalc.scala 46:35]
    reg sR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      sR2c <= dataInSR1c @[Reg.scala 36:22]
    reg sI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      sI2c <= dataInSI1c @[Reg.scala 36:22]
    reg tR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      tR2c <= dataInTR1c @[Reg.scala 36:22]
    reg tI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      tI2c <= dataInTI1c @[Reg.scala 36:22]
    node _wR2c_T = mux(UInt<1>("h0"), UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 77:12]
    node _wR2c_T_1 = cat(fftTwiddle.io.wR, _wR2c_T) @[Cat.scala 33:92]
    reg wR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      wR2c <= _wR2c_T_1 @[Reg.scala 36:22]
    node _wI2c_T = mux(UInt<1>("h0"), UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 77:12]
    node _wI2c_T_1 = cat(fftTwiddle.io.wI, _wI2c_T) @[Cat.scala 33:92]
    reg wI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      wI2c <= _wI2c_T_1 @[Reg.scala 36:22]
    node _addTRI_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 57:34]
    node _addTRI_T_1 = bits(_addTRI_T, 0, 0) @[Bitwise.scala 77:15]
    node _addTRI_T_2 = mux(_addTRI_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _addTRI_T_3 = cat(_addTRI_T_2, tR2c) @[Cat.scala 33:92]
    node _addTRI_T_4 = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 57:79]
    node _addTRI_T_5 = bits(_addTRI_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _addTRI_T_6 = mux(_addTRI_T_5, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _addTRI_T_7 = cat(_addTRI_T_6, tI2c) @[Cat.scala 33:92]
    node _addTRI_T_8 = add(_addTRI_T_3, _addTRI_T_7) @[FFT3PipelineCalc.scala 57:61]
    node addTRI = tail(_addTRI_T_8, 1) @[FFT3PipelineCalc.scala 57:61]
    node _addWRI_T = bits(wR2c, 16, 16) @[FFT3PipelineCalc.scala 58:26]
    node _addWRI_T_1 = cat(_addWRI_T, wR2c) @[Cat.scala 33:92]
    node _addWRI_T_2 = bits(wI2c, 16, 16) @[FFT3PipelineCalc.scala 58:62]
    node _addWRI_T_3 = cat(_addWRI_T_2, wI2c) @[Cat.scala 33:92]
    node _addWRI_T_4 = add(_addWRI_T_1, _addWRI_T_3) @[FFT3PipelineCalc.scala 58:52]
    node addWRI = tail(_addWRI_T_4, 1) @[FFT3PipelineCalc.scala 58:52]
    inst fftMultiply of FFTMultiply @[FFT3PipelineCalc.scala 59:29]
    fftMultiply.io.a <= addTRI @[FFT3PipelineCalc.scala 60:22]
    fftMultiply.io.b <= addWRI @[FFT3PipelineCalc.scala 61:22]
    fftMultiply.io.tc <= UInt<1>("h1") @[FFT3PipelineCalc.scala 62:23]
    node _multRPre_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 65:51]
    node _multRPre_T_1 = bits(_multRPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _multRPre_T_2 = mux(_multRPre_T_1, UInt<17>("h1ffff"), UInt<17>("h0")) @[Bitwise.scala 77:12]
    node _multRPre_T_3 = cat(_multRPre_T_2, tR2c) @[Cat.scala 33:92]
    node _multRPre_T_4 = bits(wR2c, 16, 16) @[FFT3PipelineCalc.scala 65:111]
    node _multRPre_T_5 = bits(_multRPre_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _multRPre_T_6 = mux(_multRPre_T_5, UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
    node _multRPre_T_7 = cat(_multRPre_T_6, wR2c) @[Cat.scala 33:92]
    node multRPre = mul(_multRPre_T_3, _multRPre_T_7) @[FFT3PipelineCalc.scala 65:78]
    node multR = bits(multRPre, 32, 0) @[FFT3PipelineCalc.scala 66:25]
    node _multIPre_T = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 68:51]
    node _multIPre_T_1 = bits(_multIPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _multIPre_T_2 = mux(_multIPre_T_1, UInt<17>("h1ffff"), UInt<17>("h0")) @[Bitwise.scala 77:12]
    node _multIPre_T_3 = cat(_multIPre_T_2, tI2c) @[Cat.scala 33:92]
    node _multIPre_T_4 = bits(wI2c, 16, 16) @[FFT3PipelineCalc.scala 68:111]
    node _multIPre_T_5 = bits(_multIPre_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _multIPre_T_6 = mux(_multIPre_T_5, UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
    node _multIPre_T_7 = cat(_multIPre_T_6, wI2c) @[Cat.scala 33:92]
    node multIPre = mul(_multIPre_T_3, _multIPre_T_7) @[FFT3PipelineCalc.scala 68:78]
    node multI = bits(multIPre, 32, 0) @[FFT3PipelineCalc.scala 69:25]
    node _qR2cKernel_T = bits(multR, 32, 32) @[FFT3PipelineCalc.scala 71:31]
    node _qR2cKernel_T_1 = bits(multR, 30, 15) @[FFT3PipelineCalc.scala 71:62]
    node _qR2cKernel_T_2 = cat(_qR2cKernel_T, _qR2cKernel_T_1) @[Cat.scala 33:92]
    node _qR2cKernel_T_3 = bits(multI, 32, 32) @[FFT3PipelineCalc.scala 71:119]
    node _qR2cKernel_T_4 = bits(multI, 30, 15) @[FFT3PipelineCalc.scala 71:150]
    node _qR2cKernel_T_5 = cat(_qR2cKernel_T_3, _qR2cKernel_T_4) @[Cat.scala 33:92]
    node _qR2cKernel_T_6 = sub(_qR2cKernel_T_2, _qR2cKernel_T_5) @[FFT3PipelineCalc.scala 71:108]
    node qR2cKernel = tail(_qR2cKernel_T_6, 1) @[FFT3PipelineCalc.scala 71:108]
    node _qI2cKernel_T = bits(fftMultiply.io.product, 35, 35) @[FFT3PipelineCalc.scala 72:31]
    node _qI2cKernel_T_1 = bits(fftMultiply.io.product, 30, 15) @[FFT3PipelineCalc.scala 72:66]
    node _qI2cKernel_T_2 = cat(_qI2cKernel_T, _qI2cKernel_T_1) @[Cat.scala 33:92]
    node _qI2cKernel_T_3 = bits(multR, 32, 32) @[FFT3PipelineCalc.scala 72:123]
    node _qI2cKernel_T_4 = bits(multR, 30, 15) @[FFT3PipelineCalc.scala 72:154]
    node _qI2cKernel_T_5 = cat(_qI2cKernel_T_3, _qI2cKernel_T_4) @[Cat.scala 33:92]
    node _qI2cKernel_T_6 = sub(_qI2cKernel_T_2, _qI2cKernel_T_5) @[FFT3PipelineCalc.scala 72:112]
    node _qI2cKernel_T_7 = tail(_qI2cKernel_T_6, 1) @[FFT3PipelineCalc.scala 72:112]
    node _qI2cKernel_T_8 = bits(multI, 32, 32) @[FFT3PipelineCalc.scala 72:211]
    node _qI2cKernel_T_9 = bits(multI, 30, 15) @[FFT3PipelineCalc.scala 72:242]
    node _qI2cKernel_T_10 = cat(_qI2cKernel_T_8, _qI2cKernel_T_9) @[Cat.scala 33:92]
    node _qI2cKernel_T_11 = sub(_qI2cKernel_T_7, _qI2cKernel_T_10) @[FFT3PipelineCalc.scala 72:200]
    node qI2cKernel = tail(_qI2cKernel_T_11, 1) @[FFT3PipelineCalc.scala 72:200]
    node _qR2cProc_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 74:28]
    node qR2cProc = cat(_qR2cProc_T, tR2c) @[Cat.scala 33:92]
    node _qI2cProc_T = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 75:29]
    node _qI2cProc_T_1 = cat(_qI2cProc_T, tI2c) @[Cat.scala 33:92]
    node _qI2cProc_T_2 = not(_qI2cProc_T_1) @[FFT3PipelineCalc.scala 75:20]
    node _qI2cProc_T_3 = add(_qI2cProc_T_2, UInt<1>("h1")) @[FFT3PipelineCalc.scala 75:55]
    node qI2cProc = tail(_qI2cProc_T_3, 1) @[FFT3PipelineCalc.scala 75:55]
    node qR2c = mux(io.dataMode, qR2cProc, qR2cKernel) @[FFT3PipelineCalc.scala 77:19]
    node qI2c = mux(io.dataMode, qI2cProc, qI2cKernel) @[FFT3PipelineCalc.scala 78:19]
    reg sR3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      sR3c <= sR2c @[Reg.scala 36:22]
    reg sI3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      sI3c <= sI2c @[Reg.scala 36:22]
    reg qR3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      qR3c <= qR2c @[Reg.scala 36:22]
    reg qI3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      qI3c <= qI2c @[Reg.scala 36:22]
    node _xR3cPre_T = bits(sR3c, 15, 15) @[FFT3PipelineCalc.scala 86:35]
    node _xR3cPre_T_1 = bits(_xR3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _xR3cPre_T_2 = mux(_xR3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _xR3cPre_T_3 = cat(_xR3cPre_T_2, sR3c) @[Cat.scala 33:92]
    node _xR3cPre_T_4 = bits(qR3c, 16, 16) @[FFT3PipelineCalc.scala 86:72]
    node _xR3cPre_T_5 = cat(_xR3cPre_T_4, qR3c) @[Cat.scala 33:92]
    node _xR3cPre_T_6 = add(_xR3cPre_T_3, _xR3cPre_T_5) @[FFT3PipelineCalc.scala 86:62]
    node xR3cPre = tail(_xR3cPre_T_6, 1) @[FFT3PipelineCalc.scala 86:62]
    node _xI3cPre_T = bits(sI3c, 15, 15) @[FFT3PipelineCalc.scala 87:35]
    node _xI3cPre_T_1 = bits(_xI3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _xI3cPre_T_2 = mux(_xI3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _xI3cPre_T_3 = cat(_xI3cPre_T_2, sI3c) @[Cat.scala 33:92]
    node _xI3cPre_T_4 = bits(qI3c, 16, 16) @[FFT3PipelineCalc.scala 87:72]
    node _xI3cPre_T_5 = cat(_xI3cPre_T_4, qI3c) @[Cat.scala 33:92]
    node _xI3cPre_T_6 = add(_xI3cPre_T_3, _xI3cPre_T_5) @[FFT3PipelineCalc.scala 87:62]
    node xI3cPre = tail(_xI3cPre_T_6, 1) @[FFT3PipelineCalc.scala 87:62]
    node _xR3c_T = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:28]
    node _xR3c_T_1 = bits(xR3cPre, 16, 16) @[FFT3PipelineCalc.scala 89:56]
    node _xR3c_T_2 = xor(_xR3c_T, _xR3c_T_1) @[FFT3PipelineCalc.scala 89:47]
    node _xR3c_T_3 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:88]
    node _xR3c_T_4 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:139]
    node _xR3c_T_5 = bits(_xR3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _xR3c_T_6 = mux(_xR3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xR3c_T_7 = not(_xR3c_T_6) @[FFT3PipelineCalc.scala 89:108]
    node _xR3c_T_8 = cat(_xR3c_T_3, _xR3c_T_7) @[Cat.scala 33:92]
    node _xR3c_T_9 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:173]
    node _xR3c_T_10 = bits(xR3cPre, 15, 15) @[FFT3PipelineCalc.scala 89:201]
    node _xR3c_T_11 = xor(_xR3c_T_9, _xR3c_T_10) @[FFT3PipelineCalc.scala 89:192]
    node _xR3c_T_12 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:233]
    node _xR3c_T_13 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:284]
    node _xR3c_T_14 = bits(_xR3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _xR3c_T_15 = mux(_xR3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xR3c_T_16 = not(_xR3c_T_15) @[FFT3PipelineCalc.scala 89:253]
    node _xR3c_T_17 = cat(_xR3c_T_12, _xR3c_T_16) @[Cat.scala 33:92]
    node _xR3c_T_18 = bits(xR3cPre, 15, 0) @[FFT3PipelineCalc.scala 89:313]
    node _xR3c_T_19 = mux(_xR3c_T_11, _xR3c_T_17, _xR3c_T_18) @[FFT3PipelineCalc.scala 89:164]
    node xR3c = mux(_xR3c_T_2, _xR3c_T_8, _xR3c_T_19) @[FFT3PipelineCalc.scala 89:19]
    node _xI3c_T = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:28]
    node _xI3c_T_1 = bits(xI3cPre, 16, 16) @[FFT3PipelineCalc.scala 90:56]
    node _xI3c_T_2 = xor(_xI3c_T, _xI3c_T_1) @[FFT3PipelineCalc.scala 90:47]
    node _xI3c_T_3 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:88]
    node _xI3c_T_4 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:139]
    node _xI3c_T_5 = bits(_xI3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _xI3c_T_6 = mux(_xI3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xI3c_T_7 = not(_xI3c_T_6) @[FFT3PipelineCalc.scala 90:108]
    node _xI3c_T_8 = cat(_xI3c_T_3, _xI3c_T_7) @[Cat.scala 33:92]
    node _xI3c_T_9 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:173]
    node _xI3c_T_10 = bits(xI3cPre, 15, 15) @[FFT3PipelineCalc.scala 90:201]
    node _xI3c_T_11 = xor(_xI3c_T_9, _xI3c_T_10) @[FFT3PipelineCalc.scala 90:192]
    node _xI3c_T_12 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:233]
    node _xI3c_T_13 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:284]
    node _xI3c_T_14 = bits(_xI3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _xI3c_T_15 = mux(_xI3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xI3c_T_16 = not(_xI3c_T_15) @[FFT3PipelineCalc.scala 90:253]
    node _xI3c_T_17 = cat(_xI3c_T_12, _xI3c_T_16) @[Cat.scala 33:92]
    node _xI3c_T_18 = bits(xI3cPre, 15, 0) @[FFT3PipelineCalc.scala 90:313]
    node _xI3c_T_19 = mux(_xI3c_T_11, _xI3c_T_17, _xI3c_T_18) @[FFT3PipelineCalc.scala 90:164]
    node xI3c = mux(_xI3c_T_2, _xI3c_T_8, _xI3c_T_19) @[FFT3PipelineCalc.scala 90:19]
    io.dataOutSR3c <= xR3c @[FFT3PipelineCalc.scala 92:20]
    io.dataOutSI3c <= xI3c @[FFT3PipelineCalc.scala 93:20]
    node _yR3cPre_T = bits(sR3c, 15, 15) @[FFT3PipelineCalc.scala 95:35]
    node _yR3cPre_T_1 = bits(_yR3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _yR3cPre_T_2 = mux(_yR3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _yR3cPre_T_3 = cat(_yR3cPre_T_2, sR3c) @[Cat.scala 33:92]
    node _yR3cPre_T_4 = bits(qR3c, 16, 16) @[FFT3PipelineCalc.scala 95:72]
    node _yR3cPre_T_5 = cat(_yR3cPre_T_4, qR3c) @[Cat.scala 33:92]
    node _yR3cPre_T_6 = sub(_yR3cPre_T_3, _yR3cPre_T_5) @[FFT3PipelineCalc.scala 95:62]
    node yR3cPre = tail(_yR3cPre_T_6, 1) @[FFT3PipelineCalc.scala 95:62]
    node _yI3cPre_T = bits(sI3c, 15, 15) @[FFT3PipelineCalc.scala 96:35]
    node _yI3cPre_T_1 = bits(_yI3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _yI3cPre_T_2 = mux(_yI3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _yI3cPre_T_3 = cat(_yI3cPre_T_2, sI3c) @[Cat.scala 33:92]
    node _yI3cPre_T_4 = bits(qI3c, 16, 16) @[FFT3PipelineCalc.scala 96:72]
    node _yI3cPre_T_5 = cat(_yI3cPre_T_4, qI3c) @[Cat.scala 33:92]
    node _yI3cPre_T_6 = sub(_yI3cPre_T_3, _yI3cPre_T_5) @[FFT3PipelineCalc.scala 96:62]
    node yI3cPre = tail(_yI3cPre_T_6, 1) @[FFT3PipelineCalc.scala 96:62]
    node _yR3c_T = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:28]
    node _yR3c_T_1 = bits(yR3cPre, 16, 16) @[FFT3PipelineCalc.scala 98:56]
    node _yR3c_T_2 = xor(_yR3c_T, _yR3c_T_1) @[FFT3PipelineCalc.scala 98:47]
    node _yR3c_T_3 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:88]
    node _yR3c_T_4 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:139]
    node _yR3c_T_5 = bits(_yR3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _yR3c_T_6 = mux(_yR3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yR3c_T_7 = not(_yR3c_T_6) @[FFT3PipelineCalc.scala 98:108]
    node _yR3c_T_8 = cat(_yR3c_T_3, _yR3c_T_7) @[Cat.scala 33:92]
    node _yR3c_T_9 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:173]
    node _yR3c_T_10 = bits(yR3cPre, 15, 15) @[FFT3PipelineCalc.scala 98:201]
    node _yR3c_T_11 = xor(_yR3c_T_9, _yR3c_T_10) @[FFT3PipelineCalc.scala 98:192]
    node _yR3c_T_12 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:233]
    node _yR3c_T_13 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:284]
    node _yR3c_T_14 = bits(_yR3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _yR3c_T_15 = mux(_yR3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yR3c_T_16 = not(_yR3c_T_15) @[FFT3PipelineCalc.scala 98:253]
    node _yR3c_T_17 = cat(_yR3c_T_12, _yR3c_T_16) @[Cat.scala 33:92]
    node _yR3c_T_18 = bits(yR3cPre, 15, 0) @[FFT3PipelineCalc.scala 98:313]
    node _yR3c_T_19 = mux(_yR3c_T_11, _yR3c_T_17, _yR3c_T_18) @[FFT3PipelineCalc.scala 98:164]
    node yR3c = mux(_yR3c_T_2, _yR3c_T_8, _yR3c_T_19) @[FFT3PipelineCalc.scala 98:19]
    node _yI3c_T = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:28]
    node _yI3c_T_1 = bits(yI3cPre, 16, 16) @[FFT3PipelineCalc.scala 99:56]
    node _yI3c_T_2 = xor(_yI3c_T, _yI3c_T_1) @[FFT3PipelineCalc.scala 99:47]
    node _yI3c_T_3 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:88]
    node _yI3c_T_4 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:139]
    node _yI3c_T_5 = bits(_yI3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _yI3c_T_6 = mux(_yI3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yI3c_T_7 = not(_yI3c_T_6) @[FFT3PipelineCalc.scala 99:108]
    node _yI3c_T_8 = cat(_yI3c_T_3, _yI3c_T_7) @[Cat.scala 33:92]
    node _yI3c_T_9 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:173]
    node _yI3c_T_10 = bits(yI3cPre, 15, 15) @[FFT3PipelineCalc.scala 99:201]
    node _yI3c_T_11 = xor(_yI3c_T_9, _yI3c_T_10) @[FFT3PipelineCalc.scala 99:192]
    node _yI3c_T_12 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:233]
    node _yI3c_T_13 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:284]
    node _yI3c_T_14 = bits(_yI3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _yI3c_T_15 = mux(_yI3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yI3c_T_16 = not(_yI3c_T_15) @[FFT3PipelineCalc.scala 99:253]
    node _yI3c_T_17 = cat(_yI3c_T_12, _yI3c_T_16) @[Cat.scala 33:92]
    node _yI3c_T_18 = bits(yI3cPre, 15, 0) @[FFT3PipelineCalc.scala 99:313]
    node _yI3c_T_19 = mux(_yI3c_T_11, _yI3c_T_17, _yI3c_T_18) @[FFT3PipelineCalc.scala 99:164]
    node yI3c = mux(_yI3c_T_2, _yI3c_T_8, _yI3c_T_19) @[FFT3PipelineCalc.scala 99:19]
    io.dataOutTR3c <= yR3c @[FFT3PipelineCalc.scala 101:20]
    io.dataOutTI3c <= yI3c @[FFT3PipelineCalc.scala 102:20]

  module FFTTwiddle_1 :
    output io : { flip nk : UInt, flip twiLutCaseIndex : UInt, wR : UInt, wI : UInt}

    wire twi_cos_tb1_p10 : UInt<12>[128] @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[0] <= UInt<12>("h400") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[1] <= UInt<12>("h400") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[2] <= UInt<12>("h3ff") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[3] <= UInt<12>("h3fd") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[4] <= UInt<12>("h3fb") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[5] <= UInt<12>("h3f8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[6] <= UInt<12>("h3f5") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[7] <= UInt<12>("h3f1") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[8] <= UInt<12>("h3ec") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[9] <= UInt<12>("h3e7") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[10] <= UInt<12>("h3e1") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[11] <= UInt<12>("h3db") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[12] <= UInt<12>("h3d4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[13] <= UInt<12>("h3cc") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[14] <= UInt<12>("h3c4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[15] <= UInt<12>("h3bb") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[16] <= UInt<12>("h3b2") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[17] <= UInt<12>("h3a8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[18] <= UInt<12>("h39e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[19] <= UInt<12>("h393") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[20] <= UInt<12>("h387") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[21] <= UInt<12>("h37b") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[22] <= UInt<12>("h36e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[23] <= UInt<12>("h361") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[24] <= UInt<12>("h353") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[25] <= UInt<12>("h345") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[26] <= UInt<12>("h336") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[27] <= UInt<12>("h327") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[28] <= UInt<12>("h318") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[29] <= UInt<12>("h307") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[30] <= UInt<12>("h2f7") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[31] <= UInt<12>("h2e6") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[32] <= UInt<12>("h2d4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[33] <= UInt<12>("h2c2") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[34] <= UInt<12>("h2b0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[35] <= UInt<12>("h29d") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[36] <= UInt<12>("h28a") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[37] <= UInt<12>("h276") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[38] <= UInt<12>("h262") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[39] <= UInt<12>("h24e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[40] <= UInt<12>("h239") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[41] <= UInt<12>("h224") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[42] <= UInt<12>("h20e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[43] <= UInt<12>("h1f9") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[44] <= UInt<12>("h1e3") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[45] <= UInt<12>("h1cc") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[46] <= UInt<12>("h1b6") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[47] <= UInt<12>("h19f") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[48] <= UInt<12>("h188") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[49] <= UInt<12>("h171") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[50] <= UInt<12>("h159") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[51] <= UInt<12>("h141") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[52] <= UInt<12>("h129") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[53] <= UInt<12>("h111") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[54] <= UInt<12>("hf9") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[55] <= UInt<12>("he0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[56] <= UInt<12>("hc8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[57] <= UInt<12>("haf") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[58] <= UInt<12>("h96") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[59] <= UInt<12>("h7d") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[60] <= UInt<12>("h64") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[61] <= UInt<12>("h4b") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[62] <= UInt<12>("h32") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[63] <= UInt<12>("h19") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[64] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[65] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[66] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[67] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[68] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[69] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[70] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[71] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[72] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[73] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[74] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[75] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[76] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[77] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[78] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[79] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[80] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[81] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[82] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[83] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[84] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[85] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[86] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[87] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[88] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[89] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[90] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[91] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[92] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[93] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[94] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[95] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[96] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[97] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[98] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[99] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[100] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[101] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[102] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[103] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[104] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[105] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[106] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[107] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[108] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[109] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[110] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[111] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[112] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[113] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[114] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[115] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[116] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[117] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[118] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[119] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[120] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[121] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[122] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[123] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[124] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[125] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[126] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[127] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    wire twi_sin_tb1_p10 : UInt<12>[128] @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[0] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[1] <= UInt<12>("h19") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[2] <= UInt<12>("h32") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[3] <= UInt<12>("h4b") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[4] <= UInt<12>("h64") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[5] <= UInt<12>("h7d") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[6] <= UInt<12>("h96") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[7] <= UInt<12>("haf") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[8] <= UInt<12>("hc8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[9] <= UInt<12>("he0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[10] <= UInt<12>("hf9") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[11] <= UInt<12>("h111") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[12] <= UInt<12>("h129") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[13] <= UInt<12>("h141") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[14] <= UInt<12>("h159") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[15] <= UInt<12>("h171") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[16] <= UInt<12>("h188") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[17] <= UInt<12>("h19f") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[18] <= UInt<12>("h1b6") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[19] <= UInt<12>("h1cc") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[20] <= UInt<12>("h1e3") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[21] <= UInt<12>("h1f9") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[22] <= UInt<12>("h20e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[23] <= UInt<12>("h224") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[24] <= UInt<12>("h239") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[25] <= UInt<12>("h24e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[26] <= UInt<12>("h262") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[27] <= UInt<12>("h276") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[28] <= UInt<12>("h28a") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[29] <= UInt<12>("h29d") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[30] <= UInt<12>("h2b0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[31] <= UInt<12>("h2c2") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[32] <= UInt<12>("h2d4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[33] <= UInt<12>("h2e6") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[34] <= UInt<12>("h2f7") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[35] <= UInt<12>("h307") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[36] <= UInt<12>("h318") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[37] <= UInt<12>("h327") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[38] <= UInt<12>("h336") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[39] <= UInt<12>("h345") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[40] <= UInt<12>("h353") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[41] <= UInt<12>("h361") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[42] <= UInt<12>("h36e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[43] <= UInt<12>("h37b") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[44] <= UInt<12>("h387") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[45] <= UInt<12>("h393") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[46] <= UInt<12>("h39e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[47] <= UInt<12>("h3a8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[48] <= UInt<12>("h3b2") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[49] <= UInt<12>("h3bb") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[50] <= UInt<12>("h3c4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[51] <= UInt<12>("h3cc") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[52] <= UInt<12>("h3d4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[53] <= UInt<12>("h3db") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[54] <= UInt<12>("h3e1") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[55] <= UInt<12>("h3e7") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[56] <= UInt<12>("h3ec") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[57] <= UInt<12>("h3f1") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[58] <= UInt<12>("h3f5") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[59] <= UInt<12>("h3f8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[60] <= UInt<12>("h3fb") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[61] <= UInt<12>("h3fd") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[62] <= UInt<12>("h3ff") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[63] <= UInt<12>("h400") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[64] <= UInt<12>("h400") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[65] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[66] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[67] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[68] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[69] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[70] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[71] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[72] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[73] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[74] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[75] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[76] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[77] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[78] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[79] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[80] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[81] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[82] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[83] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[84] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[85] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[86] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[87] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[88] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[89] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[90] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[91] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[92] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[93] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[94] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[95] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[96] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[97] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[98] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[99] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[100] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[101] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[102] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[103] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[104] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[105] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[106] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[107] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[108] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[109] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[110] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[111] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[112] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[113] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[114] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[115] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[116] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[117] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[118] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[119] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[120] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[121] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[122] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[123] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[124] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[125] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[126] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[127] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    node _idx_r_T = bits(io.nk, 6, 6) @[FFTTwiddle.scala 35:27]
    node _idx_r_T_1 = bits(io.nk, 5, 0) @[FFTTwiddle.scala 35:50]
    node _idx_r_T_2 = orr(_idx_r_T_1) @[FFTTwiddle.scala 35:73]
    node _idx_r_T_3 = and(_idx_r_T, _idx_r_T_2) @[FFTTwiddle.scala 35:43]
    node _idx_r_T_4 = not(io.nk) @[FFTTwiddle.scala 35:80]
    node _idx_r_T_5 = add(_idx_r_T_4, UInt<1>("h1")) @[FFTTwiddle.scala 35:87]
    node _idx_r_T_6 = tail(_idx_r_T_5, 1) @[FFTTwiddle.scala 35:87]
    node idx_r = mux(_idx_r_T_3, _idx_r_T_6, io.nk) @[FFTTwiddle.scala 35:20]
    node _lut_chg_sign_flag_r_T = bits(io.nk, 6, 6) @[FFTTwiddle.scala 37:36]
    node _lut_chg_sign_flag_r_T_1 = bits(io.nk, 5, 0) @[FFTTwiddle.scala 37:60]
    node _lut_chg_sign_flag_r_T_2 = orr(_lut_chg_sign_flag_r_T_1) @[FFTTwiddle.scala 37:83]
    node lut_chg_sign_flag_r = and(_lut_chg_sign_flag_r_T, _lut_chg_sign_flag_r_T_2) @[FFTTwiddle.scala 37:52]
    node _lut_w_r_T = or(idx_r, UInt<7>("h0"))
    node _lut_w_r_T_1 = bits(_lut_w_r_T, 6, 0)
    node idx_i = bits(idx_r, 6, 0) @[FFTTwiddle.scala 41:22]
    node _chg_sign_flag_r_T = eq(io.twiLutCaseIndex, UInt<2>("h2")) @[FFTTwiddle.scala 47:51]
    node _chg_sign_flag_r_T_1 = eq(lut_chg_sign_flag_r, UInt<1>("h0")) @[FFTTwiddle.scala 47:61]
    node chg_sign_flag_r = mux(_chg_sign_flag_r_T, _chg_sign_flag_r_T_1, lut_chg_sign_flag_r) @[FFTTwiddle.scala 47:30]
    node _chg_sign_flag_i_T = eq(io.twiLutCaseIndex, UInt<1>("h1")) @[FFTTwiddle.scala 48:51]
    node _chg_sign_flag_i_T_1 = eq(UInt<1>("h1"), UInt<1>("h0")) @[FFTTwiddle.scala 48:61]
    node chg_sign_flag_i = mux(_chg_sign_flag_i_T, _chg_sign_flag_i_T_1, UInt<1>("h1")) @[FFTTwiddle.scala 48:30]
    node _io_wR_T = not(twi_cos_tb1_p10[_lut_w_r_T_1]) @[FFTTwiddle.scala 50:36]
    node _io_wR_T_1 = add(_io_wR_T, UInt<1>("h1")) @[FFTTwiddle.scala 50:45]
    node _io_wR_T_2 = tail(_io_wR_T_1, 1) @[FFTTwiddle.scala 50:45]
    node _io_wR_T_3 = mux(chg_sign_flag_r, _io_wR_T_2, twi_cos_tb1_p10[_lut_w_r_T_1]) @[FFTTwiddle.scala 50:17]
    io.wR <= _io_wR_T_3 @[FFTTwiddle.scala 50:11]
    node _io_wI_T = not(twi_sin_tb1_p10[idx_i]) @[FFTTwiddle.scala 51:36]
    node _io_wI_T_1 = add(_io_wI_T, UInt<1>("h1")) @[FFTTwiddle.scala 51:45]
    node _io_wI_T_2 = tail(_io_wI_T_1, 1) @[FFTTwiddle.scala 51:45]
    node _io_wI_T_3 = mux(chg_sign_flag_i, _io_wI_T_2, twi_sin_tb1_p10[idx_i]) @[FFTTwiddle.scala 51:17]
    io.wI <= _io_wI_T_3 @[FFTTwiddle.scala 51:11]

  module FFTMultiply_1 :
    output io : { flip a : UInt<18>, flip b : UInt<18>, flip tc : UInt<1>, product : UInt<36>}

    node _temp_a_T = bits(io.a, 17, 17) @[FFTMultiply.scala 14:26]
    node _temp_a_T_1 = not(io.a) @[FFTMultiply.scala 14:51]
    node _temp_a_T_2 = add(_temp_a_T_1, UInt<1>("h1")) @[FFTMultiply.scala 14:57]
    node _temp_a_T_3 = tail(_temp_a_T_2, 1) @[FFTMultiply.scala 14:57]
    node temp_a = mux(_temp_a_T, _temp_a_T_3, io.a) @[FFTMultiply.scala 14:21]
    node _temp_b_T = bits(io.b, 17, 17) @[FFTMultiply.scala 15:26]
    node _temp_b_T_1 = not(io.b) @[FFTMultiply.scala 15:51]
    node _temp_b_T_2 = add(_temp_b_T_1, UInt<1>("h1")) @[FFTMultiply.scala 15:57]
    node _temp_b_T_3 = tail(_temp_b_T_2, 1) @[FFTMultiply.scala 15:57]
    node temp_b = mux(_temp_b_T, _temp_b_T_3, io.b) @[FFTMultiply.scala 15:21]
    node long_temp1 = mul(temp_a, temp_b) @[FFTMultiply.scala 17:29]
    node _long_temp2_T = sub(long_temp1, UInt<1>("h1")) @[FFTMultiply.scala 18:35]
    node _long_temp2_T_1 = tail(_long_temp2_T, 1) @[FFTMultiply.scala 18:35]
    node long_temp2 = not(_long_temp2_T_1) @[FFTMultiply.scala 18:22]
    node _io_product_T = xor(io.a, io.a) @[FFTMultiply.scala 20:31]
    node _io_product_T_1 = xorr(_io_product_T) @[FFTMultiply.scala 20:39]
    node _io_product_T_2 = neq(_io_product_T_1, UInt<1>("h0")) @[FFTMultiply.scala 20:44]
    node _io_product_T_3 = xor(io.b, io.b) @[FFTMultiply.scala 20:67]
    node _io_product_T_4 = xorr(_io_product_T_3) @[FFTMultiply.scala 20:75]
    node _io_product_T_5 = neq(_io_product_T_4, UInt<1>("h0")) @[FFTMultiply.scala 20:80]
    node _io_product_T_6 = or(_io_product_T_2, _io_product_T_5) @[FFTMultiply.scala 20:57]
    node _io_product_T_7 = xor(io.tc, io.tc) @[FFTMultiply.scala 20:104]
    node _io_product_T_8 = xorr(_io_product_T_7) @[FFTMultiply.scala 20:113]
    node _io_product_T_9 = neq(_io_product_T_8, UInt<1>("h0")) @[FFTMultiply.scala 20:118]
    node _io_product_T_10 = or(_io_product_T_6, _io_product_T_9) @[FFTMultiply.scala 20:93]
    node _io_product_T_11 = mux(UInt<1>("h1"), UInt<36>("hfffffffff"), UInt<36>("h0")) @[Bitwise.scala 77:12]
    node _io_product_T_12 = bits(io.a, 17, 17) @[FFTMultiply.scala 20:194]
    node _io_product_T_13 = bits(io.b, 17, 17) @[FFTMultiply.scala 20:223]
    node _io_product_T_14 = xor(_io_product_T_12, _io_product_T_13) @[FFTMultiply.scala 20:217]
    node _io_product_T_15 = orr(long_temp1) @[FFTMultiply.scala 20:262]
    node _io_product_T_16 = and(_io_product_T_14, _io_product_T_15) @[FFTMultiply.scala 20:247]
    node _io_product_T_17 = cat(UInt<1>("h1"), long_temp2) @[Cat.scala 33:92]
    node _io_product_T_18 = cat(UInt<1>("h0"), long_temp1) @[Cat.scala 33:92]
    node _io_product_T_19 = mux(_io_product_T_16, _io_product_T_17, _io_product_T_18) @[FFTMultiply.scala 20:187]
    node _io_product_T_20 = mul(io.a, io.b) @[FFTMultiply.scala 20:329]
    node _io_product_T_21 = mux(io.tc, _io_product_T_19, _io_product_T_20) @[FFTMultiply.scala 20:176]
    node _io_product_T_22 = mux(_io_product_T_10, _io_product_T_11, _io_product_T_21) @[FFTMultiply.scala 20:22]
    io.product <= _io_product_T_22 @[FFTMultiply.scala 20:16]

  module FFT3PipelineCalc_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip dataInSR : UInt, flip dataInSI : UInt, flip dataInTR : UInt, flip dataInTI : UInt, dataOutSR3c : UInt, dataOutSI3c : UInt, dataOutTR3c : UInt, dataOutTI3c : UInt, flip nk : UInt, flip rShiftSym : UInt<1>, flip isFFT : UInt<1>, flip dataMode : UInt<1>, flip state1c : UInt<1>, flip state2c : UInt<1>}

    clock is invalid
    reset is invalid
    io is invalid
    node _dataInSRRnd_T = bits(io.dataInSR, 15, 15) @[FFT3PipelineCalc.scala 28:38]
    node _dataInSRRnd_T_1 = bits(io.dataInSR, 15, 1) @[FFT3PipelineCalc.scala 28:69]
    node _dataInSRRnd_T_2 = cat(_dataInSRRnd_T, _dataInSRRnd_T_1) @[Cat.scala 33:92]
    node _dataInSRRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInSRRnd_T_4 = bits(io.dataInSR, 0, 0) @[FFT3PipelineCalc.scala 28:138]
    node _dataInSRRnd_T_5 = cat(_dataInSRRnd_T_3, _dataInSRRnd_T_4) @[Cat.scala 33:92]
    node _dataInSRRnd_T_6 = add(_dataInSRRnd_T_2, _dataInSRRnd_T_5) @[FFT3PipelineCalc.scala 28:92]
    node dataInSRRnd = tail(_dataInSRRnd_T_6, 1) @[FFT3PipelineCalc.scala 28:92]
    node _dataInSIRnd_T = bits(io.dataInSI, 15, 15) @[FFT3PipelineCalc.scala 29:38]
    node _dataInSIRnd_T_1 = bits(io.dataInSI, 15, 1) @[FFT3PipelineCalc.scala 29:69]
    node _dataInSIRnd_T_2 = cat(_dataInSIRnd_T, _dataInSIRnd_T_1) @[Cat.scala 33:92]
    node _dataInSIRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInSIRnd_T_4 = bits(io.dataInSI, 0, 0) @[FFT3PipelineCalc.scala 29:138]
    node _dataInSIRnd_T_5 = cat(_dataInSIRnd_T_3, _dataInSIRnd_T_4) @[Cat.scala 33:92]
    node _dataInSIRnd_T_6 = add(_dataInSIRnd_T_2, _dataInSIRnd_T_5) @[FFT3PipelineCalc.scala 29:92]
    node dataInSIRnd = tail(_dataInSIRnd_T_6, 1) @[FFT3PipelineCalc.scala 29:92]
    node _dataInTRRnd_T = bits(io.dataInTR, 15, 15) @[FFT3PipelineCalc.scala 30:38]
    node _dataInTRRnd_T_1 = bits(io.dataInTR, 15, 1) @[FFT3PipelineCalc.scala 30:69]
    node _dataInTRRnd_T_2 = cat(_dataInTRRnd_T, _dataInTRRnd_T_1) @[Cat.scala 33:92]
    node _dataInTRRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInTRRnd_T_4 = bits(io.dataInTR, 0, 0) @[FFT3PipelineCalc.scala 30:138]
    node _dataInTRRnd_T_5 = cat(_dataInTRRnd_T_3, _dataInTRRnd_T_4) @[Cat.scala 33:92]
    node _dataInTRRnd_T_6 = add(_dataInTRRnd_T_2, _dataInTRRnd_T_5) @[FFT3PipelineCalc.scala 30:92]
    node dataInTRRnd = tail(_dataInTRRnd_T_6, 1) @[FFT3PipelineCalc.scala 30:92]
    node _dataInTIRnd_T = bits(io.dataInTI, 15, 15) @[FFT3PipelineCalc.scala 31:38]
    node _dataInTIRnd_T_1 = bits(io.dataInTI, 15, 1) @[FFT3PipelineCalc.scala 31:69]
    node _dataInTIRnd_T_2 = cat(_dataInTIRnd_T, _dataInTIRnd_T_1) @[Cat.scala 33:92]
    node _dataInTIRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInTIRnd_T_4 = bits(io.dataInTI, 0, 0) @[FFT3PipelineCalc.scala 31:138]
    node _dataInTIRnd_T_5 = cat(_dataInTIRnd_T_3, _dataInTIRnd_T_4) @[Cat.scala 33:92]
    node _dataInTIRnd_T_6 = add(_dataInTIRnd_T_2, _dataInTIRnd_T_5) @[FFT3PipelineCalc.scala 31:92]
    node dataInTIRnd = tail(_dataInTIRnd_T_6, 1) @[FFT3PipelineCalc.scala 31:92]
    node dataInSR1c = mux(io.rShiftSym, dataInSRRnd, io.dataInSR) @[FFT3PipelineCalc.scala 33:25]
    node dataInSI1c = mux(io.rShiftSym, dataInSIRnd, io.dataInSI) @[FFT3PipelineCalc.scala 34:25]
    node dataInTR1c = mux(io.rShiftSym, dataInTRRnd, io.dataInTR) @[FFT3PipelineCalc.scala 35:25]
    node dataInTI1c = mux(io.rShiftSym, dataInTIRnd, io.dataInTI) @[FFT3PipelineCalc.scala 36:25]
    reg nk1c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      nk1c <= io.nk @[Reg.scala 36:22]
    node _twiLutIdx1c_T = bits(nk1c, 5, 0) @[FFT3PipelineCalc.scala 40:31]
    node twiLutIdx1c = cat(_twiLutIdx1c_T, UInt<1>("h0")) @[Cat.scala 33:92]
    node twiLutCaseIdx1c = mux(io.isFFT, UInt<2>("h0"), UInt<2>("h1")) @[FFT3PipelineCalc.scala 42:30]
    inst fftTwiddle of FFTTwiddle_1 @[FFT3PipelineCalc.scala 44:28]
    fftTwiddle.io.nk <= twiLutIdx1c @[FFT3PipelineCalc.scala 45:22]
    fftTwiddle.io.twiLutCaseIndex <= twiLutCaseIdx1c @[FFT3PipelineCalc.scala 46:35]
    reg sR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      sR2c <= dataInSR1c @[Reg.scala 36:22]
    reg sI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      sI2c <= dataInSI1c @[Reg.scala 36:22]
    reg tR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      tR2c <= dataInTR1c @[Reg.scala 36:22]
    reg tI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      tI2c <= dataInTI1c @[Reg.scala 36:22]
    node _wR2c_T = mux(UInt<1>("h0"), UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 77:12]
    node _wR2c_T_1 = cat(fftTwiddle.io.wR, _wR2c_T) @[Cat.scala 33:92]
    reg wR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      wR2c <= _wR2c_T_1 @[Reg.scala 36:22]
    node _wI2c_T = mux(UInt<1>("h0"), UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 77:12]
    node _wI2c_T_1 = cat(fftTwiddle.io.wI, _wI2c_T) @[Cat.scala 33:92]
    reg wI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      wI2c <= _wI2c_T_1 @[Reg.scala 36:22]
    node _addTRI_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 57:34]
    node _addTRI_T_1 = bits(_addTRI_T, 0, 0) @[Bitwise.scala 77:15]
    node _addTRI_T_2 = mux(_addTRI_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _addTRI_T_3 = cat(_addTRI_T_2, tR2c) @[Cat.scala 33:92]
    node _addTRI_T_4 = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 57:79]
    node _addTRI_T_5 = bits(_addTRI_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _addTRI_T_6 = mux(_addTRI_T_5, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _addTRI_T_7 = cat(_addTRI_T_6, tI2c) @[Cat.scala 33:92]
    node _addTRI_T_8 = add(_addTRI_T_3, _addTRI_T_7) @[FFT3PipelineCalc.scala 57:61]
    node addTRI = tail(_addTRI_T_8, 1) @[FFT3PipelineCalc.scala 57:61]
    node _addWRI_T = bits(wR2c, 16, 16) @[FFT3PipelineCalc.scala 58:26]
    node _addWRI_T_1 = cat(_addWRI_T, wR2c) @[Cat.scala 33:92]
    node _addWRI_T_2 = bits(wI2c, 16, 16) @[FFT3PipelineCalc.scala 58:62]
    node _addWRI_T_3 = cat(_addWRI_T_2, wI2c) @[Cat.scala 33:92]
    node _addWRI_T_4 = add(_addWRI_T_1, _addWRI_T_3) @[FFT3PipelineCalc.scala 58:52]
    node addWRI = tail(_addWRI_T_4, 1) @[FFT3PipelineCalc.scala 58:52]
    inst fftMultiply of FFTMultiply_1 @[FFT3PipelineCalc.scala 59:29]
    fftMultiply.io.a <= addTRI @[FFT3PipelineCalc.scala 60:22]
    fftMultiply.io.b <= addWRI @[FFT3PipelineCalc.scala 61:22]
    fftMultiply.io.tc <= UInt<1>("h1") @[FFT3PipelineCalc.scala 62:23]
    node _multRPre_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 65:51]
    node _multRPre_T_1 = bits(_multRPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _multRPre_T_2 = mux(_multRPre_T_1, UInt<17>("h1ffff"), UInt<17>("h0")) @[Bitwise.scala 77:12]
    node _multRPre_T_3 = cat(_multRPre_T_2, tR2c) @[Cat.scala 33:92]
    node _multRPre_T_4 = bits(wR2c, 16, 16) @[FFT3PipelineCalc.scala 65:111]
    node _multRPre_T_5 = bits(_multRPre_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _multRPre_T_6 = mux(_multRPre_T_5, UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
    node _multRPre_T_7 = cat(_multRPre_T_6, wR2c) @[Cat.scala 33:92]
    node multRPre = mul(_multRPre_T_3, _multRPre_T_7) @[FFT3PipelineCalc.scala 65:78]
    node multR = bits(multRPre, 32, 0) @[FFT3PipelineCalc.scala 66:25]
    node _multIPre_T = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 68:51]
    node _multIPre_T_1 = bits(_multIPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _multIPre_T_2 = mux(_multIPre_T_1, UInt<17>("h1ffff"), UInt<17>("h0")) @[Bitwise.scala 77:12]
    node _multIPre_T_3 = cat(_multIPre_T_2, tI2c) @[Cat.scala 33:92]
    node _multIPre_T_4 = bits(wI2c, 16, 16) @[FFT3PipelineCalc.scala 68:111]
    node _multIPre_T_5 = bits(_multIPre_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _multIPre_T_6 = mux(_multIPre_T_5, UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
    node _multIPre_T_7 = cat(_multIPre_T_6, wI2c) @[Cat.scala 33:92]
    node multIPre = mul(_multIPre_T_3, _multIPre_T_7) @[FFT3PipelineCalc.scala 68:78]
    node multI = bits(multIPre, 32, 0) @[FFT3PipelineCalc.scala 69:25]
    node _qR2cKernel_T = bits(multR, 32, 32) @[FFT3PipelineCalc.scala 71:31]
    node _qR2cKernel_T_1 = bits(multR, 30, 15) @[FFT3PipelineCalc.scala 71:62]
    node _qR2cKernel_T_2 = cat(_qR2cKernel_T, _qR2cKernel_T_1) @[Cat.scala 33:92]
    node _qR2cKernel_T_3 = bits(multI, 32, 32) @[FFT3PipelineCalc.scala 71:119]
    node _qR2cKernel_T_4 = bits(multI, 30, 15) @[FFT3PipelineCalc.scala 71:150]
    node _qR2cKernel_T_5 = cat(_qR2cKernel_T_3, _qR2cKernel_T_4) @[Cat.scala 33:92]
    node _qR2cKernel_T_6 = sub(_qR2cKernel_T_2, _qR2cKernel_T_5) @[FFT3PipelineCalc.scala 71:108]
    node qR2cKernel = tail(_qR2cKernel_T_6, 1) @[FFT3PipelineCalc.scala 71:108]
    node _qI2cKernel_T = bits(fftMultiply.io.product, 35, 35) @[FFT3PipelineCalc.scala 72:31]
    node _qI2cKernel_T_1 = bits(fftMultiply.io.product, 30, 15) @[FFT3PipelineCalc.scala 72:66]
    node _qI2cKernel_T_2 = cat(_qI2cKernel_T, _qI2cKernel_T_1) @[Cat.scala 33:92]
    node _qI2cKernel_T_3 = bits(multR, 32, 32) @[FFT3PipelineCalc.scala 72:123]
    node _qI2cKernel_T_4 = bits(multR, 30, 15) @[FFT3PipelineCalc.scala 72:154]
    node _qI2cKernel_T_5 = cat(_qI2cKernel_T_3, _qI2cKernel_T_4) @[Cat.scala 33:92]
    node _qI2cKernel_T_6 = sub(_qI2cKernel_T_2, _qI2cKernel_T_5) @[FFT3PipelineCalc.scala 72:112]
    node _qI2cKernel_T_7 = tail(_qI2cKernel_T_6, 1) @[FFT3PipelineCalc.scala 72:112]
    node _qI2cKernel_T_8 = bits(multI, 32, 32) @[FFT3PipelineCalc.scala 72:211]
    node _qI2cKernel_T_9 = bits(multI, 30, 15) @[FFT3PipelineCalc.scala 72:242]
    node _qI2cKernel_T_10 = cat(_qI2cKernel_T_8, _qI2cKernel_T_9) @[Cat.scala 33:92]
    node _qI2cKernel_T_11 = sub(_qI2cKernel_T_7, _qI2cKernel_T_10) @[FFT3PipelineCalc.scala 72:200]
    node qI2cKernel = tail(_qI2cKernel_T_11, 1) @[FFT3PipelineCalc.scala 72:200]
    node _qR2cProc_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 74:28]
    node qR2cProc = cat(_qR2cProc_T, tR2c) @[Cat.scala 33:92]
    node _qI2cProc_T = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 75:29]
    node _qI2cProc_T_1 = cat(_qI2cProc_T, tI2c) @[Cat.scala 33:92]
    node _qI2cProc_T_2 = not(_qI2cProc_T_1) @[FFT3PipelineCalc.scala 75:20]
    node _qI2cProc_T_3 = add(_qI2cProc_T_2, UInt<1>("h1")) @[FFT3PipelineCalc.scala 75:55]
    node qI2cProc = tail(_qI2cProc_T_3, 1) @[FFT3PipelineCalc.scala 75:55]
    node qR2c = mux(io.dataMode, qR2cProc, qR2cKernel) @[FFT3PipelineCalc.scala 77:19]
    node qI2c = mux(io.dataMode, qI2cProc, qI2cKernel) @[FFT3PipelineCalc.scala 78:19]
    reg sR3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      sR3c <= sR2c @[Reg.scala 36:22]
    reg sI3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      sI3c <= sI2c @[Reg.scala 36:22]
    reg qR3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      qR3c <= qR2c @[Reg.scala 36:22]
    reg qI3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      qI3c <= qI2c @[Reg.scala 36:22]
    node _xR3cPre_T = bits(sR3c, 15, 15) @[FFT3PipelineCalc.scala 86:35]
    node _xR3cPre_T_1 = bits(_xR3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _xR3cPre_T_2 = mux(_xR3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _xR3cPre_T_3 = cat(_xR3cPre_T_2, sR3c) @[Cat.scala 33:92]
    node _xR3cPre_T_4 = bits(qR3c, 16, 16) @[FFT3PipelineCalc.scala 86:72]
    node _xR3cPre_T_5 = cat(_xR3cPre_T_4, qR3c) @[Cat.scala 33:92]
    node _xR3cPre_T_6 = add(_xR3cPre_T_3, _xR3cPre_T_5) @[FFT3PipelineCalc.scala 86:62]
    node xR3cPre = tail(_xR3cPre_T_6, 1) @[FFT3PipelineCalc.scala 86:62]
    node _xI3cPre_T = bits(sI3c, 15, 15) @[FFT3PipelineCalc.scala 87:35]
    node _xI3cPre_T_1 = bits(_xI3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _xI3cPre_T_2 = mux(_xI3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _xI3cPre_T_3 = cat(_xI3cPre_T_2, sI3c) @[Cat.scala 33:92]
    node _xI3cPre_T_4 = bits(qI3c, 16, 16) @[FFT3PipelineCalc.scala 87:72]
    node _xI3cPre_T_5 = cat(_xI3cPre_T_4, qI3c) @[Cat.scala 33:92]
    node _xI3cPre_T_6 = add(_xI3cPre_T_3, _xI3cPre_T_5) @[FFT3PipelineCalc.scala 87:62]
    node xI3cPre = tail(_xI3cPre_T_6, 1) @[FFT3PipelineCalc.scala 87:62]
    node _xR3c_T = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:28]
    node _xR3c_T_1 = bits(xR3cPre, 16, 16) @[FFT3PipelineCalc.scala 89:56]
    node _xR3c_T_2 = xor(_xR3c_T, _xR3c_T_1) @[FFT3PipelineCalc.scala 89:47]
    node _xR3c_T_3 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:88]
    node _xR3c_T_4 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:139]
    node _xR3c_T_5 = bits(_xR3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _xR3c_T_6 = mux(_xR3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xR3c_T_7 = not(_xR3c_T_6) @[FFT3PipelineCalc.scala 89:108]
    node _xR3c_T_8 = cat(_xR3c_T_3, _xR3c_T_7) @[Cat.scala 33:92]
    node _xR3c_T_9 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:173]
    node _xR3c_T_10 = bits(xR3cPre, 15, 15) @[FFT3PipelineCalc.scala 89:201]
    node _xR3c_T_11 = xor(_xR3c_T_9, _xR3c_T_10) @[FFT3PipelineCalc.scala 89:192]
    node _xR3c_T_12 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:233]
    node _xR3c_T_13 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:284]
    node _xR3c_T_14 = bits(_xR3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _xR3c_T_15 = mux(_xR3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xR3c_T_16 = not(_xR3c_T_15) @[FFT3PipelineCalc.scala 89:253]
    node _xR3c_T_17 = cat(_xR3c_T_12, _xR3c_T_16) @[Cat.scala 33:92]
    node _xR3c_T_18 = bits(xR3cPre, 15, 0) @[FFT3PipelineCalc.scala 89:313]
    node _xR3c_T_19 = mux(_xR3c_T_11, _xR3c_T_17, _xR3c_T_18) @[FFT3PipelineCalc.scala 89:164]
    node xR3c = mux(_xR3c_T_2, _xR3c_T_8, _xR3c_T_19) @[FFT3PipelineCalc.scala 89:19]
    node _xI3c_T = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:28]
    node _xI3c_T_1 = bits(xI3cPre, 16, 16) @[FFT3PipelineCalc.scala 90:56]
    node _xI3c_T_2 = xor(_xI3c_T, _xI3c_T_1) @[FFT3PipelineCalc.scala 90:47]
    node _xI3c_T_3 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:88]
    node _xI3c_T_4 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:139]
    node _xI3c_T_5 = bits(_xI3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _xI3c_T_6 = mux(_xI3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xI3c_T_7 = not(_xI3c_T_6) @[FFT3PipelineCalc.scala 90:108]
    node _xI3c_T_8 = cat(_xI3c_T_3, _xI3c_T_7) @[Cat.scala 33:92]
    node _xI3c_T_9 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:173]
    node _xI3c_T_10 = bits(xI3cPre, 15, 15) @[FFT3PipelineCalc.scala 90:201]
    node _xI3c_T_11 = xor(_xI3c_T_9, _xI3c_T_10) @[FFT3PipelineCalc.scala 90:192]
    node _xI3c_T_12 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:233]
    node _xI3c_T_13 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:284]
    node _xI3c_T_14 = bits(_xI3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _xI3c_T_15 = mux(_xI3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xI3c_T_16 = not(_xI3c_T_15) @[FFT3PipelineCalc.scala 90:253]
    node _xI3c_T_17 = cat(_xI3c_T_12, _xI3c_T_16) @[Cat.scala 33:92]
    node _xI3c_T_18 = bits(xI3cPre, 15, 0) @[FFT3PipelineCalc.scala 90:313]
    node _xI3c_T_19 = mux(_xI3c_T_11, _xI3c_T_17, _xI3c_T_18) @[FFT3PipelineCalc.scala 90:164]
    node xI3c = mux(_xI3c_T_2, _xI3c_T_8, _xI3c_T_19) @[FFT3PipelineCalc.scala 90:19]
    io.dataOutSR3c <= xR3c @[FFT3PipelineCalc.scala 92:20]
    io.dataOutSI3c <= xI3c @[FFT3PipelineCalc.scala 93:20]
    node _yR3cPre_T = bits(sR3c, 15, 15) @[FFT3PipelineCalc.scala 95:35]
    node _yR3cPre_T_1 = bits(_yR3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _yR3cPre_T_2 = mux(_yR3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _yR3cPre_T_3 = cat(_yR3cPre_T_2, sR3c) @[Cat.scala 33:92]
    node _yR3cPre_T_4 = bits(qR3c, 16, 16) @[FFT3PipelineCalc.scala 95:72]
    node _yR3cPre_T_5 = cat(_yR3cPre_T_4, qR3c) @[Cat.scala 33:92]
    node _yR3cPre_T_6 = sub(_yR3cPre_T_3, _yR3cPre_T_5) @[FFT3PipelineCalc.scala 95:62]
    node yR3cPre = tail(_yR3cPre_T_6, 1) @[FFT3PipelineCalc.scala 95:62]
    node _yI3cPre_T = bits(sI3c, 15, 15) @[FFT3PipelineCalc.scala 96:35]
    node _yI3cPre_T_1 = bits(_yI3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _yI3cPre_T_2 = mux(_yI3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _yI3cPre_T_3 = cat(_yI3cPre_T_2, sI3c) @[Cat.scala 33:92]
    node _yI3cPre_T_4 = bits(qI3c, 16, 16) @[FFT3PipelineCalc.scala 96:72]
    node _yI3cPre_T_5 = cat(_yI3cPre_T_4, qI3c) @[Cat.scala 33:92]
    node _yI3cPre_T_6 = sub(_yI3cPre_T_3, _yI3cPre_T_5) @[FFT3PipelineCalc.scala 96:62]
    node yI3cPre = tail(_yI3cPre_T_6, 1) @[FFT3PipelineCalc.scala 96:62]
    node _yR3c_T = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:28]
    node _yR3c_T_1 = bits(yR3cPre, 16, 16) @[FFT3PipelineCalc.scala 98:56]
    node _yR3c_T_2 = xor(_yR3c_T, _yR3c_T_1) @[FFT3PipelineCalc.scala 98:47]
    node _yR3c_T_3 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:88]
    node _yR3c_T_4 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:139]
    node _yR3c_T_5 = bits(_yR3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _yR3c_T_6 = mux(_yR3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yR3c_T_7 = not(_yR3c_T_6) @[FFT3PipelineCalc.scala 98:108]
    node _yR3c_T_8 = cat(_yR3c_T_3, _yR3c_T_7) @[Cat.scala 33:92]
    node _yR3c_T_9 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:173]
    node _yR3c_T_10 = bits(yR3cPre, 15, 15) @[FFT3PipelineCalc.scala 98:201]
    node _yR3c_T_11 = xor(_yR3c_T_9, _yR3c_T_10) @[FFT3PipelineCalc.scala 98:192]
    node _yR3c_T_12 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:233]
    node _yR3c_T_13 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:284]
    node _yR3c_T_14 = bits(_yR3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _yR3c_T_15 = mux(_yR3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yR3c_T_16 = not(_yR3c_T_15) @[FFT3PipelineCalc.scala 98:253]
    node _yR3c_T_17 = cat(_yR3c_T_12, _yR3c_T_16) @[Cat.scala 33:92]
    node _yR3c_T_18 = bits(yR3cPre, 15, 0) @[FFT3PipelineCalc.scala 98:313]
    node _yR3c_T_19 = mux(_yR3c_T_11, _yR3c_T_17, _yR3c_T_18) @[FFT3PipelineCalc.scala 98:164]
    node yR3c = mux(_yR3c_T_2, _yR3c_T_8, _yR3c_T_19) @[FFT3PipelineCalc.scala 98:19]
    node _yI3c_T = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:28]
    node _yI3c_T_1 = bits(yI3cPre, 16, 16) @[FFT3PipelineCalc.scala 99:56]
    node _yI3c_T_2 = xor(_yI3c_T, _yI3c_T_1) @[FFT3PipelineCalc.scala 99:47]
    node _yI3c_T_3 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:88]
    node _yI3c_T_4 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:139]
    node _yI3c_T_5 = bits(_yI3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _yI3c_T_6 = mux(_yI3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yI3c_T_7 = not(_yI3c_T_6) @[FFT3PipelineCalc.scala 99:108]
    node _yI3c_T_8 = cat(_yI3c_T_3, _yI3c_T_7) @[Cat.scala 33:92]
    node _yI3c_T_9 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:173]
    node _yI3c_T_10 = bits(yI3cPre, 15, 15) @[FFT3PipelineCalc.scala 99:201]
    node _yI3c_T_11 = xor(_yI3c_T_9, _yI3c_T_10) @[FFT3PipelineCalc.scala 99:192]
    node _yI3c_T_12 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:233]
    node _yI3c_T_13 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:284]
    node _yI3c_T_14 = bits(_yI3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _yI3c_T_15 = mux(_yI3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yI3c_T_16 = not(_yI3c_T_15) @[FFT3PipelineCalc.scala 99:253]
    node _yI3c_T_17 = cat(_yI3c_T_12, _yI3c_T_16) @[Cat.scala 33:92]
    node _yI3c_T_18 = bits(yI3cPre, 15, 0) @[FFT3PipelineCalc.scala 99:313]
    node _yI3c_T_19 = mux(_yI3c_T_11, _yI3c_T_17, _yI3c_T_18) @[FFT3PipelineCalc.scala 99:164]
    node yI3c = mux(_yI3c_T_2, _yI3c_T_8, _yI3c_T_19) @[FFT3PipelineCalc.scala 99:19]
    io.dataOutTR3c <= yR3c @[FFT3PipelineCalc.scala 101:20]
    io.dataOutTI3c <= yI3c @[FFT3PipelineCalc.scala 102:20]

  module FFTTwiddle_2 :
    output io : { flip nk : UInt, flip twiLutCaseIndex : UInt, wR : UInt, wI : UInt}

    wire twi_cos_tb1_p10 : UInt<12>[128] @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[0] <= UInt<12>("h400") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[1] <= UInt<12>("h400") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[2] <= UInt<12>("h3ff") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[3] <= UInt<12>("h3fd") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[4] <= UInt<12>("h3fb") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[5] <= UInt<12>("h3f8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[6] <= UInt<12>("h3f5") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[7] <= UInt<12>("h3f1") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[8] <= UInt<12>("h3ec") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[9] <= UInt<12>("h3e7") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[10] <= UInt<12>("h3e1") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[11] <= UInt<12>("h3db") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[12] <= UInt<12>("h3d4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[13] <= UInt<12>("h3cc") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[14] <= UInt<12>("h3c4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[15] <= UInt<12>("h3bb") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[16] <= UInt<12>("h3b2") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[17] <= UInt<12>("h3a8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[18] <= UInt<12>("h39e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[19] <= UInt<12>("h393") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[20] <= UInt<12>("h387") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[21] <= UInt<12>("h37b") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[22] <= UInt<12>("h36e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[23] <= UInt<12>("h361") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[24] <= UInt<12>("h353") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[25] <= UInt<12>("h345") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[26] <= UInt<12>("h336") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[27] <= UInt<12>("h327") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[28] <= UInt<12>("h318") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[29] <= UInt<12>("h307") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[30] <= UInt<12>("h2f7") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[31] <= UInt<12>("h2e6") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[32] <= UInt<12>("h2d4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[33] <= UInt<12>("h2c2") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[34] <= UInt<12>("h2b0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[35] <= UInt<12>("h29d") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[36] <= UInt<12>("h28a") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[37] <= UInt<12>("h276") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[38] <= UInt<12>("h262") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[39] <= UInt<12>("h24e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[40] <= UInt<12>("h239") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[41] <= UInt<12>("h224") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[42] <= UInt<12>("h20e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[43] <= UInt<12>("h1f9") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[44] <= UInt<12>("h1e3") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[45] <= UInt<12>("h1cc") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[46] <= UInt<12>("h1b6") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[47] <= UInt<12>("h19f") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[48] <= UInt<12>("h188") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[49] <= UInt<12>("h171") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[50] <= UInt<12>("h159") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[51] <= UInt<12>("h141") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[52] <= UInt<12>("h129") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[53] <= UInt<12>("h111") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[54] <= UInt<12>("hf9") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[55] <= UInt<12>("he0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[56] <= UInt<12>("hc8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[57] <= UInt<12>("haf") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[58] <= UInt<12>("h96") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[59] <= UInt<12>("h7d") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[60] <= UInt<12>("h64") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[61] <= UInt<12>("h4b") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[62] <= UInt<12>("h32") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[63] <= UInt<12>("h19") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[64] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[65] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[66] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[67] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[68] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[69] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[70] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[71] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[72] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[73] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[74] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[75] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[76] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[77] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[78] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[79] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[80] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[81] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[82] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[83] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[84] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[85] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[86] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[87] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[88] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[89] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[90] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[91] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[92] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[93] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[94] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[95] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[96] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[97] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[98] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[99] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[100] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[101] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[102] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[103] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[104] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[105] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[106] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[107] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[108] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[109] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[110] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[111] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[112] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[113] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[114] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[115] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[116] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[117] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[118] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[119] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[120] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[121] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[122] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[123] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[124] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[125] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[126] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[127] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    wire twi_sin_tb1_p10 : UInt<12>[128] @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[0] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[1] <= UInt<12>("h19") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[2] <= UInt<12>("h32") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[3] <= UInt<12>("h4b") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[4] <= UInt<12>("h64") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[5] <= UInt<12>("h7d") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[6] <= UInt<12>("h96") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[7] <= UInt<12>("haf") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[8] <= UInt<12>("hc8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[9] <= UInt<12>("he0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[10] <= UInt<12>("hf9") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[11] <= UInt<12>("h111") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[12] <= UInt<12>("h129") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[13] <= UInt<12>("h141") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[14] <= UInt<12>("h159") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[15] <= UInt<12>("h171") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[16] <= UInt<12>("h188") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[17] <= UInt<12>("h19f") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[18] <= UInt<12>("h1b6") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[19] <= UInt<12>("h1cc") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[20] <= UInt<12>("h1e3") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[21] <= UInt<12>("h1f9") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[22] <= UInt<12>("h20e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[23] <= UInt<12>("h224") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[24] <= UInt<12>("h239") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[25] <= UInt<12>("h24e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[26] <= UInt<12>("h262") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[27] <= UInt<12>("h276") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[28] <= UInt<12>("h28a") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[29] <= UInt<12>("h29d") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[30] <= UInt<12>("h2b0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[31] <= UInt<12>("h2c2") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[32] <= UInt<12>("h2d4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[33] <= UInt<12>("h2e6") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[34] <= UInt<12>("h2f7") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[35] <= UInt<12>("h307") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[36] <= UInt<12>("h318") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[37] <= UInt<12>("h327") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[38] <= UInt<12>("h336") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[39] <= UInt<12>("h345") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[40] <= UInt<12>("h353") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[41] <= UInt<12>("h361") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[42] <= UInt<12>("h36e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[43] <= UInt<12>("h37b") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[44] <= UInt<12>("h387") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[45] <= UInt<12>("h393") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[46] <= UInt<12>("h39e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[47] <= UInt<12>("h3a8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[48] <= UInt<12>("h3b2") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[49] <= UInt<12>("h3bb") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[50] <= UInt<12>("h3c4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[51] <= UInt<12>("h3cc") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[52] <= UInt<12>("h3d4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[53] <= UInt<12>("h3db") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[54] <= UInt<12>("h3e1") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[55] <= UInt<12>("h3e7") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[56] <= UInt<12>("h3ec") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[57] <= UInt<12>("h3f1") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[58] <= UInt<12>("h3f5") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[59] <= UInt<12>("h3f8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[60] <= UInt<12>("h3fb") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[61] <= UInt<12>("h3fd") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[62] <= UInt<12>("h3ff") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[63] <= UInt<12>("h400") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[64] <= UInt<12>("h400") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[65] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[66] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[67] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[68] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[69] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[70] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[71] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[72] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[73] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[74] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[75] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[76] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[77] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[78] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[79] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[80] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[81] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[82] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[83] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[84] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[85] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[86] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[87] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[88] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[89] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[90] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[91] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[92] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[93] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[94] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[95] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[96] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[97] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[98] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[99] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[100] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[101] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[102] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[103] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[104] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[105] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[106] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[107] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[108] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[109] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[110] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[111] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[112] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[113] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[114] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[115] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[116] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[117] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[118] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[119] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[120] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[121] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[122] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[123] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[124] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[125] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[126] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[127] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    node _idx_r_T = bits(io.nk, 6, 6) @[FFTTwiddle.scala 35:27]
    node _idx_r_T_1 = bits(io.nk, 5, 0) @[FFTTwiddle.scala 35:50]
    node _idx_r_T_2 = orr(_idx_r_T_1) @[FFTTwiddle.scala 35:73]
    node _idx_r_T_3 = and(_idx_r_T, _idx_r_T_2) @[FFTTwiddle.scala 35:43]
    node _idx_r_T_4 = not(io.nk) @[FFTTwiddle.scala 35:80]
    node _idx_r_T_5 = add(_idx_r_T_4, UInt<1>("h1")) @[FFTTwiddle.scala 35:87]
    node _idx_r_T_6 = tail(_idx_r_T_5, 1) @[FFTTwiddle.scala 35:87]
    node idx_r = mux(_idx_r_T_3, _idx_r_T_6, io.nk) @[FFTTwiddle.scala 35:20]
    node _lut_chg_sign_flag_r_T = bits(io.nk, 6, 6) @[FFTTwiddle.scala 37:36]
    node _lut_chg_sign_flag_r_T_1 = bits(io.nk, 5, 0) @[FFTTwiddle.scala 37:60]
    node _lut_chg_sign_flag_r_T_2 = orr(_lut_chg_sign_flag_r_T_1) @[FFTTwiddle.scala 37:83]
    node lut_chg_sign_flag_r = and(_lut_chg_sign_flag_r_T, _lut_chg_sign_flag_r_T_2) @[FFTTwiddle.scala 37:52]
    node _lut_w_r_T = or(idx_r, UInt<7>("h0"))
    node _lut_w_r_T_1 = bits(_lut_w_r_T, 6, 0)
    node idx_i = bits(idx_r, 6, 0) @[FFTTwiddle.scala 41:22]
    node _chg_sign_flag_r_T = eq(io.twiLutCaseIndex, UInt<2>("h2")) @[FFTTwiddle.scala 47:51]
    node _chg_sign_flag_r_T_1 = eq(lut_chg_sign_flag_r, UInt<1>("h0")) @[FFTTwiddle.scala 47:61]
    node chg_sign_flag_r = mux(_chg_sign_flag_r_T, _chg_sign_flag_r_T_1, lut_chg_sign_flag_r) @[FFTTwiddle.scala 47:30]
    node _chg_sign_flag_i_T = eq(io.twiLutCaseIndex, UInt<1>("h1")) @[FFTTwiddle.scala 48:51]
    node _chg_sign_flag_i_T_1 = eq(UInt<1>("h1"), UInt<1>("h0")) @[FFTTwiddle.scala 48:61]
    node chg_sign_flag_i = mux(_chg_sign_flag_i_T, _chg_sign_flag_i_T_1, UInt<1>("h1")) @[FFTTwiddle.scala 48:30]
    node _io_wR_T = not(twi_cos_tb1_p10[_lut_w_r_T_1]) @[FFTTwiddle.scala 50:36]
    node _io_wR_T_1 = add(_io_wR_T, UInt<1>("h1")) @[FFTTwiddle.scala 50:45]
    node _io_wR_T_2 = tail(_io_wR_T_1, 1) @[FFTTwiddle.scala 50:45]
    node _io_wR_T_3 = mux(chg_sign_flag_r, _io_wR_T_2, twi_cos_tb1_p10[_lut_w_r_T_1]) @[FFTTwiddle.scala 50:17]
    io.wR <= _io_wR_T_3 @[FFTTwiddle.scala 50:11]
    node _io_wI_T = not(twi_sin_tb1_p10[idx_i]) @[FFTTwiddle.scala 51:36]
    node _io_wI_T_1 = add(_io_wI_T, UInt<1>("h1")) @[FFTTwiddle.scala 51:45]
    node _io_wI_T_2 = tail(_io_wI_T_1, 1) @[FFTTwiddle.scala 51:45]
    node _io_wI_T_3 = mux(chg_sign_flag_i, _io_wI_T_2, twi_sin_tb1_p10[idx_i]) @[FFTTwiddle.scala 51:17]
    io.wI <= _io_wI_T_3 @[FFTTwiddle.scala 51:11]

  module FFTMultiply_2 :
    output io : { flip a : UInt<18>, flip b : UInt<18>, flip tc : UInt<1>, product : UInt<36>}

    node _temp_a_T = bits(io.a, 17, 17) @[FFTMultiply.scala 14:26]
    node _temp_a_T_1 = not(io.a) @[FFTMultiply.scala 14:51]
    node _temp_a_T_2 = add(_temp_a_T_1, UInt<1>("h1")) @[FFTMultiply.scala 14:57]
    node _temp_a_T_3 = tail(_temp_a_T_2, 1) @[FFTMultiply.scala 14:57]
    node temp_a = mux(_temp_a_T, _temp_a_T_3, io.a) @[FFTMultiply.scala 14:21]
    node _temp_b_T = bits(io.b, 17, 17) @[FFTMultiply.scala 15:26]
    node _temp_b_T_1 = not(io.b) @[FFTMultiply.scala 15:51]
    node _temp_b_T_2 = add(_temp_b_T_1, UInt<1>("h1")) @[FFTMultiply.scala 15:57]
    node _temp_b_T_3 = tail(_temp_b_T_2, 1) @[FFTMultiply.scala 15:57]
    node temp_b = mux(_temp_b_T, _temp_b_T_3, io.b) @[FFTMultiply.scala 15:21]
    node long_temp1 = mul(temp_a, temp_b) @[FFTMultiply.scala 17:29]
    node _long_temp2_T = sub(long_temp1, UInt<1>("h1")) @[FFTMultiply.scala 18:35]
    node _long_temp2_T_1 = tail(_long_temp2_T, 1) @[FFTMultiply.scala 18:35]
    node long_temp2 = not(_long_temp2_T_1) @[FFTMultiply.scala 18:22]
    node _io_product_T = xor(io.a, io.a) @[FFTMultiply.scala 20:31]
    node _io_product_T_1 = xorr(_io_product_T) @[FFTMultiply.scala 20:39]
    node _io_product_T_2 = neq(_io_product_T_1, UInt<1>("h0")) @[FFTMultiply.scala 20:44]
    node _io_product_T_3 = xor(io.b, io.b) @[FFTMultiply.scala 20:67]
    node _io_product_T_4 = xorr(_io_product_T_3) @[FFTMultiply.scala 20:75]
    node _io_product_T_5 = neq(_io_product_T_4, UInt<1>("h0")) @[FFTMultiply.scala 20:80]
    node _io_product_T_6 = or(_io_product_T_2, _io_product_T_5) @[FFTMultiply.scala 20:57]
    node _io_product_T_7 = xor(io.tc, io.tc) @[FFTMultiply.scala 20:104]
    node _io_product_T_8 = xorr(_io_product_T_7) @[FFTMultiply.scala 20:113]
    node _io_product_T_9 = neq(_io_product_T_8, UInt<1>("h0")) @[FFTMultiply.scala 20:118]
    node _io_product_T_10 = or(_io_product_T_6, _io_product_T_9) @[FFTMultiply.scala 20:93]
    node _io_product_T_11 = mux(UInt<1>("h1"), UInt<36>("hfffffffff"), UInt<36>("h0")) @[Bitwise.scala 77:12]
    node _io_product_T_12 = bits(io.a, 17, 17) @[FFTMultiply.scala 20:194]
    node _io_product_T_13 = bits(io.b, 17, 17) @[FFTMultiply.scala 20:223]
    node _io_product_T_14 = xor(_io_product_T_12, _io_product_T_13) @[FFTMultiply.scala 20:217]
    node _io_product_T_15 = orr(long_temp1) @[FFTMultiply.scala 20:262]
    node _io_product_T_16 = and(_io_product_T_14, _io_product_T_15) @[FFTMultiply.scala 20:247]
    node _io_product_T_17 = cat(UInt<1>("h1"), long_temp2) @[Cat.scala 33:92]
    node _io_product_T_18 = cat(UInt<1>("h0"), long_temp1) @[Cat.scala 33:92]
    node _io_product_T_19 = mux(_io_product_T_16, _io_product_T_17, _io_product_T_18) @[FFTMultiply.scala 20:187]
    node _io_product_T_20 = mul(io.a, io.b) @[FFTMultiply.scala 20:329]
    node _io_product_T_21 = mux(io.tc, _io_product_T_19, _io_product_T_20) @[FFTMultiply.scala 20:176]
    node _io_product_T_22 = mux(_io_product_T_10, _io_product_T_11, _io_product_T_21) @[FFTMultiply.scala 20:22]
    io.product <= _io_product_T_22 @[FFTMultiply.scala 20:16]

  module FFT3PipelineCalc_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip dataInSR : UInt, flip dataInSI : UInt, flip dataInTR : UInt, flip dataInTI : UInt, dataOutSR3c : UInt, dataOutSI3c : UInt, dataOutTR3c : UInt, dataOutTI3c : UInt, flip nk : UInt, flip rShiftSym : UInt<1>, flip isFFT : UInt<1>, flip dataMode : UInt<1>, flip state1c : UInt<1>, flip state2c : UInt<1>}

    clock is invalid
    reset is invalid
    io is invalid
    node _dataInSRRnd_T = bits(io.dataInSR, 15, 15) @[FFT3PipelineCalc.scala 28:38]
    node _dataInSRRnd_T_1 = bits(io.dataInSR, 15, 1) @[FFT3PipelineCalc.scala 28:69]
    node _dataInSRRnd_T_2 = cat(_dataInSRRnd_T, _dataInSRRnd_T_1) @[Cat.scala 33:92]
    node _dataInSRRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInSRRnd_T_4 = bits(io.dataInSR, 0, 0) @[FFT3PipelineCalc.scala 28:138]
    node _dataInSRRnd_T_5 = cat(_dataInSRRnd_T_3, _dataInSRRnd_T_4) @[Cat.scala 33:92]
    node _dataInSRRnd_T_6 = add(_dataInSRRnd_T_2, _dataInSRRnd_T_5) @[FFT3PipelineCalc.scala 28:92]
    node dataInSRRnd = tail(_dataInSRRnd_T_6, 1) @[FFT3PipelineCalc.scala 28:92]
    node _dataInSIRnd_T = bits(io.dataInSI, 15, 15) @[FFT3PipelineCalc.scala 29:38]
    node _dataInSIRnd_T_1 = bits(io.dataInSI, 15, 1) @[FFT3PipelineCalc.scala 29:69]
    node _dataInSIRnd_T_2 = cat(_dataInSIRnd_T, _dataInSIRnd_T_1) @[Cat.scala 33:92]
    node _dataInSIRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInSIRnd_T_4 = bits(io.dataInSI, 0, 0) @[FFT3PipelineCalc.scala 29:138]
    node _dataInSIRnd_T_5 = cat(_dataInSIRnd_T_3, _dataInSIRnd_T_4) @[Cat.scala 33:92]
    node _dataInSIRnd_T_6 = add(_dataInSIRnd_T_2, _dataInSIRnd_T_5) @[FFT3PipelineCalc.scala 29:92]
    node dataInSIRnd = tail(_dataInSIRnd_T_6, 1) @[FFT3PipelineCalc.scala 29:92]
    node _dataInTRRnd_T = bits(io.dataInTR, 15, 15) @[FFT3PipelineCalc.scala 30:38]
    node _dataInTRRnd_T_1 = bits(io.dataInTR, 15, 1) @[FFT3PipelineCalc.scala 30:69]
    node _dataInTRRnd_T_2 = cat(_dataInTRRnd_T, _dataInTRRnd_T_1) @[Cat.scala 33:92]
    node _dataInTRRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInTRRnd_T_4 = bits(io.dataInTR, 0, 0) @[FFT3PipelineCalc.scala 30:138]
    node _dataInTRRnd_T_5 = cat(_dataInTRRnd_T_3, _dataInTRRnd_T_4) @[Cat.scala 33:92]
    node _dataInTRRnd_T_6 = add(_dataInTRRnd_T_2, _dataInTRRnd_T_5) @[FFT3PipelineCalc.scala 30:92]
    node dataInTRRnd = tail(_dataInTRRnd_T_6, 1) @[FFT3PipelineCalc.scala 30:92]
    node _dataInTIRnd_T = bits(io.dataInTI, 15, 15) @[FFT3PipelineCalc.scala 31:38]
    node _dataInTIRnd_T_1 = bits(io.dataInTI, 15, 1) @[FFT3PipelineCalc.scala 31:69]
    node _dataInTIRnd_T_2 = cat(_dataInTIRnd_T, _dataInTIRnd_T_1) @[Cat.scala 33:92]
    node _dataInTIRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInTIRnd_T_4 = bits(io.dataInTI, 0, 0) @[FFT3PipelineCalc.scala 31:138]
    node _dataInTIRnd_T_5 = cat(_dataInTIRnd_T_3, _dataInTIRnd_T_4) @[Cat.scala 33:92]
    node _dataInTIRnd_T_6 = add(_dataInTIRnd_T_2, _dataInTIRnd_T_5) @[FFT3PipelineCalc.scala 31:92]
    node dataInTIRnd = tail(_dataInTIRnd_T_6, 1) @[FFT3PipelineCalc.scala 31:92]
    node dataInSR1c = mux(io.rShiftSym, dataInSRRnd, io.dataInSR) @[FFT3PipelineCalc.scala 33:25]
    node dataInSI1c = mux(io.rShiftSym, dataInSIRnd, io.dataInSI) @[FFT3PipelineCalc.scala 34:25]
    node dataInTR1c = mux(io.rShiftSym, dataInTRRnd, io.dataInTR) @[FFT3PipelineCalc.scala 35:25]
    node dataInTI1c = mux(io.rShiftSym, dataInTIRnd, io.dataInTI) @[FFT3PipelineCalc.scala 36:25]
    reg nk1c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      nk1c <= io.nk @[Reg.scala 36:22]
    node _twiLutIdx1c_T = bits(nk1c, 5, 0) @[FFT3PipelineCalc.scala 40:31]
    node twiLutIdx1c = cat(_twiLutIdx1c_T, UInt<1>("h0")) @[Cat.scala 33:92]
    node twiLutCaseIdx1c = mux(io.isFFT, UInt<2>("h0"), UInt<2>("h1")) @[FFT3PipelineCalc.scala 42:30]
    inst fftTwiddle of FFTTwiddle_2 @[FFT3PipelineCalc.scala 44:28]
    fftTwiddle.io.nk <= twiLutIdx1c @[FFT3PipelineCalc.scala 45:22]
    fftTwiddle.io.twiLutCaseIndex <= twiLutCaseIdx1c @[FFT3PipelineCalc.scala 46:35]
    reg sR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      sR2c <= dataInSR1c @[Reg.scala 36:22]
    reg sI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      sI2c <= dataInSI1c @[Reg.scala 36:22]
    reg tR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      tR2c <= dataInTR1c @[Reg.scala 36:22]
    reg tI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      tI2c <= dataInTI1c @[Reg.scala 36:22]
    node _wR2c_T = mux(UInt<1>("h0"), UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 77:12]
    node _wR2c_T_1 = cat(fftTwiddle.io.wR, _wR2c_T) @[Cat.scala 33:92]
    reg wR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      wR2c <= _wR2c_T_1 @[Reg.scala 36:22]
    node _wI2c_T = mux(UInt<1>("h0"), UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 77:12]
    node _wI2c_T_1 = cat(fftTwiddle.io.wI, _wI2c_T) @[Cat.scala 33:92]
    reg wI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      wI2c <= _wI2c_T_1 @[Reg.scala 36:22]
    node _addTRI_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 57:34]
    node _addTRI_T_1 = bits(_addTRI_T, 0, 0) @[Bitwise.scala 77:15]
    node _addTRI_T_2 = mux(_addTRI_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _addTRI_T_3 = cat(_addTRI_T_2, tR2c) @[Cat.scala 33:92]
    node _addTRI_T_4 = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 57:79]
    node _addTRI_T_5 = bits(_addTRI_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _addTRI_T_6 = mux(_addTRI_T_5, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _addTRI_T_7 = cat(_addTRI_T_6, tI2c) @[Cat.scala 33:92]
    node _addTRI_T_8 = add(_addTRI_T_3, _addTRI_T_7) @[FFT3PipelineCalc.scala 57:61]
    node addTRI = tail(_addTRI_T_8, 1) @[FFT3PipelineCalc.scala 57:61]
    node _addWRI_T = bits(wR2c, 16, 16) @[FFT3PipelineCalc.scala 58:26]
    node _addWRI_T_1 = cat(_addWRI_T, wR2c) @[Cat.scala 33:92]
    node _addWRI_T_2 = bits(wI2c, 16, 16) @[FFT3PipelineCalc.scala 58:62]
    node _addWRI_T_3 = cat(_addWRI_T_2, wI2c) @[Cat.scala 33:92]
    node _addWRI_T_4 = add(_addWRI_T_1, _addWRI_T_3) @[FFT3PipelineCalc.scala 58:52]
    node addWRI = tail(_addWRI_T_4, 1) @[FFT3PipelineCalc.scala 58:52]
    inst fftMultiply of FFTMultiply_2 @[FFT3PipelineCalc.scala 59:29]
    fftMultiply.io.a <= addTRI @[FFT3PipelineCalc.scala 60:22]
    fftMultiply.io.b <= addWRI @[FFT3PipelineCalc.scala 61:22]
    fftMultiply.io.tc <= UInt<1>("h1") @[FFT3PipelineCalc.scala 62:23]
    node _multRPre_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 65:51]
    node _multRPre_T_1 = bits(_multRPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _multRPre_T_2 = mux(_multRPre_T_1, UInt<17>("h1ffff"), UInt<17>("h0")) @[Bitwise.scala 77:12]
    node _multRPre_T_3 = cat(_multRPre_T_2, tR2c) @[Cat.scala 33:92]
    node _multRPre_T_4 = bits(wR2c, 16, 16) @[FFT3PipelineCalc.scala 65:111]
    node _multRPre_T_5 = bits(_multRPre_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _multRPre_T_6 = mux(_multRPre_T_5, UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
    node _multRPre_T_7 = cat(_multRPre_T_6, wR2c) @[Cat.scala 33:92]
    node multRPre = mul(_multRPre_T_3, _multRPre_T_7) @[FFT3PipelineCalc.scala 65:78]
    node multR = bits(multRPre, 32, 0) @[FFT3PipelineCalc.scala 66:25]
    node _multIPre_T = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 68:51]
    node _multIPre_T_1 = bits(_multIPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _multIPre_T_2 = mux(_multIPre_T_1, UInt<17>("h1ffff"), UInt<17>("h0")) @[Bitwise.scala 77:12]
    node _multIPre_T_3 = cat(_multIPre_T_2, tI2c) @[Cat.scala 33:92]
    node _multIPre_T_4 = bits(wI2c, 16, 16) @[FFT3PipelineCalc.scala 68:111]
    node _multIPre_T_5 = bits(_multIPre_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _multIPre_T_6 = mux(_multIPre_T_5, UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
    node _multIPre_T_7 = cat(_multIPre_T_6, wI2c) @[Cat.scala 33:92]
    node multIPre = mul(_multIPre_T_3, _multIPre_T_7) @[FFT3PipelineCalc.scala 68:78]
    node multI = bits(multIPre, 32, 0) @[FFT3PipelineCalc.scala 69:25]
    node _qR2cKernel_T = bits(multR, 32, 32) @[FFT3PipelineCalc.scala 71:31]
    node _qR2cKernel_T_1 = bits(multR, 30, 15) @[FFT3PipelineCalc.scala 71:62]
    node _qR2cKernel_T_2 = cat(_qR2cKernel_T, _qR2cKernel_T_1) @[Cat.scala 33:92]
    node _qR2cKernel_T_3 = bits(multI, 32, 32) @[FFT3PipelineCalc.scala 71:119]
    node _qR2cKernel_T_4 = bits(multI, 30, 15) @[FFT3PipelineCalc.scala 71:150]
    node _qR2cKernel_T_5 = cat(_qR2cKernel_T_3, _qR2cKernel_T_4) @[Cat.scala 33:92]
    node _qR2cKernel_T_6 = sub(_qR2cKernel_T_2, _qR2cKernel_T_5) @[FFT3PipelineCalc.scala 71:108]
    node qR2cKernel = tail(_qR2cKernel_T_6, 1) @[FFT3PipelineCalc.scala 71:108]
    node _qI2cKernel_T = bits(fftMultiply.io.product, 35, 35) @[FFT3PipelineCalc.scala 72:31]
    node _qI2cKernel_T_1 = bits(fftMultiply.io.product, 30, 15) @[FFT3PipelineCalc.scala 72:66]
    node _qI2cKernel_T_2 = cat(_qI2cKernel_T, _qI2cKernel_T_1) @[Cat.scala 33:92]
    node _qI2cKernel_T_3 = bits(multR, 32, 32) @[FFT3PipelineCalc.scala 72:123]
    node _qI2cKernel_T_4 = bits(multR, 30, 15) @[FFT3PipelineCalc.scala 72:154]
    node _qI2cKernel_T_5 = cat(_qI2cKernel_T_3, _qI2cKernel_T_4) @[Cat.scala 33:92]
    node _qI2cKernel_T_6 = sub(_qI2cKernel_T_2, _qI2cKernel_T_5) @[FFT3PipelineCalc.scala 72:112]
    node _qI2cKernel_T_7 = tail(_qI2cKernel_T_6, 1) @[FFT3PipelineCalc.scala 72:112]
    node _qI2cKernel_T_8 = bits(multI, 32, 32) @[FFT3PipelineCalc.scala 72:211]
    node _qI2cKernel_T_9 = bits(multI, 30, 15) @[FFT3PipelineCalc.scala 72:242]
    node _qI2cKernel_T_10 = cat(_qI2cKernel_T_8, _qI2cKernel_T_9) @[Cat.scala 33:92]
    node _qI2cKernel_T_11 = sub(_qI2cKernel_T_7, _qI2cKernel_T_10) @[FFT3PipelineCalc.scala 72:200]
    node qI2cKernel = tail(_qI2cKernel_T_11, 1) @[FFT3PipelineCalc.scala 72:200]
    node _qR2cProc_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 74:28]
    node qR2cProc = cat(_qR2cProc_T, tR2c) @[Cat.scala 33:92]
    node _qI2cProc_T = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 75:29]
    node _qI2cProc_T_1 = cat(_qI2cProc_T, tI2c) @[Cat.scala 33:92]
    node _qI2cProc_T_2 = not(_qI2cProc_T_1) @[FFT3PipelineCalc.scala 75:20]
    node _qI2cProc_T_3 = add(_qI2cProc_T_2, UInt<1>("h1")) @[FFT3PipelineCalc.scala 75:55]
    node qI2cProc = tail(_qI2cProc_T_3, 1) @[FFT3PipelineCalc.scala 75:55]
    node qR2c = mux(io.dataMode, qR2cProc, qR2cKernel) @[FFT3PipelineCalc.scala 77:19]
    node qI2c = mux(io.dataMode, qI2cProc, qI2cKernel) @[FFT3PipelineCalc.scala 78:19]
    reg sR3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      sR3c <= sR2c @[Reg.scala 36:22]
    reg sI3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      sI3c <= sI2c @[Reg.scala 36:22]
    reg qR3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      qR3c <= qR2c @[Reg.scala 36:22]
    reg qI3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      qI3c <= qI2c @[Reg.scala 36:22]
    node _xR3cPre_T = bits(sR3c, 15, 15) @[FFT3PipelineCalc.scala 86:35]
    node _xR3cPre_T_1 = bits(_xR3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _xR3cPre_T_2 = mux(_xR3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _xR3cPre_T_3 = cat(_xR3cPre_T_2, sR3c) @[Cat.scala 33:92]
    node _xR3cPre_T_4 = bits(qR3c, 16, 16) @[FFT3PipelineCalc.scala 86:72]
    node _xR3cPre_T_5 = cat(_xR3cPre_T_4, qR3c) @[Cat.scala 33:92]
    node _xR3cPre_T_6 = add(_xR3cPre_T_3, _xR3cPre_T_5) @[FFT3PipelineCalc.scala 86:62]
    node xR3cPre = tail(_xR3cPre_T_6, 1) @[FFT3PipelineCalc.scala 86:62]
    node _xI3cPre_T = bits(sI3c, 15, 15) @[FFT3PipelineCalc.scala 87:35]
    node _xI3cPre_T_1 = bits(_xI3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _xI3cPre_T_2 = mux(_xI3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _xI3cPre_T_3 = cat(_xI3cPre_T_2, sI3c) @[Cat.scala 33:92]
    node _xI3cPre_T_4 = bits(qI3c, 16, 16) @[FFT3PipelineCalc.scala 87:72]
    node _xI3cPre_T_5 = cat(_xI3cPre_T_4, qI3c) @[Cat.scala 33:92]
    node _xI3cPre_T_6 = add(_xI3cPre_T_3, _xI3cPre_T_5) @[FFT3PipelineCalc.scala 87:62]
    node xI3cPre = tail(_xI3cPre_T_6, 1) @[FFT3PipelineCalc.scala 87:62]
    node _xR3c_T = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:28]
    node _xR3c_T_1 = bits(xR3cPre, 16, 16) @[FFT3PipelineCalc.scala 89:56]
    node _xR3c_T_2 = xor(_xR3c_T, _xR3c_T_1) @[FFT3PipelineCalc.scala 89:47]
    node _xR3c_T_3 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:88]
    node _xR3c_T_4 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:139]
    node _xR3c_T_5 = bits(_xR3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _xR3c_T_6 = mux(_xR3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xR3c_T_7 = not(_xR3c_T_6) @[FFT3PipelineCalc.scala 89:108]
    node _xR3c_T_8 = cat(_xR3c_T_3, _xR3c_T_7) @[Cat.scala 33:92]
    node _xR3c_T_9 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:173]
    node _xR3c_T_10 = bits(xR3cPre, 15, 15) @[FFT3PipelineCalc.scala 89:201]
    node _xR3c_T_11 = xor(_xR3c_T_9, _xR3c_T_10) @[FFT3PipelineCalc.scala 89:192]
    node _xR3c_T_12 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:233]
    node _xR3c_T_13 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:284]
    node _xR3c_T_14 = bits(_xR3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _xR3c_T_15 = mux(_xR3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xR3c_T_16 = not(_xR3c_T_15) @[FFT3PipelineCalc.scala 89:253]
    node _xR3c_T_17 = cat(_xR3c_T_12, _xR3c_T_16) @[Cat.scala 33:92]
    node _xR3c_T_18 = bits(xR3cPre, 15, 0) @[FFT3PipelineCalc.scala 89:313]
    node _xR3c_T_19 = mux(_xR3c_T_11, _xR3c_T_17, _xR3c_T_18) @[FFT3PipelineCalc.scala 89:164]
    node xR3c = mux(_xR3c_T_2, _xR3c_T_8, _xR3c_T_19) @[FFT3PipelineCalc.scala 89:19]
    node _xI3c_T = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:28]
    node _xI3c_T_1 = bits(xI3cPre, 16, 16) @[FFT3PipelineCalc.scala 90:56]
    node _xI3c_T_2 = xor(_xI3c_T, _xI3c_T_1) @[FFT3PipelineCalc.scala 90:47]
    node _xI3c_T_3 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:88]
    node _xI3c_T_4 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:139]
    node _xI3c_T_5 = bits(_xI3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _xI3c_T_6 = mux(_xI3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xI3c_T_7 = not(_xI3c_T_6) @[FFT3PipelineCalc.scala 90:108]
    node _xI3c_T_8 = cat(_xI3c_T_3, _xI3c_T_7) @[Cat.scala 33:92]
    node _xI3c_T_9 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:173]
    node _xI3c_T_10 = bits(xI3cPre, 15, 15) @[FFT3PipelineCalc.scala 90:201]
    node _xI3c_T_11 = xor(_xI3c_T_9, _xI3c_T_10) @[FFT3PipelineCalc.scala 90:192]
    node _xI3c_T_12 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:233]
    node _xI3c_T_13 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:284]
    node _xI3c_T_14 = bits(_xI3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _xI3c_T_15 = mux(_xI3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xI3c_T_16 = not(_xI3c_T_15) @[FFT3PipelineCalc.scala 90:253]
    node _xI3c_T_17 = cat(_xI3c_T_12, _xI3c_T_16) @[Cat.scala 33:92]
    node _xI3c_T_18 = bits(xI3cPre, 15, 0) @[FFT3PipelineCalc.scala 90:313]
    node _xI3c_T_19 = mux(_xI3c_T_11, _xI3c_T_17, _xI3c_T_18) @[FFT3PipelineCalc.scala 90:164]
    node xI3c = mux(_xI3c_T_2, _xI3c_T_8, _xI3c_T_19) @[FFT3PipelineCalc.scala 90:19]
    io.dataOutSR3c <= xR3c @[FFT3PipelineCalc.scala 92:20]
    io.dataOutSI3c <= xI3c @[FFT3PipelineCalc.scala 93:20]
    node _yR3cPre_T = bits(sR3c, 15, 15) @[FFT3PipelineCalc.scala 95:35]
    node _yR3cPre_T_1 = bits(_yR3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _yR3cPre_T_2 = mux(_yR3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _yR3cPre_T_3 = cat(_yR3cPre_T_2, sR3c) @[Cat.scala 33:92]
    node _yR3cPre_T_4 = bits(qR3c, 16, 16) @[FFT3PipelineCalc.scala 95:72]
    node _yR3cPre_T_5 = cat(_yR3cPre_T_4, qR3c) @[Cat.scala 33:92]
    node _yR3cPre_T_6 = sub(_yR3cPre_T_3, _yR3cPre_T_5) @[FFT3PipelineCalc.scala 95:62]
    node yR3cPre = tail(_yR3cPre_T_6, 1) @[FFT3PipelineCalc.scala 95:62]
    node _yI3cPre_T = bits(sI3c, 15, 15) @[FFT3PipelineCalc.scala 96:35]
    node _yI3cPre_T_1 = bits(_yI3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _yI3cPre_T_2 = mux(_yI3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _yI3cPre_T_3 = cat(_yI3cPre_T_2, sI3c) @[Cat.scala 33:92]
    node _yI3cPre_T_4 = bits(qI3c, 16, 16) @[FFT3PipelineCalc.scala 96:72]
    node _yI3cPre_T_5 = cat(_yI3cPre_T_4, qI3c) @[Cat.scala 33:92]
    node _yI3cPre_T_6 = sub(_yI3cPre_T_3, _yI3cPre_T_5) @[FFT3PipelineCalc.scala 96:62]
    node yI3cPre = tail(_yI3cPre_T_6, 1) @[FFT3PipelineCalc.scala 96:62]
    node _yR3c_T = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:28]
    node _yR3c_T_1 = bits(yR3cPre, 16, 16) @[FFT3PipelineCalc.scala 98:56]
    node _yR3c_T_2 = xor(_yR3c_T, _yR3c_T_1) @[FFT3PipelineCalc.scala 98:47]
    node _yR3c_T_3 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:88]
    node _yR3c_T_4 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:139]
    node _yR3c_T_5 = bits(_yR3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _yR3c_T_6 = mux(_yR3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yR3c_T_7 = not(_yR3c_T_6) @[FFT3PipelineCalc.scala 98:108]
    node _yR3c_T_8 = cat(_yR3c_T_3, _yR3c_T_7) @[Cat.scala 33:92]
    node _yR3c_T_9 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:173]
    node _yR3c_T_10 = bits(yR3cPre, 15, 15) @[FFT3PipelineCalc.scala 98:201]
    node _yR3c_T_11 = xor(_yR3c_T_9, _yR3c_T_10) @[FFT3PipelineCalc.scala 98:192]
    node _yR3c_T_12 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:233]
    node _yR3c_T_13 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:284]
    node _yR3c_T_14 = bits(_yR3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _yR3c_T_15 = mux(_yR3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yR3c_T_16 = not(_yR3c_T_15) @[FFT3PipelineCalc.scala 98:253]
    node _yR3c_T_17 = cat(_yR3c_T_12, _yR3c_T_16) @[Cat.scala 33:92]
    node _yR3c_T_18 = bits(yR3cPre, 15, 0) @[FFT3PipelineCalc.scala 98:313]
    node _yR3c_T_19 = mux(_yR3c_T_11, _yR3c_T_17, _yR3c_T_18) @[FFT3PipelineCalc.scala 98:164]
    node yR3c = mux(_yR3c_T_2, _yR3c_T_8, _yR3c_T_19) @[FFT3PipelineCalc.scala 98:19]
    node _yI3c_T = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:28]
    node _yI3c_T_1 = bits(yI3cPre, 16, 16) @[FFT3PipelineCalc.scala 99:56]
    node _yI3c_T_2 = xor(_yI3c_T, _yI3c_T_1) @[FFT3PipelineCalc.scala 99:47]
    node _yI3c_T_3 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:88]
    node _yI3c_T_4 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:139]
    node _yI3c_T_5 = bits(_yI3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _yI3c_T_6 = mux(_yI3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yI3c_T_7 = not(_yI3c_T_6) @[FFT3PipelineCalc.scala 99:108]
    node _yI3c_T_8 = cat(_yI3c_T_3, _yI3c_T_7) @[Cat.scala 33:92]
    node _yI3c_T_9 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:173]
    node _yI3c_T_10 = bits(yI3cPre, 15, 15) @[FFT3PipelineCalc.scala 99:201]
    node _yI3c_T_11 = xor(_yI3c_T_9, _yI3c_T_10) @[FFT3PipelineCalc.scala 99:192]
    node _yI3c_T_12 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:233]
    node _yI3c_T_13 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:284]
    node _yI3c_T_14 = bits(_yI3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _yI3c_T_15 = mux(_yI3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yI3c_T_16 = not(_yI3c_T_15) @[FFT3PipelineCalc.scala 99:253]
    node _yI3c_T_17 = cat(_yI3c_T_12, _yI3c_T_16) @[Cat.scala 33:92]
    node _yI3c_T_18 = bits(yI3cPre, 15, 0) @[FFT3PipelineCalc.scala 99:313]
    node _yI3c_T_19 = mux(_yI3c_T_11, _yI3c_T_17, _yI3c_T_18) @[FFT3PipelineCalc.scala 99:164]
    node yI3c = mux(_yI3c_T_2, _yI3c_T_8, _yI3c_T_19) @[FFT3PipelineCalc.scala 99:19]
    io.dataOutTR3c <= yR3c @[FFT3PipelineCalc.scala 101:20]
    io.dataOutTI3c <= yI3c @[FFT3PipelineCalc.scala 102:20]

  module FFTTwiddle_3 :
    output io : { flip nk : UInt, flip twiLutCaseIndex : UInt, wR : UInt, wI : UInt}

    wire twi_cos_tb1_p10 : UInt<12>[128] @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[0] <= UInt<12>("h400") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[1] <= UInt<12>("h400") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[2] <= UInt<12>("h3ff") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[3] <= UInt<12>("h3fd") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[4] <= UInt<12>("h3fb") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[5] <= UInt<12>("h3f8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[6] <= UInt<12>("h3f5") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[7] <= UInt<12>("h3f1") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[8] <= UInt<12>("h3ec") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[9] <= UInt<12>("h3e7") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[10] <= UInt<12>("h3e1") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[11] <= UInt<12>("h3db") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[12] <= UInt<12>("h3d4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[13] <= UInt<12>("h3cc") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[14] <= UInt<12>("h3c4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[15] <= UInt<12>("h3bb") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[16] <= UInt<12>("h3b2") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[17] <= UInt<12>("h3a8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[18] <= UInt<12>("h39e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[19] <= UInt<12>("h393") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[20] <= UInt<12>("h387") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[21] <= UInt<12>("h37b") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[22] <= UInt<12>("h36e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[23] <= UInt<12>("h361") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[24] <= UInt<12>("h353") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[25] <= UInt<12>("h345") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[26] <= UInt<12>("h336") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[27] <= UInt<12>("h327") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[28] <= UInt<12>("h318") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[29] <= UInt<12>("h307") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[30] <= UInt<12>("h2f7") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[31] <= UInt<12>("h2e6") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[32] <= UInt<12>("h2d4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[33] <= UInt<12>("h2c2") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[34] <= UInt<12>("h2b0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[35] <= UInt<12>("h29d") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[36] <= UInt<12>("h28a") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[37] <= UInt<12>("h276") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[38] <= UInt<12>("h262") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[39] <= UInt<12>("h24e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[40] <= UInt<12>("h239") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[41] <= UInt<12>("h224") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[42] <= UInt<12>("h20e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[43] <= UInt<12>("h1f9") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[44] <= UInt<12>("h1e3") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[45] <= UInt<12>("h1cc") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[46] <= UInt<12>("h1b6") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[47] <= UInt<12>("h19f") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[48] <= UInt<12>("h188") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[49] <= UInt<12>("h171") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[50] <= UInt<12>("h159") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[51] <= UInt<12>("h141") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[52] <= UInt<12>("h129") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[53] <= UInt<12>("h111") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[54] <= UInt<12>("hf9") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[55] <= UInt<12>("he0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[56] <= UInt<12>("hc8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[57] <= UInt<12>("haf") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[58] <= UInt<12>("h96") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[59] <= UInt<12>("h7d") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[60] <= UInt<12>("h64") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[61] <= UInt<12>("h4b") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[62] <= UInt<12>("h32") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[63] <= UInt<12>("h19") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[64] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[65] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[66] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[67] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[68] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[69] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[70] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[71] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[72] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[73] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[74] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[75] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[76] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[77] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[78] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[79] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[80] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[81] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[82] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[83] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[84] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[85] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[86] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[87] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[88] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[89] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[90] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[91] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[92] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[93] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[94] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[95] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[96] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[97] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[98] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[99] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[100] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[101] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[102] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[103] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[104] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[105] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[106] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[107] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[108] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[109] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[110] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[111] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[112] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[113] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[114] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[115] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[116] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[117] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[118] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[119] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[120] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[121] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[122] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[123] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[124] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[125] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[126] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[127] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    wire twi_sin_tb1_p10 : UInt<12>[128] @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[0] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[1] <= UInt<12>("h19") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[2] <= UInt<12>("h32") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[3] <= UInt<12>("h4b") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[4] <= UInt<12>("h64") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[5] <= UInt<12>("h7d") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[6] <= UInt<12>("h96") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[7] <= UInt<12>("haf") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[8] <= UInt<12>("hc8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[9] <= UInt<12>("he0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[10] <= UInt<12>("hf9") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[11] <= UInt<12>("h111") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[12] <= UInt<12>("h129") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[13] <= UInt<12>("h141") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[14] <= UInt<12>("h159") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[15] <= UInt<12>("h171") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[16] <= UInt<12>("h188") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[17] <= UInt<12>("h19f") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[18] <= UInt<12>("h1b6") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[19] <= UInt<12>("h1cc") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[20] <= UInt<12>("h1e3") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[21] <= UInt<12>("h1f9") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[22] <= UInt<12>("h20e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[23] <= UInt<12>("h224") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[24] <= UInt<12>("h239") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[25] <= UInt<12>("h24e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[26] <= UInt<12>("h262") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[27] <= UInt<12>("h276") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[28] <= UInt<12>("h28a") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[29] <= UInt<12>("h29d") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[30] <= UInt<12>("h2b0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[31] <= UInt<12>("h2c2") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[32] <= UInt<12>("h2d4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[33] <= UInt<12>("h2e6") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[34] <= UInt<12>("h2f7") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[35] <= UInt<12>("h307") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[36] <= UInt<12>("h318") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[37] <= UInt<12>("h327") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[38] <= UInt<12>("h336") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[39] <= UInt<12>("h345") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[40] <= UInt<12>("h353") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[41] <= UInt<12>("h361") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[42] <= UInt<12>("h36e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[43] <= UInt<12>("h37b") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[44] <= UInt<12>("h387") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[45] <= UInt<12>("h393") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[46] <= UInt<12>("h39e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[47] <= UInt<12>("h3a8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[48] <= UInt<12>("h3b2") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[49] <= UInt<12>("h3bb") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[50] <= UInt<12>("h3c4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[51] <= UInt<12>("h3cc") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[52] <= UInt<12>("h3d4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[53] <= UInt<12>("h3db") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[54] <= UInt<12>("h3e1") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[55] <= UInt<12>("h3e7") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[56] <= UInt<12>("h3ec") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[57] <= UInt<12>("h3f1") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[58] <= UInt<12>("h3f5") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[59] <= UInt<12>("h3f8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[60] <= UInt<12>("h3fb") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[61] <= UInt<12>("h3fd") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[62] <= UInt<12>("h3ff") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[63] <= UInt<12>("h400") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[64] <= UInt<12>("h400") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[65] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[66] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[67] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[68] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[69] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[70] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[71] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[72] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[73] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[74] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[75] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[76] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[77] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[78] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[79] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[80] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[81] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[82] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[83] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[84] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[85] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[86] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[87] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[88] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[89] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[90] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[91] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[92] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[93] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[94] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[95] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[96] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[97] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[98] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[99] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[100] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[101] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[102] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[103] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[104] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[105] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[106] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[107] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[108] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[109] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[110] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[111] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[112] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[113] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[114] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[115] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[116] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[117] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[118] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[119] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[120] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[121] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[122] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[123] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[124] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[125] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[126] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[127] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    node _idx_r_T = bits(io.nk, 6, 6) @[FFTTwiddle.scala 35:27]
    node _idx_r_T_1 = bits(io.nk, 5, 0) @[FFTTwiddle.scala 35:50]
    node _idx_r_T_2 = orr(_idx_r_T_1) @[FFTTwiddle.scala 35:73]
    node _idx_r_T_3 = and(_idx_r_T, _idx_r_T_2) @[FFTTwiddle.scala 35:43]
    node _idx_r_T_4 = not(io.nk) @[FFTTwiddle.scala 35:80]
    node _idx_r_T_5 = add(_idx_r_T_4, UInt<1>("h1")) @[FFTTwiddle.scala 35:87]
    node _idx_r_T_6 = tail(_idx_r_T_5, 1) @[FFTTwiddle.scala 35:87]
    node idx_r = mux(_idx_r_T_3, _idx_r_T_6, io.nk) @[FFTTwiddle.scala 35:20]
    node _lut_chg_sign_flag_r_T = bits(io.nk, 6, 6) @[FFTTwiddle.scala 37:36]
    node _lut_chg_sign_flag_r_T_1 = bits(io.nk, 5, 0) @[FFTTwiddle.scala 37:60]
    node _lut_chg_sign_flag_r_T_2 = orr(_lut_chg_sign_flag_r_T_1) @[FFTTwiddle.scala 37:83]
    node lut_chg_sign_flag_r = and(_lut_chg_sign_flag_r_T, _lut_chg_sign_flag_r_T_2) @[FFTTwiddle.scala 37:52]
    node _lut_w_r_T = or(idx_r, UInt<7>("h0"))
    node _lut_w_r_T_1 = bits(_lut_w_r_T, 6, 0)
    node idx_i = bits(idx_r, 6, 0) @[FFTTwiddle.scala 41:22]
    node _chg_sign_flag_r_T = eq(io.twiLutCaseIndex, UInt<2>("h2")) @[FFTTwiddle.scala 47:51]
    node _chg_sign_flag_r_T_1 = eq(lut_chg_sign_flag_r, UInt<1>("h0")) @[FFTTwiddle.scala 47:61]
    node chg_sign_flag_r = mux(_chg_sign_flag_r_T, _chg_sign_flag_r_T_1, lut_chg_sign_flag_r) @[FFTTwiddle.scala 47:30]
    node _chg_sign_flag_i_T = eq(io.twiLutCaseIndex, UInt<1>("h1")) @[FFTTwiddle.scala 48:51]
    node _chg_sign_flag_i_T_1 = eq(UInt<1>("h1"), UInt<1>("h0")) @[FFTTwiddle.scala 48:61]
    node chg_sign_flag_i = mux(_chg_sign_flag_i_T, _chg_sign_flag_i_T_1, UInt<1>("h1")) @[FFTTwiddle.scala 48:30]
    node _io_wR_T = not(twi_cos_tb1_p10[_lut_w_r_T_1]) @[FFTTwiddle.scala 50:36]
    node _io_wR_T_1 = add(_io_wR_T, UInt<1>("h1")) @[FFTTwiddle.scala 50:45]
    node _io_wR_T_2 = tail(_io_wR_T_1, 1) @[FFTTwiddle.scala 50:45]
    node _io_wR_T_3 = mux(chg_sign_flag_r, _io_wR_T_2, twi_cos_tb1_p10[_lut_w_r_T_1]) @[FFTTwiddle.scala 50:17]
    io.wR <= _io_wR_T_3 @[FFTTwiddle.scala 50:11]
    node _io_wI_T = not(twi_sin_tb1_p10[idx_i]) @[FFTTwiddle.scala 51:36]
    node _io_wI_T_1 = add(_io_wI_T, UInt<1>("h1")) @[FFTTwiddle.scala 51:45]
    node _io_wI_T_2 = tail(_io_wI_T_1, 1) @[FFTTwiddle.scala 51:45]
    node _io_wI_T_3 = mux(chg_sign_flag_i, _io_wI_T_2, twi_sin_tb1_p10[idx_i]) @[FFTTwiddle.scala 51:17]
    io.wI <= _io_wI_T_3 @[FFTTwiddle.scala 51:11]

  module FFTMultiply_3 :
    output io : { flip a : UInt<18>, flip b : UInt<18>, flip tc : UInt<1>, product : UInt<36>}

    node _temp_a_T = bits(io.a, 17, 17) @[FFTMultiply.scala 14:26]
    node _temp_a_T_1 = not(io.a) @[FFTMultiply.scala 14:51]
    node _temp_a_T_2 = add(_temp_a_T_1, UInt<1>("h1")) @[FFTMultiply.scala 14:57]
    node _temp_a_T_3 = tail(_temp_a_T_2, 1) @[FFTMultiply.scala 14:57]
    node temp_a = mux(_temp_a_T, _temp_a_T_3, io.a) @[FFTMultiply.scala 14:21]
    node _temp_b_T = bits(io.b, 17, 17) @[FFTMultiply.scala 15:26]
    node _temp_b_T_1 = not(io.b) @[FFTMultiply.scala 15:51]
    node _temp_b_T_2 = add(_temp_b_T_1, UInt<1>("h1")) @[FFTMultiply.scala 15:57]
    node _temp_b_T_3 = tail(_temp_b_T_2, 1) @[FFTMultiply.scala 15:57]
    node temp_b = mux(_temp_b_T, _temp_b_T_3, io.b) @[FFTMultiply.scala 15:21]
    node long_temp1 = mul(temp_a, temp_b) @[FFTMultiply.scala 17:29]
    node _long_temp2_T = sub(long_temp1, UInt<1>("h1")) @[FFTMultiply.scala 18:35]
    node _long_temp2_T_1 = tail(_long_temp2_T, 1) @[FFTMultiply.scala 18:35]
    node long_temp2 = not(_long_temp2_T_1) @[FFTMultiply.scala 18:22]
    node _io_product_T = xor(io.a, io.a) @[FFTMultiply.scala 20:31]
    node _io_product_T_1 = xorr(_io_product_T) @[FFTMultiply.scala 20:39]
    node _io_product_T_2 = neq(_io_product_T_1, UInt<1>("h0")) @[FFTMultiply.scala 20:44]
    node _io_product_T_3 = xor(io.b, io.b) @[FFTMultiply.scala 20:67]
    node _io_product_T_4 = xorr(_io_product_T_3) @[FFTMultiply.scala 20:75]
    node _io_product_T_5 = neq(_io_product_T_4, UInt<1>("h0")) @[FFTMultiply.scala 20:80]
    node _io_product_T_6 = or(_io_product_T_2, _io_product_T_5) @[FFTMultiply.scala 20:57]
    node _io_product_T_7 = xor(io.tc, io.tc) @[FFTMultiply.scala 20:104]
    node _io_product_T_8 = xorr(_io_product_T_7) @[FFTMultiply.scala 20:113]
    node _io_product_T_9 = neq(_io_product_T_8, UInt<1>("h0")) @[FFTMultiply.scala 20:118]
    node _io_product_T_10 = or(_io_product_T_6, _io_product_T_9) @[FFTMultiply.scala 20:93]
    node _io_product_T_11 = mux(UInt<1>("h1"), UInt<36>("hfffffffff"), UInt<36>("h0")) @[Bitwise.scala 77:12]
    node _io_product_T_12 = bits(io.a, 17, 17) @[FFTMultiply.scala 20:194]
    node _io_product_T_13 = bits(io.b, 17, 17) @[FFTMultiply.scala 20:223]
    node _io_product_T_14 = xor(_io_product_T_12, _io_product_T_13) @[FFTMultiply.scala 20:217]
    node _io_product_T_15 = orr(long_temp1) @[FFTMultiply.scala 20:262]
    node _io_product_T_16 = and(_io_product_T_14, _io_product_T_15) @[FFTMultiply.scala 20:247]
    node _io_product_T_17 = cat(UInt<1>("h1"), long_temp2) @[Cat.scala 33:92]
    node _io_product_T_18 = cat(UInt<1>("h0"), long_temp1) @[Cat.scala 33:92]
    node _io_product_T_19 = mux(_io_product_T_16, _io_product_T_17, _io_product_T_18) @[FFTMultiply.scala 20:187]
    node _io_product_T_20 = mul(io.a, io.b) @[FFTMultiply.scala 20:329]
    node _io_product_T_21 = mux(io.tc, _io_product_T_19, _io_product_T_20) @[FFTMultiply.scala 20:176]
    node _io_product_T_22 = mux(_io_product_T_10, _io_product_T_11, _io_product_T_21) @[FFTMultiply.scala 20:22]
    io.product <= _io_product_T_22 @[FFTMultiply.scala 20:16]

  module FFT3PipelineCalc_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip dataInSR : UInt, flip dataInSI : UInt, flip dataInTR : UInt, flip dataInTI : UInt, dataOutSR3c : UInt, dataOutSI3c : UInt, dataOutTR3c : UInt, dataOutTI3c : UInt, flip nk : UInt, flip rShiftSym : UInt<1>, flip isFFT : UInt<1>, flip dataMode : UInt<1>, flip state1c : UInt<1>, flip state2c : UInt<1>}

    clock is invalid
    reset is invalid
    io is invalid
    node _dataInSRRnd_T = bits(io.dataInSR, 15, 15) @[FFT3PipelineCalc.scala 28:38]
    node _dataInSRRnd_T_1 = bits(io.dataInSR, 15, 1) @[FFT3PipelineCalc.scala 28:69]
    node _dataInSRRnd_T_2 = cat(_dataInSRRnd_T, _dataInSRRnd_T_1) @[Cat.scala 33:92]
    node _dataInSRRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInSRRnd_T_4 = bits(io.dataInSR, 0, 0) @[FFT3PipelineCalc.scala 28:138]
    node _dataInSRRnd_T_5 = cat(_dataInSRRnd_T_3, _dataInSRRnd_T_4) @[Cat.scala 33:92]
    node _dataInSRRnd_T_6 = add(_dataInSRRnd_T_2, _dataInSRRnd_T_5) @[FFT3PipelineCalc.scala 28:92]
    node dataInSRRnd = tail(_dataInSRRnd_T_6, 1) @[FFT3PipelineCalc.scala 28:92]
    node _dataInSIRnd_T = bits(io.dataInSI, 15, 15) @[FFT3PipelineCalc.scala 29:38]
    node _dataInSIRnd_T_1 = bits(io.dataInSI, 15, 1) @[FFT3PipelineCalc.scala 29:69]
    node _dataInSIRnd_T_2 = cat(_dataInSIRnd_T, _dataInSIRnd_T_1) @[Cat.scala 33:92]
    node _dataInSIRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInSIRnd_T_4 = bits(io.dataInSI, 0, 0) @[FFT3PipelineCalc.scala 29:138]
    node _dataInSIRnd_T_5 = cat(_dataInSIRnd_T_3, _dataInSIRnd_T_4) @[Cat.scala 33:92]
    node _dataInSIRnd_T_6 = add(_dataInSIRnd_T_2, _dataInSIRnd_T_5) @[FFT3PipelineCalc.scala 29:92]
    node dataInSIRnd = tail(_dataInSIRnd_T_6, 1) @[FFT3PipelineCalc.scala 29:92]
    node _dataInTRRnd_T = bits(io.dataInTR, 15, 15) @[FFT3PipelineCalc.scala 30:38]
    node _dataInTRRnd_T_1 = bits(io.dataInTR, 15, 1) @[FFT3PipelineCalc.scala 30:69]
    node _dataInTRRnd_T_2 = cat(_dataInTRRnd_T, _dataInTRRnd_T_1) @[Cat.scala 33:92]
    node _dataInTRRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInTRRnd_T_4 = bits(io.dataInTR, 0, 0) @[FFT3PipelineCalc.scala 30:138]
    node _dataInTRRnd_T_5 = cat(_dataInTRRnd_T_3, _dataInTRRnd_T_4) @[Cat.scala 33:92]
    node _dataInTRRnd_T_6 = add(_dataInTRRnd_T_2, _dataInTRRnd_T_5) @[FFT3PipelineCalc.scala 30:92]
    node dataInTRRnd = tail(_dataInTRRnd_T_6, 1) @[FFT3PipelineCalc.scala 30:92]
    node _dataInTIRnd_T = bits(io.dataInTI, 15, 15) @[FFT3PipelineCalc.scala 31:38]
    node _dataInTIRnd_T_1 = bits(io.dataInTI, 15, 1) @[FFT3PipelineCalc.scala 31:69]
    node _dataInTIRnd_T_2 = cat(_dataInTIRnd_T, _dataInTIRnd_T_1) @[Cat.scala 33:92]
    node _dataInTIRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInTIRnd_T_4 = bits(io.dataInTI, 0, 0) @[FFT3PipelineCalc.scala 31:138]
    node _dataInTIRnd_T_5 = cat(_dataInTIRnd_T_3, _dataInTIRnd_T_4) @[Cat.scala 33:92]
    node _dataInTIRnd_T_6 = add(_dataInTIRnd_T_2, _dataInTIRnd_T_5) @[FFT3PipelineCalc.scala 31:92]
    node dataInTIRnd = tail(_dataInTIRnd_T_6, 1) @[FFT3PipelineCalc.scala 31:92]
    node dataInSR1c = mux(io.rShiftSym, dataInSRRnd, io.dataInSR) @[FFT3PipelineCalc.scala 33:25]
    node dataInSI1c = mux(io.rShiftSym, dataInSIRnd, io.dataInSI) @[FFT3PipelineCalc.scala 34:25]
    node dataInTR1c = mux(io.rShiftSym, dataInTRRnd, io.dataInTR) @[FFT3PipelineCalc.scala 35:25]
    node dataInTI1c = mux(io.rShiftSym, dataInTIRnd, io.dataInTI) @[FFT3PipelineCalc.scala 36:25]
    reg nk1c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      nk1c <= io.nk @[Reg.scala 36:22]
    node _twiLutIdx1c_T = bits(nk1c, 5, 0) @[FFT3PipelineCalc.scala 40:31]
    node twiLutIdx1c = cat(_twiLutIdx1c_T, UInt<1>("h0")) @[Cat.scala 33:92]
    node twiLutCaseIdx1c = mux(io.isFFT, UInt<2>("h0"), UInt<2>("h1")) @[FFT3PipelineCalc.scala 42:30]
    inst fftTwiddle of FFTTwiddle_3 @[FFT3PipelineCalc.scala 44:28]
    fftTwiddle.io.nk <= twiLutIdx1c @[FFT3PipelineCalc.scala 45:22]
    fftTwiddle.io.twiLutCaseIndex <= twiLutCaseIdx1c @[FFT3PipelineCalc.scala 46:35]
    reg sR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      sR2c <= dataInSR1c @[Reg.scala 36:22]
    reg sI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      sI2c <= dataInSI1c @[Reg.scala 36:22]
    reg tR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      tR2c <= dataInTR1c @[Reg.scala 36:22]
    reg tI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      tI2c <= dataInTI1c @[Reg.scala 36:22]
    node _wR2c_T = mux(UInt<1>("h0"), UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 77:12]
    node _wR2c_T_1 = cat(fftTwiddle.io.wR, _wR2c_T) @[Cat.scala 33:92]
    reg wR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      wR2c <= _wR2c_T_1 @[Reg.scala 36:22]
    node _wI2c_T = mux(UInt<1>("h0"), UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 77:12]
    node _wI2c_T_1 = cat(fftTwiddle.io.wI, _wI2c_T) @[Cat.scala 33:92]
    reg wI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      wI2c <= _wI2c_T_1 @[Reg.scala 36:22]
    node _addTRI_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 57:34]
    node _addTRI_T_1 = bits(_addTRI_T, 0, 0) @[Bitwise.scala 77:15]
    node _addTRI_T_2 = mux(_addTRI_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _addTRI_T_3 = cat(_addTRI_T_2, tR2c) @[Cat.scala 33:92]
    node _addTRI_T_4 = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 57:79]
    node _addTRI_T_5 = bits(_addTRI_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _addTRI_T_6 = mux(_addTRI_T_5, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _addTRI_T_7 = cat(_addTRI_T_6, tI2c) @[Cat.scala 33:92]
    node _addTRI_T_8 = add(_addTRI_T_3, _addTRI_T_7) @[FFT3PipelineCalc.scala 57:61]
    node addTRI = tail(_addTRI_T_8, 1) @[FFT3PipelineCalc.scala 57:61]
    node _addWRI_T = bits(wR2c, 16, 16) @[FFT3PipelineCalc.scala 58:26]
    node _addWRI_T_1 = cat(_addWRI_T, wR2c) @[Cat.scala 33:92]
    node _addWRI_T_2 = bits(wI2c, 16, 16) @[FFT3PipelineCalc.scala 58:62]
    node _addWRI_T_3 = cat(_addWRI_T_2, wI2c) @[Cat.scala 33:92]
    node _addWRI_T_4 = add(_addWRI_T_1, _addWRI_T_3) @[FFT3PipelineCalc.scala 58:52]
    node addWRI = tail(_addWRI_T_4, 1) @[FFT3PipelineCalc.scala 58:52]
    inst fftMultiply of FFTMultiply_3 @[FFT3PipelineCalc.scala 59:29]
    fftMultiply.io.a <= addTRI @[FFT3PipelineCalc.scala 60:22]
    fftMultiply.io.b <= addWRI @[FFT3PipelineCalc.scala 61:22]
    fftMultiply.io.tc <= UInt<1>("h1") @[FFT3PipelineCalc.scala 62:23]
    node _multRPre_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 65:51]
    node _multRPre_T_1 = bits(_multRPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _multRPre_T_2 = mux(_multRPre_T_1, UInt<17>("h1ffff"), UInt<17>("h0")) @[Bitwise.scala 77:12]
    node _multRPre_T_3 = cat(_multRPre_T_2, tR2c) @[Cat.scala 33:92]
    node _multRPre_T_4 = bits(wR2c, 16, 16) @[FFT3PipelineCalc.scala 65:111]
    node _multRPre_T_5 = bits(_multRPre_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _multRPre_T_6 = mux(_multRPre_T_5, UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
    node _multRPre_T_7 = cat(_multRPre_T_6, wR2c) @[Cat.scala 33:92]
    node multRPre = mul(_multRPre_T_3, _multRPre_T_7) @[FFT3PipelineCalc.scala 65:78]
    node multR = bits(multRPre, 32, 0) @[FFT3PipelineCalc.scala 66:25]
    node _multIPre_T = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 68:51]
    node _multIPre_T_1 = bits(_multIPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _multIPre_T_2 = mux(_multIPre_T_1, UInt<17>("h1ffff"), UInt<17>("h0")) @[Bitwise.scala 77:12]
    node _multIPre_T_3 = cat(_multIPre_T_2, tI2c) @[Cat.scala 33:92]
    node _multIPre_T_4 = bits(wI2c, 16, 16) @[FFT3PipelineCalc.scala 68:111]
    node _multIPre_T_5 = bits(_multIPre_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _multIPre_T_6 = mux(_multIPre_T_5, UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
    node _multIPre_T_7 = cat(_multIPre_T_6, wI2c) @[Cat.scala 33:92]
    node multIPre = mul(_multIPre_T_3, _multIPre_T_7) @[FFT3PipelineCalc.scala 68:78]
    node multI = bits(multIPre, 32, 0) @[FFT3PipelineCalc.scala 69:25]
    node _qR2cKernel_T = bits(multR, 32, 32) @[FFT3PipelineCalc.scala 71:31]
    node _qR2cKernel_T_1 = bits(multR, 30, 15) @[FFT3PipelineCalc.scala 71:62]
    node _qR2cKernel_T_2 = cat(_qR2cKernel_T, _qR2cKernel_T_1) @[Cat.scala 33:92]
    node _qR2cKernel_T_3 = bits(multI, 32, 32) @[FFT3PipelineCalc.scala 71:119]
    node _qR2cKernel_T_4 = bits(multI, 30, 15) @[FFT3PipelineCalc.scala 71:150]
    node _qR2cKernel_T_5 = cat(_qR2cKernel_T_3, _qR2cKernel_T_4) @[Cat.scala 33:92]
    node _qR2cKernel_T_6 = sub(_qR2cKernel_T_2, _qR2cKernel_T_5) @[FFT3PipelineCalc.scala 71:108]
    node qR2cKernel = tail(_qR2cKernel_T_6, 1) @[FFT3PipelineCalc.scala 71:108]
    node _qI2cKernel_T = bits(fftMultiply.io.product, 35, 35) @[FFT3PipelineCalc.scala 72:31]
    node _qI2cKernel_T_1 = bits(fftMultiply.io.product, 30, 15) @[FFT3PipelineCalc.scala 72:66]
    node _qI2cKernel_T_2 = cat(_qI2cKernel_T, _qI2cKernel_T_1) @[Cat.scala 33:92]
    node _qI2cKernel_T_3 = bits(multR, 32, 32) @[FFT3PipelineCalc.scala 72:123]
    node _qI2cKernel_T_4 = bits(multR, 30, 15) @[FFT3PipelineCalc.scala 72:154]
    node _qI2cKernel_T_5 = cat(_qI2cKernel_T_3, _qI2cKernel_T_4) @[Cat.scala 33:92]
    node _qI2cKernel_T_6 = sub(_qI2cKernel_T_2, _qI2cKernel_T_5) @[FFT3PipelineCalc.scala 72:112]
    node _qI2cKernel_T_7 = tail(_qI2cKernel_T_6, 1) @[FFT3PipelineCalc.scala 72:112]
    node _qI2cKernel_T_8 = bits(multI, 32, 32) @[FFT3PipelineCalc.scala 72:211]
    node _qI2cKernel_T_9 = bits(multI, 30, 15) @[FFT3PipelineCalc.scala 72:242]
    node _qI2cKernel_T_10 = cat(_qI2cKernel_T_8, _qI2cKernel_T_9) @[Cat.scala 33:92]
    node _qI2cKernel_T_11 = sub(_qI2cKernel_T_7, _qI2cKernel_T_10) @[FFT3PipelineCalc.scala 72:200]
    node qI2cKernel = tail(_qI2cKernel_T_11, 1) @[FFT3PipelineCalc.scala 72:200]
    node _qR2cProc_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 74:28]
    node qR2cProc = cat(_qR2cProc_T, tR2c) @[Cat.scala 33:92]
    node _qI2cProc_T = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 75:29]
    node _qI2cProc_T_1 = cat(_qI2cProc_T, tI2c) @[Cat.scala 33:92]
    node _qI2cProc_T_2 = not(_qI2cProc_T_1) @[FFT3PipelineCalc.scala 75:20]
    node _qI2cProc_T_3 = add(_qI2cProc_T_2, UInt<1>("h1")) @[FFT3PipelineCalc.scala 75:55]
    node qI2cProc = tail(_qI2cProc_T_3, 1) @[FFT3PipelineCalc.scala 75:55]
    node qR2c = mux(io.dataMode, qR2cProc, qR2cKernel) @[FFT3PipelineCalc.scala 77:19]
    node qI2c = mux(io.dataMode, qI2cProc, qI2cKernel) @[FFT3PipelineCalc.scala 78:19]
    reg sR3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      sR3c <= sR2c @[Reg.scala 36:22]
    reg sI3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      sI3c <= sI2c @[Reg.scala 36:22]
    reg qR3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      qR3c <= qR2c @[Reg.scala 36:22]
    reg qI3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      qI3c <= qI2c @[Reg.scala 36:22]
    node _xR3cPre_T = bits(sR3c, 15, 15) @[FFT3PipelineCalc.scala 86:35]
    node _xR3cPre_T_1 = bits(_xR3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _xR3cPre_T_2 = mux(_xR3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _xR3cPre_T_3 = cat(_xR3cPre_T_2, sR3c) @[Cat.scala 33:92]
    node _xR3cPre_T_4 = bits(qR3c, 16, 16) @[FFT3PipelineCalc.scala 86:72]
    node _xR3cPre_T_5 = cat(_xR3cPre_T_4, qR3c) @[Cat.scala 33:92]
    node _xR3cPre_T_6 = add(_xR3cPre_T_3, _xR3cPre_T_5) @[FFT3PipelineCalc.scala 86:62]
    node xR3cPre = tail(_xR3cPre_T_6, 1) @[FFT3PipelineCalc.scala 86:62]
    node _xI3cPre_T = bits(sI3c, 15, 15) @[FFT3PipelineCalc.scala 87:35]
    node _xI3cPre_T_1 = bits(_xI3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _xI3cPre_T_2 = mux(_xI3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _xI3cPre_T_3 = cat(_xI3cPre_T_2, sI3c) @[Cat.scala 33:92]
    node _xI3cPre_T_4 = bits(qI3c, 16, 16) @[FFT3PipelineCalc.scala 87:72]
    node _xI3cPre_T_5 = cat(_xI3cPre_T_4, qI3c) @[Cat.scala 33:92]
    node _xI3cPre_T_6 = add(_xI3cPre_T_3, _xI3cPre_T_5) @[FFT3PipelineCalc.scala 87:62]
    node xI3cPre = tail(_xI3cPre_T_6, 1) @[FFT3PipelineCalc.scala 87:62]
    node _xR3c_T = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:28]
    node _xR3c_T_1 = bits(xR3cPre, 16, 16) @[FFT3PipelineCalc.scala 89:56]
    node _xR3c_T_2 = xor(_xR3c_T, _xR3c_T_1) @[FFT3PipelineCalc.scala 89:47]
    node _xR3c_T_3 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:88]
    node _xR3c_T_4 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:139]
    node _xR3c_T_5 = bits(_xR3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _xR3c_T_6 = mux(_xR3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xR3c_T_7 = not(_xR3c_T_6) @[FFT3PipelineCalc.scala 89:108]
    node _xR3c_T_8 = cat(_xR3c_T_3, _xR3c_T_7) @[Cat.scala 33:92]
    node _xR3c_T_9 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:173]
    node _xR3c_T_10 = bits(xR3cPre, 15, 15) @[FFT3PipelineCalc.scala 89:201]
    node _xR3c_T_11 = xor(_xR3c_T_9, _xR3c_T_10) @[FFT3PipelineCalc.scala 89:192]
    node _xR3c_T_12 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:233]
    node _xR3c_T_13 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:284]
    node _xR3c_T_14 = bits(_xR3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _xR3c_T_15 = mux(_xR3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xR3c_T_16 = not(_xR3c_T_15) @[FFT3PipelineCalc.scala 89:253]
    node _xR3c_T_17 = cat(_xR3c_T_12, _xR3c_T_16) @[Cat.scala 33:92]
    node _xR3c_T_18 = bits(xR3cPre, 15, 0) @[FFT3PipelineCalc.scala 89:313]
    node _xR3c_T_19 = mux(_xR3c_T_11, _xR3c_T_17, _xR3c_T_18) @[FFT3PipelineCalc.scala 89:164]
    node xR3c = mux(_xR3c_T_2, _xR3c_T_8, _xR3c_T_19) @[FFT3PipelineCalc.scala 89:19]
    node _xI3c_T = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:28]
    node _xI3c_T_1 = bits(xI3cPre, 16, 16) @[FFT3PipelineCalc.scala 90:56]
    node _xI3c_T_2 = xor(_xI3c_T, _xI3c_T_1) @[FFT3PipelineCalc.scala 90:47]
    node _xI3c_T_3 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:88]
    node _xI3c_T_4 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:139]
    node _xI3c_T_5 = bits(_xI3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _xI3c_T_6 = mux(_xI3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xI3c_T_7 = not(_xI3c_T_6) @[FFT3PipelineCalc.scala 90:108]
    node _xI3c_T_8 = cat(_xI3c_T_3, _xI3c_T_7) @[Cat.scala 33:92]
    node _xI3c_T_9 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:173]
    node _xI3c_T_10 = bits(xI3cPre, 15, 15) @[FFT3PipelineCalc.scala 90:201]
    node _xI3c_T_11 = xor(_xI3c_T_9, _xI3c_T_10) @[FFT3PipelineCalc.scala 90:192]
    node _xI3c_T_12 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:233]
    node _xI3c_T_13 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:284]
    node _xI3c_T_14 = bits(_xI3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _xI3c_T_15 = mux(_xI3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xI3c_T_16 = not(_xI3c_T_15) @[FFT3PipelineCalc.scala 90:253]
    node _xI3c_T_17 = cat(_xI3c_T_12, _xI3c_T_16) @[Cat.scala 33:92]
    node _xI3c_T_18 = bits(xI3cPre, 15, 0) @[FFT3PipelineCalc.scala 90:313]
    node _xI3c_T_19 = mux(_xI3c_T_11, _xI3c_T_17, _xI3c_T_18) @[FFT3PipelineCalc.scala 90:164]
    node xI3c = mux(_xI3c_T_2, _xI3c_T_8, _xI3c_T_19) @[FFT3PipelineCalc.scala 90:19]
    io.dataOutSR3c <= xR3c @[FFT3PipelineCalc.scala 92:20]
    io.dataOutSI3c <= xI3c @[FFT3PipelineCalc.scala 93:20]
    node _yR3cPre_T = bits(sR3c, 15, 15) @[FFT3PipelineCalc.scala 95:35]
    node _yR3cPre_T_1 = bits(_yR3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _yR3cPre_T_2 = mux(_yR3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _yR3cPre_T_3 = cat(_yR3cPre_T_2, sR3c) @[Cat.scala 33:92]
    node _yR3cPre_T_4 = bits(qR3c, 16, 16) @[FFT3PipelineCalc.scala 95:72]
    node _yR3cPre_T_5 = cat(_yR3cPre_T_4, qR3c) @[Cat.scala 33:92]
    node _yR3cPre_T_6 = sub(_yR3cPre_T_3, _yR3cPre_T_5) @[FFT3PipelineCalc.scala 95:62]
    node yR3cPre = tail(_yR3cPre_T_6, 1) @[FFT3PipelineCalc.scala 95:62]
    node _yI3cPre_T = bits(sI3c, 15, 15) @[FFT3PipelineCalc.scala 96:35]
    node _yI3cPre_T_1 = bits(_yI3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _yI3cPre_T_2 = mux(_yI3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _yI3cPre_T_3 = cat(_yI3cPre_T_2, sI3c) @[Cat.scala 33:92]
    node _yI3cPre_T_4 = bits(qI3c, 16, 16) @[FFT3PipelineCalc.scala 96:72]
    node _yI3cPre_T_5 = cat(_yI3cPre_T_4, qI3c) @[Cat.scala 33:92]
    node _yI3cPre_T_6 = sub(_yI3cPre_T_3, _yI3cPre_T_5) @[FFT3PipelineCalc.scala 96:62]
    node yI3cPre = tail(_yI3cPre_T_6, 1) @[FFT3PipelineCalc.scala 96:62]
    node _yR3c_T = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:28]
    node _yR3c_T_1 = bits(yR3cPre, 16, 16) @[FFT3PipelineCalc.scala 98:56]
    node _yR3c_T_2 = xor(_yR3c_T, _yR3c_T_1) @[FFT3PipelineCalc.scala 98:47]
    node _yR3c_T_3 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:88]
    node _yR3c_T_4 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:139]
    node _yR3c_T_5 = bits(_yR3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _yR3c_T_6 = mux(_yR3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yR3c_T_7 = not(_yR3c_T_6) @[FFT3PipelineCalc.scala 98:108]
    node _yR3c_T_8 = cat(_yR3c_T_3, _yR3c_T_7) @[Cat.scala 33:92]
    node _yR3c_T_9 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:173]
    node _yR3c_T_10 = bits(yR3cPre, 15, 15) @[FFT3PipelineCalc.scala 98:201]
    node _yR3c_T_11 = xor(_yR3c_T_9, _yR3c_T_10) @[FFT3PipelineCalc.scala 98:192]
    node _yR3c_T_12 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:233]
    node _yR3c_T_13 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:284]
    node _yR3c_T_14 = bits(_yR3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _yR3c_T_15 = mux(_yR3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yR3c_T_16 = not(_yR3c_T_15) @[FFT3PipelineCalc.scala 98:253]
    node _yR3c_T_17 = cat(_yR3c_T_12, _yR3c_T_16) @[Cat.scala 33:92]
    node _yR3c_T_18 = bits(yR3cPre, 15, 0) @[FFT3PipelineCalc.scala 98:313]
    node _yR3c_T_19 = mux(_yR3c_T_11, _yR3c_T_17, _yR3c_T_18) @[FFT3PipelineCalc.scala 98:164]
    node yR3c = mux(_yR3c_T_2, _yR3c_T_8, _yR3c_T_19) @[FFT3PipelineCalc.scala 98:19]
    node _yI3c_T = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:28]
    node _yI3c_T_1 = bits(yI3cPre, 16, 16) @[FFT3PipelineCalc.scala 99:56]
    node _yI3c_T_2 = xor(_yI3c_T, _yI3c_T_1) @[FFT3PipelineCalc.scala 99:47]
    node _yI3c_T_3 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:88]
    node _yI3c_T_4 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:139]
    node _yI3c_T_5 = bits(_yI3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _yI3c_T_6 = mux(_yI3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yI3c_T_7 = not(_yI3c_T_6) @[FFT3PipelineCalc.scala 99:108]
    node _yI3c_T_8 = cat(_yI3c_T_3, _yI3c_T_7) @[Cat.scala 33:92]
    node _yI3c_T_9 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:173]
    node _yI3c_T_10 = bits(yI3cPre, 15, 15) @[FFT3PipelineCalc.scala 99:201]
    node _yI3c_T_11 = xor(_yI3c_T_9, _yI3c_T_10) @[FFT3PipelineCalc.scala 99:192]
    node _yI3c_T_12 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:233]
    node _yI3c_T_13 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:284]
    node _yI3c_T_14 = bits(_yI3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _yI3c_T_15 = mux(_yI3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yI3c_T_16 = not(_yI3c_T_15) @[FFT3PipelineCalc.scala 99:253]
    node _yI3c_T_17 = cat(_yI3c_T_12, _yI3c_T_16) @[Cat.scala 33:92]
    node _yI3c_T_18 = bits(yI3cPre, 15, 0) @[FFT3PipelineCalc.scala 99:313]
    node _yI3c_T_19 = mux(_yI3c_T_11, _yI3c_T_17, _yI3c_T_18) @[FFT3PipelineCalc.scala 99:164]
    node yI3c = mux(_yI3c_T_2, _yI3c_T_8, _yI3c_T_19) @[FFT3PipelineCalc.scala 99:19]
    io.dataOutTR3c <= yR3c @[FFT3PipelineCalc.scala 101:20]
    io.dataOutTI3c <= yI3c @[FFT3PipelineCalc.scala 102:20]

  module FFTEngine :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip readDataSram0Bank : UInt<32>[8], flip readDataSram1Bank : UInt<32>[8], readEnableSram0Bank : UInt<1>[8], readEnableSram1Bank : UInt<1>[8], writeDataSram0Bank : UInt<32>[8], writeDataSram1Bank : UInt<32>[8], writeEnableSram0Bank : UInt<1>[8], writeEnableSram1Bank : UInt<1>[8], addrSram0Bank : UInt<4>[8], addrSram1Bank : UInt<4>[8], fftDone : UInt<1>, flip fftEngineKick : UInt<1>, flip fftMode : UInt<1>, flip fftRShiftP0 : UInt<1>[7], flip fftRShiftP1 : UInt<1>[2]}

    clock is invalid
    reset is invalid
    io is invalid
    node isFFT = eq(io.fftMode, UInt<1>("h0")) @[FFTEngine.scala 40:17]
    reg stateReg : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[FFTEngine.scala 42:27]
    reg radixCount : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[FFTEngine.scala 44:29]
    reg phaseCount : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[FFTEngine.scala 46:29]
    node _T = eq(UInt<3>("h0"), stateReg) @[FFTEngine.scala 48:22]
    when _T : @[FFTEngine.scala 48:22]
      when io.fftEngineKick : @[FFTEngine.scala 50:36]
        stateReg <= UInt<3>("h1") @[FFTEngine.scala 51:26]
      else :
        stateReg <= stateReg @[FFTEngine.scala 53:26]
    else :
      node _T_1 = eq(UInt<3>("h1"), stateReg) @[FFTEngine.scala 48:22]
      when _T_1 : @[FFTEngine.scala 48:22]
        node _T_2 = eq(radixCount, UInt<4>("hf")) @[FFTEngine.scala 57:29]
        when _T_2 : @[FFTEngine.scala 57:46]
          stateReg <= UInt<3>("h2") @[FFTEngine.scala 58:26]
        else :
          stateReg <= stateReg @[FFTEngine.scala 60:26]
      else :
        node _T_3 = eq(UInt<3>("h2"), stateReg) @[FFTEngine.scala 48:22]
        when _T_3 : @[FFTEngine.scala 48:22]
          node _T_4 = eq(radixCount, UInt<2>("h3")) @[FFTEngine.scala 64:29]
          when _T_4 : @[FFTEngine.scala 64:45]
            stateReg <= UInt<3>("h3") @[FFTEngine.scala 65:26]
          else :
            stateReg <= stateReg @[FFTEngine.scala 67:26]
        else :
          node _T_5 = eq(UInt<3>("h3"), stateReg) @[FFTEngine.scala 48:22]
          when _T_5 : @[FFTEngine.scala 48:22]
            node _T_6 = eq(phaseCount, UInt<3>("h6")) @[FFTEngine.scala 71:29]
            when _T_6 : @[FFTEngine.scala 71:46]
              stateReg <= UInt<3>("h4") @[FFTEngine.scala 72:26]
            else :
              stateReg <= UInt<3>("h1") @[FFTEngine.scala 74:26]
          else :
            node _T_7 = eq(UInt<3>("h4"), stateReg) @[FFTEngine.scala 48:22]
            when _T_7 : @[FFTEngine.scala 48:22]
              stateReg <= UInt<3>("h0") @[FFTEngine.scala 78:22]
    node _radixInit_T = eq(stateReg, UInt<3>("h0")) @[FFTEngine.scala 82:31]
    node _radixInit_T_1 = eq(stateReg, UInt<3>("h1")) @[FFTEngine.scala 83:16]
    node _radixInit_T_2 = eq(radixCount, UInt<4>("hf")) @[FFTEngine.scala 83:45]
    node _radixInit_T_3 = and(_radixInit_T_1, _radixInit_T_2) @[FFTEngine.scala 83:30]
    node _radixInit_T_4 = or(_radixInit_T, _radixInit_T_3) @[FFTEngine.scala 82:45]
    node _radixInit_T_5 = eq(stateReg, UInt<3>("h2")) @[FFTEngine.scala 84:16]
    node _radixInit_T_6 = eq(radixCount, UInt<2>("h3")) @[FFTEngine.scala 84:46]
    node _radixInit_T_7 = and(_radixInit_T_5, _radixInit_T_6) @[FFTEngine.scala 84:31]
    node _radixInit_T_8 = or(_radixInit_T_4, _radixInit_T_7) @[FFTEngine.scala 83:63]
    node _radixInit_T_9 = eq(stateReg, UInt<3>("h3")) @[FFTEngine.scala 85:15]
    node _radixInit_T_10 = or(_radixInit_T_8, _radixInit_T_9) @[FFTEngine.scala 84:63]
    node _radixInit_T_11 = eq(stateReg, UInt<3>("h4")) @[FFTEngine.scala 86:15]
    node radixInit = or(_radixInit_T_10, _radixInit_T_11) @[FFTEngine.scala 85:32]
    node _radixUp_T = eq(stateReg, UInt<3>("h1")) @[FFTEngine.scala 88:29]
    node _radixUp_T_1 = eq(stateReg, UInt<3>("h2")) @[FFTEngine.scala 88:55]
    node radixUp = or(_radixUp_T, _radixUp_T_1) @[FFTEngine.scala 88:43]
    when radixInit : @[FFTEngine.scala 90:21]
      radixCount <= UInt<1>("h0") @[FFTEngine.scala 91:20]
    else :
      when radixUp : @[FFTEngine.scala 92:26]
        node _radixCount_T = add(radixCount, UInt<1>("h1")) @[FFTEngine.scala 93:34]
        node _radixCount_T_1 = tail(_radixCount_T, 1) @[FFTEngine.scala 93:34]
        radixCount <= _radixCount_T_1 @[FFTEngine.scala 93:20]
      else :
        radixCount <= radixCount @[FFTEngine.scala 95:20]
    node _phaseInit_T = eq(stateReg, UInt<3>("h0")) @[FFTEngine.scala 98:31]
    node _phaseInit_T_1 = eq(stateReg, UInt<3>("h3")) @[FFTEngine.scala 99:16]
    node _phaseInit_T_2 = eq(phaseCount, UInt<3>("h6")) @[FFTEngine.scala 99:47]
    node _phaseInit_T_3 = and(_phaseInit_T_1, _phaseInit_T_2) @[FFTEngine.scala 99:33]
    node _phaseInit_T_4 = or(_phaseInit_T, _phaseInit_T_3) @[FFTEngine.scala 98:45]
    node _phaseInit_T_5 = eq(stateReg, UInt<3>("h4")) @[FFTEngine.scala 100:15]
    node phaseInit = or(_phaseInit_T_4, _phaseInit_T_5) @[FFTEngine.scala 99:65]
    node phaseUp = eq(stateReg, UInt<3>("h3")) @[FFTEngine.scala 102:29]
    when phaseInit : @[FFTEngine.scala 104:21]
      phaseCount <= UInt<1>("h0") @[FFTEngine.scala 105:20]
    else :
      when phaseUp : @[FFTEngine.scala 106:26]
        node _phaseCount_T = add(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 107:34]
        node _phaseCount_T_1 = tail(_phaseCount_T, 1) @[FFTEngine.scala 107:34]
        phaseCount <= _phaseCount_T_1 @[FFTEngine.scala 107:20]
      else :
        phaseCount <= phaseCount @[FFTEngine.scala 109:20]
    reg srcBuffer : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[FFTEngine.scala 112:28]
    node _srcBufferNext_T = eq(stateReg, UInt<3>("h3")) @[FFTEngine.scala 114:35]
    node _srcBufferNext_T_1 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 114:54]
    node srcBufferNext = and(_srcBufferNext_T, _srcBufferNext_T_1) @[FFTEngine.scala 114:52]
    node _srcUp_T = eq(stateReg, UInt<3>("h0")) @[FFTEngine.scala 116:27]
    node _srcUp_T_1 = eq(stateReg, UInt<3>("h3")) @[FFTEngine.scala 116:53]
    node srcUp = or(_srcUp_T, _srcUp_T_1) @[FFTEngine.scala 116:41]
    when srcUp : @[FFTEngine.scala 118:17]
      srcBuffer <= srcBufferNext @[FFTEngine.scala 119:19]
    else :
      srcBuffer <= srcBuffer @[FFTEngine.scala 121:19]
    node kernelState = eq(stateReg, UInt<3>("h1")) @[FFTEngine.scala 124:33]
    node radixCountTemp = bits(radixCount, 3, 0) @[FFTEngine.scala 128:36]
    wire nk : UInt[4] @[FFTEngine.scala 136:18]
    node _T_8 = eq(phaseCount, UInt<3>("h6")) @[FFTEngine.scala 151:25]
    when _T_8 : @[FFTEngine.scala 151:42]
      node _nk_0_T = bits(radixCount, 3, 0) @[FFTEngine.scala 153:45]
      node _nk_0_T_1 = cat(UInt<1>("h0"), _nk_0_T) @[Cat.scala 33:92]
      nk[0] <= _nk_0_T_1 @[FFTEngine.scala 153:23]
      node _nk_1_T = bits(radixCount, 3, 0) @[FFTEngine.scala 153:45]
      node _nk_1_T_1 = cat(UInt<1>("h1"), _nk_1_T) @[Cat.scala 33:92]
      nk[1] <= _nk_1_T_1 @[FFTEngine.scala 153:23]
      node _nk_2_T = bits(radixCount, 3, 0) @[FFTEngine.scala 153:45]
      node _nk_2_T_1 = cat(UInt<2>("h2"), _nk_2_T) @[Cat.scala 33:92]
      nk[2] <= _nk_2_T_1 @[FFTEngine.scala 153:23]
      node _nk_3_T = bits(radixCount, 3, 0) @[FFTEngine.scala 153:45]
      node _nk_3_T_1 = cat(UInt<2>("h3"), _nk_3_T) @[Cat.scala 33:92]
      nk[3] <= _nk_3_T_1 @[FFTEngine.scala 153:23]
    else :
      node _T_9 = eq(phaseCount, UInt<3>("h5")) @[FFTEngine.scala 155:32]
      when _T_9 : @[FFTEngine.scala 155:51]
        node _nk_0_T_2 = bits(radixCount, 3, 1) @[FFTEngine.scala 160:49]
        node nk_0_hi = cat(UInt<1>("h0"), _nk_0_T_2) @[Cat.scala 33:92]
        node _nk_0_T_3 = cat(nk_0_hi, UInt<1>("h0")) @[Cat.scala 33:92]
        nk[0] <= _nk_0_T_3 @[FFTEngine.scala 160:27]
        node _nk_1_T_2 = bits(radixCount, 3, 1) @[FFTEngine.scala 160:49]
        node nk_1_hi = cat(UInt<1>("h1"), _nk_1_T_2) @[Cat.scala 33:92]
        node _nk_1_T_3 = cat(nk_1_hi, UInt<1>("h0")) @[Cat.scala 33:92]
        nk[1] <= _nk_1_T_3 @[FFTEngine.scala 160:27]
        node _nk_2_T_2 = bits(radixCount, 3, 1) @[FFTEngine.scala 160:49]
        node nk_2_hi = cat(UInt<2>("h2"), _nk_2_T_2) @[Cat.scala 33:92]
        node _nk_2_T_3 = cat(nk_2_hi, UInt<1>("h0")) @[Cat.scala 33:92]
        nk[2] <= _nk_2_T_3 @[FFTEngine.scala 160:27]
        node _nk_3_T_2 = bits(radixCount, 3, 1) @[FFTEngine.scala 160:49]
        node nk_3_hi = cat(UInt<2>("h3"), _nk_3_T_2) @[Cat.scala 33:92]
        node _nk_3_T_3 = cat(nk_3_hi, UInt<1>("h0")) @[Cat.scala 33:92]
        nk[3] <= _nk_3_T_3 @[FFTEngine.scala 160:27]
      else :
        node _nk_0_T_4 = bits(radixCount, 3, 0) @[FFTEngine.scala 167:40]
        node _nk_0_T_5 = cat(_nk_0_T_4, UInt<2>("h0")) @[Cat.scala 33:92]
        wire _nk_0_WIRE : UInt<1>[6] @[FFTEngine.scala 167:125]
        _nk_0_WIRE[0] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        _nk_0_WIRE[1] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        _nk_0_WIRE[2] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        _nk_0_WIRE[3] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        _nk_0_WIRE[4] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        _nk_0_WIRE[5] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        node nk_0_lo_hi = cat(_nk_0_WIRE[2], _nk_0_WIRE[1]) @[FFTEngine.scala 167:156]
        node nk_0_lo = cat(nk_0_lo_hi, _nk_0_WIRE[0]) @[FFTEngine.scala 167:156]
        node nk_0_hi_hi = cat(_nk_0_WIRE[5], _nk_0_WIRE[4]) @[FFTEngine.scala 167:156]
        node nk_0_hi_1 = cat(nk_0_hi_hi, _nk_0_WIRE[3]) @[FFTEngine.scala 167:156]
        node _nk_0_T_6 = cat(nk_0_hi_1, nk_0_lo) @[FFTEngine.scala 167:156]
        node _nk_0_T_7 = cat(UInt<1>("h0"), _nk_0_T_6) @[Cat.scala 33:92]
        node _nk_0_T_8 = dshr(_nk_0_T_7, phaseCount) @[FFTEngine.scala 167:164]
        node _nk_0_T_9 = not(_nk_0_T_8) @[FFTEngine.scala 167:102]
        node _nk_0_T_10 = and(_nk_0_T_5, _nk_0_T_9) @[FFTEngine.scala 167:100]
        nk[0] <= _nk_0_T_10 @[FFTEngine.scala 167:23]
        node _nk_1_T_4 = bits(radixCount, 3, 0) @[FFTEngine.scala 167:40]
        node _nk_1_T_5 = cat(_nk_1_T_4, UInt<2>("h1")) @[Cat.scala 33:92]
        wire _nk_1_WIRE : UInt<1>[6] @[FFTEngine.scala 167:125]
        _nk_1_WIRE[0] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        _nk_1_WIRE[1] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        _nk_1_WIRE[2] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        _nk_1_WIRE[3] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        _nk_1_WIRE[4] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        _nk_1_WIRE[5] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        node nk_1_lo_hi = cat(_nk_1_WIRE[2], _nk_1_WIRE[1]) @[FFTEngine.scala 167:156]
        node nk_1_lo = cat(nk_1_lo_hi, _nk_1_WIRE[0]) @[FFTEngine.scala 167:156]
        node nk_1_hi_hi = cat(_nk_1_WIRE[5], _nk_1_WIRE[4]) @[FFTEngine.scala 167:156]
        node nk_1_hi_1 = cat(nk_1_hi_hi, _nk_1_WIRE[3]) @[FFTEngine.scala 167:156]
        node _nk_1_T_6 = cat(nk_1_hi_1, nk_1_lo) @[FFTEngine.scala 167:156]
        node _nk_1_T_7 = cat(UInt<1>("h0"), _nk_1_T_6) @[Cat.scala 33:92]
        node _nk_1_T_8 = dshr(_nk_1_T_7, phaseCount) @[FFTEngine.scala 167:164]
        node _nk_1_T_9 = not(_nk_1_T_8) @[FFTEngine.scala 167:102]
        node _nk_1_T_10 = and(_nk_1_T_5, _nk_1_T_9) @[FFTEngine.scala 167:100]
        nk[1] <= _nk_1_T_10 @[FFTEngine.scala 167:23]
        node _nk_2_T_4 = bits(radixCount, 3, 0) @[FFTEngine.scala 167:40]
        node _nk_2_T_5 = cat(_nk_2_T_4, UInt<2>("h2")) @[Cat.scala 33:92]
        wire _nk_2_WIRE : UInt<1>[6] @[FFTEngine.scala 167:125]
        _nk_2_WIRE[0] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        _nk_2_WIRE[1] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        _nk_2_WIRE[2] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        _nk_2_WIRE[3] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        _nk_2_WIRE[4] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        _nk_2_WIRE[5] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        node nk_2_lo_hi = cat(_nk_2_WIRE[2], _nk_2_WIRE[1]) @[FFTEngine.scala 167:156]
        node nk_2_lo = cat(nk_2_lo_hi, _nk_2_WIRE[0]) @[FFTEngine.scala 167:156]
        node nk_2_hi_hi = cat(_nk_2_WIRE[5], _nk_2_WIRE[4]) @[FFTEngine.scala 167:156]
        node nk_2_hi_1 = cat(nk_2_hi_hi, _nk_2_WIRE[3]) @[FFTEngine.scala 167:156]
        node _nk_2_T_6 = cat(nk_2_hi_1, nk_2_lo) @[FFTEngine.scala 167:156]
        node _nk_2_T_7 = cat(UInt<1>("h0"), _nk_2_T_6) @[Cat.scala 33:92]
        node _nk_2_T_8 = dshr(_nk_2_T_7, phaseCount) @[FFTEngine.scala 167:164]
        node _nk_2_T_9 = not(_nk_2_T_8) @[FFTEngine.scala 167:102]
        node _nk_2_T_10 = and(_nk_2_T_5, _nk_2_T_9) @[FFTEngine.scala 167:100]
        nk[2] <= _nk_2_T_10 @[FFTEngine.scala 167:23]
        node _nk_3_T_4 = bits(radixCount, 3, 0) @[FFTEngine.scala 167:40]
        node _nk_3_T_5 = cat(_nk_3_T_4, UInt<2>("h3")) @[Cat.scala 33:92]
        wire _nk_3_WIRE : UInt<1>[6] @[FFTEngine.scala 167:125]
        _nk_3_WIRE[0] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        _nk_3_WIRE[1] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        _nk_3_WIRE[2] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        _nk_3_WIRE[3] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        _nk_3_WIRE[4] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        _nk_3_WIRE[5] <= UInt<1>("h1") @[FFTEngine.scala 167:125]
        node nk_3_lo_hi = cat(_nk_3_WIRE[2], _nk_3_WIRE[1]) @[FFTEngine.scala 167:156]
        node nk_3_lo = cat(nk_3_lo_hi, _nk_3_WIRE[0]) @[FFTEngine.scala 167:156]
        node nk_3_hi_hi = cat(_nk_3_WIRE[5], _nk_3_WIRE[4]) @[FFTEngine.scala 167:156]
        node nk_3_hi_1 = cat(nk_3_hi_hi, _nk_3_WIRE[3]) @[FFTEngine.scala 167:156]
        node _nk_3_T_6 = cat(nk_3_hi_1, nk_3_lo) @[FFTEngine.scala 167:156]
        node _nk_3_T_7 = cat(UInt<1>("h0"), _nk_3_T_6) @[Cat.scala 33:92]
        node _nk_3_T_8 = dshr(_nk_3_T_7, phaseCount) @[FFTEngine.scala 167:164]
        node _nk_3_T_9 = not(_nk_3_T_8) @[FFTEngine.scala 167:102]
        node _nk_3_T_10 = and(_nk_3_T_5, _nk_3_T_9) @[FFTEngine.scala 167:100]
        nk[3] <= _nk_3_T_10 @[FFTEngine.scala 167:23]
    wire addrSPre : UInt[4] @[FFTEngine.scala 182:24]
    wire addrTPre : UInt[4] @[FFTEngine.scala 183:24]
    node _T_10 = eq(phaseCount, UInt<3>("h6")) @[FFTEngine.scala 201:25]
    when _T_10 : @[FFTEngine.scala 201:42]
      node addrSPre_0_hi = cat(UInt<1>("h0"), UInt<2>("h0")) @[Cat.scala 33:92]
      node _addrSPre_0_T = cat(addrSPre_0_hi, radixCountTemp) @[Cat.scala 33:92]
      addrSPre[0] <= _addrSPre_0_T @[FFTEngine.scala 203:29]
      node addrTPre_0_hi = cat(UInt<1>("h1"), UInt<2>("h0")) @[Cat.scala 33:92]
      node _addrTPre_0_T = cat(addrTPre_0_hi, radixCountTemp) @[Cat.scala 33:92]
      addrTPre[0] <= _addrTPre_0_T @[FFTEngine.scala 204:29]
      node addrSPre_1_hi = cat(UInt<1>("h0"), UInt<2>("h1")) @[Cat.scala 33:92]
      node _addrSPre_1_T = cat(addrSPre_1_hi, radixCountTemp) @[Cat.scala 33:92]
      addrSPre[1] <= _addrSPre_1_T @[FFTEngine.scala 203:29]
      node addrTPre_1_hi = cat(UInt<1>("h1"), UInt<2>("h1")) @[Cat.scala 33:92]
      node _addrTPre_1_T = cat(addrTPre_1_hi, radixCountTemp) @[Cat.scala 33:92]
      addrTPre[1] <= _addrTPre_1_T @[FFTEngine.scala 204:29]
      node addrSPre_2_hi = cat(UInt<1>("h0"), UInt<2>("h2")) @[Cat.scala 33:92]
      node _addrSPre_2_T = cat(addrSPre_2_hi, radixCountTemp) @[Cat.scala 33:92]
      addrSPre[2] <= _addrSPre_2_T @[FFTEngine.scala 203:29]
      node addrTPre_2_hi = cat(UInt<1>("h1"), UInt<2>("h2")) @[Cat.scala 33:92]
      node _addrTPre_2_T = cat(addrTPre_2_hi, radixCountTemp) @[Cat.scala 33:92]
      addrTPre[2] <= _addrTPre_2_T @[FFTEngine.scala 204:29]
      node addrSPre_3_hi = cat(UInt<1>("h0"), UInt<2>("h3")) @[Cat.scala 33:92]
      node _addrSPre_3_T = cat(addrSPre_3_hi, radixCountTemp) @[Cat.scala 33:92]
      addrSPre[3] <= _addrSPre_3_T @[FFTEngine.scala 203:29]
      node addrTPre_3_hi = cat(UInt<1>("h1"), UInt<2>("h3")) @[Cat.scala 33:92]
      node _addrTPre_3_T = cat(addrTPre_3_hi, radixCountTemp) @[Cat.scala 33:92]
      addrTPre[3] <= _addrTPre_3_T @[FFTEngine.scala 204:29]
    else :
      node _T_11 = eq(phaseCount, UInt<3>("h5")) @[FFTEngine.scala 206:32]
      when _T_11 : @[FFTEngine.scala 206:51]
        node addrSPre_0_hi_1 = cat(UInt<1>("h0"), UInt<2>("h0")) @[Cat.scala 33:92]
        node _addrSPre_0_T_1 = cat(addrSPre_0_hi_1, radixCountTemp) @[Cat.scala 33:92]
        node _addrSPre_0_dataTemp_T = cat(_addrSPre_0_T_1, _addrSPre_0_T_1) @[Cat.scala 33:92]
        node addrSPre_0_dataTemp = dshr(_addrSPre_0_dataTemp_T, UInt<1>("h1")) @[FFTEngine.scala 178:40]
        node _addrSPre_0_T_2 = bits(addrSPre_0_dataTemp, 6, 0) @[FFTEngine.scala 179:17]
        addrSPre[0] <= _addrSPre_0_T_2 @[FFTEngine.scala 208:29]
        node addrTPre_0_hi_1 = cat(UInt<1>("h1"), UInt<2>("h0")) @[Cat.scala 33:92]
        node _addrTPre_0_T_1 = cat(addrTPre_0_hi_1, radixCountTemp) @[Cat.scala 33:92]
        node _addrTPre_0_dataTemp_T = cat(_addrTPre_0_T_1, _addrTPre_0_T_1) @[Cat.scala 33:92]
        node addrTPre_0_dataTemp = dshr(_addrTPre_0_dataTemp_T, UInt<1>("h1")) @[FFTEngine.scala 178:40]
        node _addrTPre_0_T_2 = bits(addrTPre_0_dataTemp, 6, 0) @[FFTEngine.scala 179:17]
        addrTPre[0] <= _addrTPre_0_T_2 @[FFTEngine.scala 209:29]
        node addrSPre_1_hi_1 = cat(UInt<1>("h0"), UInt<2>("h1")) @[Cat.scala 33:92]
        node _addrSPre_1_T_1 = cat(addrSPre_1_hi_1, radixCountTemp) @[Cat.scala 33:92]
        node _addrSPre_1_dataTemp_T = cat(_addrSPre_1_T_1, _addrSPre_1_T_1) @[Cat.scala 33:92]
        node addrSPre_1_dataTemp = dshr(_addrSPre_1_dataTemp_T, UInt<1>("h1")) @[FFTEngine.scala 178:40]
        node _addrSPre_1_T_2 = bits(addrSPre_1_dataTemp, 6, 0) @[FFTEngine.scala 179:17]
        addrSPre[1] <= _addrSPre_1_T_2 @[FFTEngine.scala 208:29]
        node addrTPre_1_hi_1 = cat(UInt<1>("h1"), UInt<2>("h1")) @[Cat.scala 33:92]
        node _addrTPre_1_T_1 = cat(addrTPre_1_hi_1, radixCountTemp) @[Cat.scala 33:92]
        node _addrTPre_1_dataTemp_T = cat(_addrTPre_1_T_1, _addrTPre_1_T_1) @[Cat.scala 33:92]
        node addrTPre_1_dataTemp = dshr(_addrTPre_1_dataTemp_T, UInt<1>("h1")) @[FFTEngine.scala 178:40]
        node _addrTPre_1_T_2 = bits(addrTPre_1_dataTemp, 6, 0) @[FFTEngine.scala 179:17]
        addrTPre[1] <= _addrTPre_1_T_2 @[FFTEngine.scala 209:29]
        node addrSPre_2_hi_1 = cat(UInt<1>("h0"), UInt<2>("h2")) @[Cat.scala 33:92]
        node _addrSPre_2_T_1 = cat(addrSPre_2_hi_1, radixCountTemp) @[Cat.scala 33:92]
        node _addrSPre_2_dataTemp_T = cat(_addrSPre_2_T_1, _addrSPre_2_T_1) @[Cat.scala 33:92]
        node addrSPre_2_dataTemp = dshr(_addrSPre_2_dataTemp_T, UInt<1>("h1")) @[FFTEngine.scala 178:40]
        node _addrSPre_2_T_2 = bits(addrSPre_2_dataTemp, 6, 0) @[FFTEngine.scala 179:17]
        addrSPre[2] <= _addrSPre_2_T_2 @[FFTEngine.scala 208:29]
        node addrTPre_2_hi_1 = cat(UInt<1>("h1"), UInt<2>("h2")) @[Cat.scala 33:92]
        node _addrTPre_2_T_1 = cat(addrTPre_2_hi_1, radixCountTemp) @[Cat.scala 33:92]
        node _addrTPre_2_dataTemp_T = cat(_addrTPre_2_T_1, _addrTPre_2_T_1) @[Cat.scala 33:92]
        node addrTPre_2_dataTemp = dshr(_addrTPre_2_dataTemp_T, UInt<1>("h1")) @[FFTEngine.scala 178:40]
        node _addrTPre_2_T_2 = bits(addrTPre_2_dataTemp, 6, 0) @[FFTEngine.scala 179:17]
        addrTPre[2] <= _addrTPre_2_T_2 @[FFTEngine.scala 209:29]
        node addrSPre_3_hi_1 = cat(UInt<1>("h0"), UInt<2>("h3")) @[Cat.scala 33:92]
        node _addrSPre_3_T_1 = cat(addrSPre_3_hi_1, radixCountTemp) @[Cat.scala 33:92]
        node _addrSPre_3_dataTemp_T = cat(_addrSPre_3_T_1, _addrSPre_3_T_1) @[Cat.scala 33:92]
        node addrSPre_3_dataTemp = dshr(_addrSPre_3_dataTemp_T, UInt<1>("h1")) @[FFTEngine.scala 178:40]
        node _addrSPre_3_T_2 = bits(addrSPre_3_dataTemp, 6, 0) @[FFTEngine.scala 179:17]
        addrSPre[3] <= _addrSPre_3_T_2 @[FFTEngine.scala 208:29]
        node addrTPre_3_hi_1 = cat(UInt<1>("h1"), UInt<2>("h3")) @[Cat.scala 33:92]
        node _addrTPre_3_T_1 = cat(addrTPre_3_hi_1, radixCountTemp) @[Cat.scala 33:92]
        node _addrTPre_3_dataTemp_T = cat(_addrTPre_3_T_1, _addrTPre_3_T_1) @[Cat.scala 33:92]
        node addrTPre_3_dataTemp = dshr(_addrTPre_3_dataTemp_T, UInt<1>("h1")) @[FFTEngine.scala 178:40]
        node _addrTPre_3_T_2 = bits(addrTPre_3_dataTemp, 6, 0) @[FFTEngine.scala 179:17]
        addrTPre[3] <= _addrTPre_3_T_2 @[FFTEngine.scala 209:29]
      else :
        node addrSPre_0_hi_2 = cat(radixCountTemp, UInt<2>("h0")) @[Cat.scala 33:92]
        node _addrSPre_0_T_3 = cat(addrSPre_0_hi_2, UInt<1>("h0")) @[Cat.scala 33:92]
        node _addrSPre_0_dataTemp_T_1 = cat(_addrSPre_0_T_3, _addrSPre_0_T_3) @[Cat.scala 33:92]
        node addrSPre_0_dataTemp_1 = dshl(_addrSPre_0_dataTemp_T_1, phaseCount) @[FFTEngine.scala 173:40]
        node _addrSPre_0_T_4 = bits(addrSPre_0_dataTemp_1, 13, 7) @[FFTEngine.scala 174:17]
        addrSPre[0] <= _addrSPre_0_T_4 @[FFTEngine.scala 213:29]
        node addrTPre_0_hi_2 = cat(radixCountTemp, UInt<2>("h0")) @[Cat.scala 33:92]
        node _addrTPre_0_T_3 = cat(addrTPre_0_hi_2, UInt<1>("h1")) @[Cat.scala 33:92]
        node _addrTPre_0_dataTemp_T_1 = cat(_addrTPre_0_T_3, _addrTPre_0_T_3) @[Cat.scala 33:92]
        node addrTPre_0_dataTemp_1 = dshl(_addrTPre_0_dataTemp_T_1, phaseCount) @[FFTEngine.scala 173:40]
        node _addrTPre_0_T_4 = bits(addrTPre_0_dataTemp_1, 13, 7) @[FFTEngine.scala 174:17]
        addrTPre[0] <= _addrTPre_0_T_4 @[FFTEngine.scala 214:29]
        node addrSPre_1_hi_2 = cat(radixCountTemp, UInt<2>("h1")) @[Cat.scala 33:92]
        node _addrSPre_1_T_3 = cat(addrSPre_1_hi_2, UInt<1>("h0")) @[Cat.scala 33:92]
        node _addrSPre_1_dataTemp_T_1 = cat(_addrSPre_1_T_3, _addrSPre_1_T_3) @[Cat.scala 33:92]
        node addrSPre_1_dataTemp_1 = dshl(_addrSPre_1_dataTemp_T_1, phaseCount) @[FFTEngine.scala 173:40]
        node _addrSPre_1_T_4 = bits(addrSPre_1_dataTemp_1, 13, 7) @[FFTEngine.scala 174:17]
        addrSPre[1] <= _addrSPre_1_T_4 @[FFTEngine.scala 213:29]
        node addrTPre_1_hi_2 = cat(radixCountTemp, UInt<2>("h1")) @[Cat.scala 33:92]
        node _addrTPre_1_T_3 = cat(addrTPre_1_hi_2, UInt<1>("h1")) @[Cat.scala 33:92]
        node _addrTPre_1_dataTemp_T_1 = cat(_addrTPre_1_T_3, _addrTPre_1_T_3) @[Cat.scala 33:92]
        node addrTPre_1_dataTemp_1 = dshl(_addrTPre_1_dataTemp_T_1, phaseCount) @[FFTEngine.scala 173:40]
        node _addrTPre_1_T_4 = bits(addrTPre_1_dataTemp_1, 13, 7) @[FFTEngine.scala 174:17]
        addrTPre[1] <= _addrTPre_1_T_4 @[FFTEngine.scala 214:29]
        node addrSPre_2_hi_2 = cat(radixCountTemp, UInt<2>("h2")) @[Cat.scala 33:92]
        node _addrSPre_2_T_3 = cat(addrSPre_2_hi_2, UInt<1>("h0")) @[Cat.scala 33:92]
        node _addrSPre_2_dataTemp_T_1 = cat(_addrSPre_2_T_3, _addrSPre_2_T_3) @[Cat.scala 33:92]
        node addrSPre_2_dataTemp_1 = dshl(_addrSPre_2_dataTemp_T_1, phaseCount) @[FFTEngine.scala 173:40]
        node _addrSPre_2_T_4 = bits(addrSPre_2_dataTemp_1, 13, 7) @[FFTEngine.scala 174:17]
        addrSPre[2] <= _addrSPre_2_T_4 @[FFTEngine.scala 213:29]
        node addrTPre_2_hi_2 = cat(radixCountTemp, UInt<2>("h2")) @[Cat.scala 33:92]
        node _addrTPre_2_T_3 = cat(addrTPre_2_hi_2, UInt<1>("h1")) @[Cat.scala 33:92]
        node _addrTPre_2_dataTemp_T_1 = cat(_addrTPre_2_T_3, _addrTPre_2_T_3) @[Cat.scala 33:92]
        node addrTPre_2_dataTemp_1 = dshl(_addrTPre_2_dataTemp_T_1, phaseCount) @[FFTEngine.scala 173:40]
        node _addrTPre_2_T_4 = bits(addrTPre_2_dataTemp_1, 13, 7) @[FFTEngine.scala 174:17]
        addrTPre[2] <= _addrTPre_2_T_4 @[FFTEngine.scala 214:29]
        node addrSPre_3_hi_2 = cat(radixCountTemp, UInt<2>("h3")) @[Cat.scala 33:92]
        node _addrSPre_3_T_3 = cat(addrSPre_3_hi_2, UInt<1>("h0")) @[Cat.scala 33:92]
        node _addrSPre_3_dataTemp_T_1 = cat(_addrSPre_3_T_3, _addrSPre_3_T_3) @[Cat.scala 33:92]
        node addrSPre_3_dataTemp_1 = dshl(_addrSPre_3_dataTemp_T_1, phaseCount) @[FFTEngine.scala 173:40]
        node _addrSPre_3_T_4 = bits(addrSPre_3_dataTemp_1, 13, 7) @[FFTEngine.scala 174:17]
        addrSPre[3] <= _addrSPre_3_T_4 @[FFTEngine.scala 213:29]
        node addrTPre_3_hi_2 = cat(radixCountTemp, UInt<2>("h3")) @[Cat.scala 33:92]
        node _addrTPre_3_T_3 = cat(addrTPre_3_hi_2, UInt<1>("h1")) @[Cat.scala 33:92]
        node _addrTPre_3_dataTemp_T_1 = cat(_addrTPre_3_T_3, _addrTPre_3_T_3) @[Cat.scala 33:92]
        node addrTPre_3_dataTemp_1 = dshl(_addrTPre_3_dataTemp_T_1, phaseCount) @[FFTEngine.scala 173:40]
        node _addrTPre_3_T_4 = bits(addrTPre_3_dataTemp_1, 13, 7) @[FFTEngine.scala 174:17]
        addrTPre[3] <= _addrTPre_3_T_4 @[FFTEngine.scala 214:29]
    node _addrS_temp_T = bits(addrSPre[0], 6, 6) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_1 = bits(addrSPre[0], 0, 0) @[FFTEngine.scala 132:55]
    node addrS_temp_0 = mux(UInt<1>("h1"), _addrS_temp_T, _addrS_temp_T_1) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_2 = bits(addrSPre[0], 5, 5) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_3 = bits(addrSPre[0], 1, 1) @[FFTEngine.scala 132:55]
    node addrS_temp_1 = mux(UInt<1>("h1"), _addrS_temp_T_2, _addrS_temp_T_3) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_4 = bits(addrSPre[0], 4, 4) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_5 = bits(addrSPre[0], 2, 2) @[FFTEngine.scala 132:55]
    node addrS_temp_2 = mux(UInt<1>("h1"), _addrS_temp_T_4, _addrS_temp_T_5) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_6 = bits(addrSPre[0], 3, 3) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_7 = bits(addrSPre[0], 3, 3) @[FFTEngine.scala 132:55]
    node addrS_temp_3 = mux(UInt<1>("h1"), _addrS_temp_T_6, _addrS_temp_T_7) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_8 = bits(addrSPre[0], 2, 2) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_9 = bits(addrSPre[0], 4, 4) @[FFTEngine.scala 132:55]
    node addrS_temp_4 = mux(UInt<1>("h1"), _addrS_temp_T_8, _addrS_temp_T_9) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_10 = bits(addrSPre[0], 1, 1) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_11 = bits(addrSPre[0], 5, 5) @[FFTEngine.scala 132:55]
    node addrS_temp_5 = mux(UInt<1>("h1"), _addrS_temp_T_10, _addrS_temp_T_11) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_12 = bits(addrSPre[0], 0, 0) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_13 = bits(addrSPre[0], 6, 6) @[FFTEngine.scala 132:55]
    node addrS_temp_6 = mux(UInt<1>("h1"), _addrS_temp_T_12, _addrS_temp_T_13) @[FFTEngine.scala 132:26]
    wire _addrS_WIRE : UInt<1>[7] @[FFTEngine.scala 219:78]
    _addrS_WIRE[0] <= addrS_temp_0 @[FFTEngine.scala 219:78]
    _addrS_WIRE[1] <= addrS_temp_1 @[FFTEngine.scala 219:78]
    _addrS_WIRE[2] <= addrS_temp_2 @[FFTEngine.scala 219:78]
    _addrS_WIRE[3] <= addrS_temp_3 @[FFTEngine.scala 219:78]
    _addrS_WIRE[4] <= addrS_temp_4 @[FFTEngine.scala 219:78]
    _addrS_WIRE[5] <= addrS_temp_5 @[FFTEngine.scala 219:78]
    _addrS_WIRE[6] <= addrS_temp_6 @[FFTEngine.scala 219:78]
    node addrS_lo_hi = cat(_addrS_WIRE[2], _addrS_WIRE[1]) @[FFTEngine.scala 219:125]
    node addrS_lo = cat(addrS_lo_hi, _addrS_WIRE[0]) @[FFTEngine.scala 219:125]
    node addrS_hi_lo = cat(_addrS_WIRE[4], _addrS_WIRE[3]) @[FFTEngine.scala 219:125]
    node addrS_hi_hi = cat(_addrS_WIRE[6], _addrS_WIRE[5]) @[FFTEngine.scala 219:125]
    node addrS_hi = cat(addrS_hi_hi, addrS_hi_lo) @[FFTEngine.scala 219:125]
    node addrS_0 = cat(addrS_hi, addrS_lo) @[FFTEngine.scala 219:125]
    node _addrS_temp_T_14 = bits(addrSPre[1], 6, 6) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_15 = bits(addrSPre[1], 0, 0) @[FFTEngine.scala 132:55]
    node addrS_temp_0_1 = mux(UInt<1>("h1"), _addrS_temp_T_14, _addrS_temp_T_15) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_16 = bits(addrSPre[1], 5, 5) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_17 = bits(addrSPre[1], 1, 1) @[FFTEngine.scala 132:55]
    node addrS_temp_1_1 = mux(UInt<1>("h1"), _addrS_temp_T_16, _addrS_temp_T_17) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_18 = bits(addrSPre[1], 4, 4) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_19 = bits(addrSPre[1], 2, 2) @[FFTEngine.scala 132:55]
    node addrS_temp_2_1 = mux(UInt<1>("h1"), _addrS_temp_T_18, _addrS_temp_T_19) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_20 = bits(addrSPre[1], 3, 3) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_21 = bits(addrSPre[1], 3, 3) @[FFTEngine.scala 132:55]
    node addrS_temp_3_1 = mux(UInt<1>("h1"), _addrS_temp_T_20, _addrS_temp_T_21) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_22 = bits(addrSPre[1], 2, 2) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_23 = bits(addrSPre[1], 4, 4) @[FFTEngine.scala 132:55]
    node addrS_temp_4_1 = mux(UInt<1>("h1"), _addrS_temp_T_22, _addrS_temp_T_23) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_24 = bits(addrSPre[1], 1, 1) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_25 = bits(addrSPre[1], 5, 5) @[FFTEngine.scala 132:55]
    node addrS_temp_5_1 = mux(UInt<1>("h1"), _addrS_temp_T_24, _addrS_temp_T_25) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_26 = bits(addrSPre[1], 0, 0) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_27 = bits(addrSPre[1], 6, 6) @[FFTEngine.scala 132:55]
    node addrS_temp_6_1 = mux(UInt<1>("h1"), _addrS_temp_T_26, _addrS_temp_T_27) @[FFTEngine.scala 132:26]
    wire _addrS_WIRE_1 : UInt<1>[7] @[FFTEngine.scala 219:78]
    _addrS_WIRE_1[0] <= addrS_temp_0_1 @[FFTEngine.scala 219:78]
    _addrS_WIRE_1[1] <= addrS_temp_1_1 @[FFTEngine.scala 219:78]
    _addrS_WIRE_1[2] <= addrS_temp_2_1 @[FFTEngine.scala 219:78]
    _addrS_WIRE_1[3] <= addrS_temp_3_1 @[FFTEngine.scala 219:78]
    _addrS_WIRE_1[4] <= addrS_temp_4_1 @[FFTEngine.scala 219:78]
    _addrS_WIRE_1[5] <= addrS_temp_5_1 @[FFTEngine.scala 219:78]
    _addrS_WIRE_1[6] <= addrS_temp_6_1 @[FFTEngine.scala 219:78]
    node addrS_lo_hi_1 = cat(_addrS_WIRE_1[2], _addrS_WIRE_1[1]) @[FFTEngine.scala 219:125]
    node addrS_lo_1 = cat(addrS_lo_hi_1, _addrS_WIRE_1[0]) @[FFTEngine.scala 219:125]
    node addrS_hi_lo_1 = cat(_addrS_WIRE_1[4], _addrS_WIRE_1[3]) @[FFTEngine.scala 219:125]
    node addrS_hi_hi_1 = cat(_addrS_WIRE_1[6], _addrS_WIRE_1[5]) @[FFTEngine.scala 219:125]
    node addrS_hi_1 = cat(addrS_hi_hi_1, addrS_hi_lo_1) @[FFTEngine.scala 219:125]
    node addrS_1 = cat(addrS_hi_1, addrS_lo_1) @[FFTEngine.scala 219:125]
    node _addrS_temp_T_28 = bits(addrSPre[2], 6, 6) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_29 = bits(addrSPre[2], 0, 0) @[FFTEngine.scala 132:55]
    node addrS_temp_0_2 = mux(UInt<1>("h1"), _addrS_temp_T_28, _addrS_temp_T_29) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_30 = bits(addrSPre[2], 5, 5) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_31 = bits(addrSPre[2], 1, 1) @[FFTEngine.scala 132:55]
    node addrS_temp_1_2 = mux(UInt<1>("h1"), _addrS_temp_T_30, _addrS_temp_T_31) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_32 = bits(addrSPre[2], 4, 4) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_33 = bits(addrSPre[2], 2, 2) @[FFTEngine.scala 132:55]
    node addrS_temp_2_2 = mux(UInt<1>("h1"), _addrS_temp_T_32, _addrS_temp_T_33) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_34 = bits(addrSPre[2], 3, 3) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_35 = bits(addrSPre[2], 3, 3) @[FFTEngine.scala 132:55]
    node addrS_temp_3_2 = mux(UInt<1>("h1"), _addrS_temp_T_34, _addrS_temp_T_35) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_36 = bits(addrSPre[2], 2, 2) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_37 = bits(addrSPre[2], 4, 4) @[FFTEngine.scala 132:55]
    node addrS_temp_4_2 = mux(UInt<1>("h1"), _addrS_temp_T_36, _addrS_temp_T_37) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_38 = bits(addrSPre[2], 1, 1) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_39 = bits(addrSPre[2], 5, 5) @[FFTEngine.scala 132:55]
    node addrS_temp_5_2 = mux(UInt<1>("h1"), _addrS_temp_T_38, _addrS_temp_T_39) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_40 = bits(addrSPre[2], 0, 0) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_41 = bits(addrSPre[2], 6, 6) @[FFTEngine.scala 132:55]
    node addrS_temp_6_2 = mux(UInt<1>("h1"), _addrS_temp_T_40, _addrS_temp_T_41) @[FFTEngine.scala 132:26]
    wire _addrS_WIRE_2 : UInt<1>[7] @[FFTEngine.scala 219:78]
    _addrS_WIRE_2[0] <= addrS_temp_0_2 @[FFTEngine.scala 219:78]
    _addrS_WIRE_2[1] <= addrS_temp_1_2 @[FFTEngine.scala 219:78]
    _addrS_WIRE_2[2] <= addrS_temp_2_2 @[FFTEngine.scala 219:78]
    _addrS_WIRE_2[3] <= addrS_temp_3_2 @[FFTEngine.scala 219:78]
    _addrS_WIRE_2[4] <= addrS_temp_4_2 @[FFTEngine.scala 219:78]
    _addrS_WIRE_2[5] <= addrS_temp_5_2 @[FFTEngine.scala 219:78]
    _addrS_WIRE_2[6] <= addrS_temp_6_2 @[FFTEngine.scala 219:78]
    node addrS_lo_hi_2 = cat(_addrS_WIRE_2[2], _addrS_WIRE_2[1]) @[FFTEngine.scala 219:125]
    node addrS_lo_2 = cat(addrS_lo_hi_2, _addrS_WIRE_2[0]) @[FFTEngine.scala 219:125]
    node addrS_hi_lo_2 = cat(_addrS_WIRE_2[4], _addrS_WIRE_2[3]) @[FFTEngine.scala 219:125]
    node addrS_hi_hi_2 = cat(_addrS_WIRE_2[6], _addrS_WIRE_2[5]) @[FFTEngine.scala 219:125]
    node addrS_hi_2 = cat(addrS_hi_hi_2, addrS_hi_lo_2) @[FFTEngine.scala 219:125]
    node addrS_2 = cat(addrS_hi_2, addrS_lo_2) @[FFTEngine.scala 219:125]
    node _addrS_temp_T_42 = bits(addrSPre[3], 6, 6) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_43 = bits(addrSPre[3], 0, 0) @[FFTEngine.scala 132:55]
    node addrS_temp_0_3 = mux(UInt<1>("h1"), _addrS_temp_T_42, _addrS_temp_T_43) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_44 = bits(addrSPre[3], 5, 5) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_45 = bits(addrSPre[3], 1, 1) @[FFTEngine.scala 132:55]
    node addrS_temp_1_3 = mux(UInt<1>("h1"), _addrS_temp_T_44, _addrS_temp_T_45) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_46 = bits(addrSPre[3], 4, 4) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_47 = bits(addrSPre[3], 2, 2) @[FFTEngine.scala 132:55]
    node addrS_temp_2_3 = mux(UInt<1>("h1"), _addrS_temp_T_46, _addrS_temp_T_47) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_48 = bits(addrSPre[3], 3, 3) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_49 = bits(addrSPre[3], 3, 3) @[FFTEngine.scala 132:55]
    node addrS_temp_3_3 = mux(UInt<1>("h1"), _addrS_temp_T_48, _addrS_temp_T_49) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_50 = bits(addrSPre[3], 2, 2) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_51 = bits(addrSPre[3], 4, 4) @[FFTEngine.scala 132:55]
    node addrS_temp_4_3 = mux(UInt<1>("h1"), _addrS_temp_T_50, _addrS_temp_T_51) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_52 = bits(addrSPre[3], 1, 1) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_53 = bits(addrSPre[3], 5, 5) @[FFTEngine.scala 132:55]
    node addrS_temp_5_3 = mux(UInt<1>("h1"), _addrS_temp_T_52, _addrS_temp_T_53) @[FFTEngine.scala 132:26]
    node _addrS_temp_T_54 = bits(addrSPre[3], 0, 0) @[FFTEngine.scala 132:34]
    node _addrS_temp_T_55 = bits(addrSPre[3], 6, 6) @[FFTEngine.scala 132:55]
    node addrS_temp_6_3 = mux(UInt<1>("h1"), _addrS_temp_T_54, _addrS_temp_T_55) @[FFTEngine.scala 132:26]
    wire _addrS_WIRE_3 : UInt<1>[7] @[FFTEngine.scala 219:78]
    _addrS_WIRE_3[0] <= addrS_temp_0_3 @[FFTEngine.scala 219:78]
    _addrS_WIRE_3[1] <= addrS_temp_1_3 @[FFTEngine.scala 219:78]
    _addrS_WIRE_3[2] <= addrS_temp_2_3 @[FFTEngine.scala 219:78]
    _addrS_WIRE_3[3] <= addrS_temp_3_3 @[FFTEngine.scala 219:78]
    _addrS_WIRE_3[4] <= addrS_temp_4_3 @[FFTEngine.scala 219:78]
    _addrS_WIRE_3[5] <= addrS_temp_5_3 @[FFTEngine.scala 219:78]
    _addrS_WIRE_3[6] <= addrS_temp_6_3 @[FFTEngine.scala 219:78]
    node addrS_lo_hi_3 = cat(_addrS_WIRE_3[2], _addrS_WIRE_3[1]) @[FFTEngine.scala 219:125]
    node addrS_lo_3 = cat(addrS_lo_hi_3, _addrS_WIRE_3[0]) @[FFTEngine.scala 219:125]
    node addrS_hi_lo_3 = cat(_addrS_WIRE_3[4], _addrS_WIRE_3[3]) @[FFTEngine.scala 219:125]
    node addrS_hi_hi_3 = cat(_addrS_WIRE_3[6], _addrS_WIRE_3[5]) @[FFTEngine.scala 219:125]
    node addrS_hi_3 = cat(addrS_hi_hi_3, addrS_hi_lo_3) @[FFTEngine.scala 219:125]
    node addrS_3 = cat(addrS_hi_3, addrS_lo_3) @[FFTEngine.scala 219:125]
    node _addrT_temp_T = bits(addrTPre[0], 6, 6) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_1 = bits(addrTPre[0], 0, 0) @[FFTEngine.scala 132:55]
    node addrT_temp_0 = mux(UInt<1>("h1"), _addrT_temp_T, _addrT_temp_T_1) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_2 = bits(addrTPre[0], 5, 5) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_3 = bits(addrTPre[0], 1, 1) @[FFTEngine.scala 132:55]
    node addrT_temp_1 = mux(UInt<1>("h1"), _addrT_temp_T_2, _addrT_temp_T_3) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_4 = bits(addrTPre[0], 4, 4) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_5 = bits(addrTPre[0], 2, 2) @[FFTEngine.scala 132:55]
    node addrT_temp_2 = mux(UInt<1>("h1"), _addrT_temp_T_4, _addrT_temp_T_5) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_6 = bits(addrTPre[0], 3, 3) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_7 = bits(addrTPre[0], 3, 3) @[FFTEngine.scala 132:55]
    node addrT_temp_3 = mux(UInt<1>("h1"), _addrT_temp_T_6, _addrT_temp_T_7) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_8 = bits(addrTPre[0], 2, 2) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_9 = bits(addrTPre[0], 4, 4) @[FFTEngine.scala 132:55]
    node addrT_temp_4 = mux(UInt<1>("h1"), _addrT_temp_T_8, _addrT_temp_T_9) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_10 = bits(addrTPre[0], 1, 1) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_11 = bits(addrTPre[0], 5, 5) @[FFTEngine.scala 132:55]
    node addrT_temp_5 = mux(UInt<1>("h1"), _addrT_temp_T_10, _addrT_temp_T_11) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_12 = bits(addrTPre[0], 0, 0) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_13 = bits(addrTPre[0], 6, 6) @[FFTEngine.scala 132:55]
    node addrT_temp_6 = mux(UInt<1>("h1"), _addrT_temp_T_12, _addrT_temp_T_13) @[FFTEngine.scala 132:26]
    wire _addrT_WIRE : UInt<1>[7] @[FFTEngine.scala 220:78]
    _addrT_WIRE[0] <= addrT_temp_0 @[FFTEngine.scala 220:78]
    _addrT_WIRE[1] <= addrT_temp_1 @[FFTEngine.scala 220:78]
    _addrT_WIRE[2] <= addrT_temp_2 @[FFTEngine.scala 220:78]
    _addrT_WIRE[3] <= addrT_temp_3 @[FFTEngine.scala 220:78]
    _addrT_WIRE[4] <= addrT_temp_4 @[FFTEngine.scala 220:78]
    _addrT_WIRE[5] <= addrT_temp_5 @[FFTEngine.scala 220:78]
    _addrT_WIRE[6] <= addrT_temp_6 @[FFTEngine.scala 220:78]
    node addrT_lo_hi = cat(_addrT_WIRE[2], _addrT_WIRE[1]) @[FFTEngine.scala 220:125]
    node addrT_lo = cat(addrT_lo_hi, _addrT_WIRE[0]) @[FFTEngine.scala 220:125]
    node addrT_hi_lo = cat(_addrT_WIRE[4], _addrT_WIRE[3]) @[FFTEngine.scala 220:125]
    node addrT_hi_hi = cat(_addrT_WIRE[6], _addrT_WIRE[5]) @[FFTEngine.scala 220:125]
    node addrT_hi = cat(addrT_hi_hi, addrT_hi_lo) @[FFTEngine.scala 220:125]
    node addrT_0 = cat(addrT_hi, addrT_lo) @[FFTEngine.scala 220:125]
    node _addrT_temp_T_14 = bits(addrTPre[1], 6, 6) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_15 = bits(addrTPre[1], 0, 0) @[FFTEngine.scala 132:55]
    node addrT_temp_0_1 = mux(UInt<1>("h1"), _addrT_temp_T_14, _addrT_temp_T_15) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_16 = bits(addrTPre[1], 5, 5) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_17 = bits(addrTPre[1], 1, 1) @[FFTEngine.scala 132:55]
    node addrT_temp_1_1 = mux(UInt<1>("h1"), _addrT_temp_T_16, _addrT_temp_T_17) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_18 = bits(addrTPre[1], 4, 4) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_19 = bits(addrTPre[1], 2, 2) @[FFTEngine.scala 132:55]
    node addrT_temp_2_1 = mux(UInt<1>("h1"), _addrT_temp_T_18, _addrT_temp_T_19) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_20 = bits(addrTPre[1], 3, 3) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_21 = bits(addrTPre[1], 3, 3) @[FFTEngine.scala 132:55]
    node addrT_temp_3_1 = mux(UInt<1>("h1"), _addrT_temp_T_20, _addrT_temp_T_21) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_22 = bits(addrTPre[1], 2, 2) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_23 = bits(addrTPre[1], 4, 4) @[FFTEngine.scala 132:55]
    node addrT_temp_4_1 = mux(UInt<1>("h1"), _addrT_temp_T_22, _addrT_temp_T_23) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_24 = bits(addrTPre[1], 1, 1) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_25 = bits(addrTPre[1], 5, 5) @[FFTEngine.scala 132:55]
    node addrT_temp_5_1 = mux(UInt<1>("h1"), _addrT_temp_T_24, _addrT_temp_T_25) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_26 = bits(addrTPre[1], 0, 0) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_27 = bits(addrTPre[1], 6, 6) @[FFTEngine.scala 132:55]
    node addrT_temp_6_1 = mux(UInt<1>("h1"), _addrT_temp_T_26, _addrT_temp_T_27) @[FFTEngine.scala 132:26]
    wire _addrT_WIRE_1 : UInt<1>[7] @[FFTEngine.scala 220:78]
    _addrT_WIRE_1[0] <= addrT_temp_0_1 @[FFTEngine.scala 220:78]
    _addrT_WIRE_1[1] <= addrT_temp_1_1 @[FFTEngine.scala 220:78]
    _addrT_WIRE_1[2] <= addrT_temp_2_1 @[FFTEngine.scala 220:78]
    _addrT_WIRE_1[3] <= addrT_temp_3_1 @[FFTEngine.scala 220:78]
    _addrT_WIRE_1[4] <= addrT_temp_4_1 @[FFTEngine.scala 220:78]
    _addrT_WIRE_1[5] <= addrT_temp_5_1 @[FFTEngine.scala 220:78]
    _addrT_WIRE_1[6] <= addrT_temp_6_1 @[FFTEngine.scala 220:78]
    node addrT_lo_hi_1 = cat(_addrT_WIRE_1[2], _addrT_WIRE_1[1]) @[FFTEngine.scala 220:125]
    node addrT_lo_1 = cat(addrT_lo_hi_1, _addrT_WIRE_1[0]) @[FFTEngine.scala 220:125]
    node addrT_hi_lo_1 = cat(_addrT_WIRE_1[4], _addrT_WIRE_1[3]) @[FFTEngine.scala 220:125]
    node addrT_hi_hi_1 = cat(_addrT_WIRE_1[6], _addrT_WIRE_1[5]) @[FFTEngine.scala 220:125]
    node addrT_hi_1 = cat(addrT_hi_hi_1, addrT_hi_lo_1) @[FFTEngine.scala 220:125]
    node addrT_1 = cat(addrT_hi_1, addrT_lo_1) @[FFTEngine.scala 220:125]
    node _addrT_temp_T_28 = bits(addrTPre[2], 6, 6) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_29 = bits(addrTPre[2], 0, 0) @[FFTEngine.scala 132:55]
    node addrT_temp_0_2 = mux(UInt<1>("h1"), _addrT_temp_T_28, _addrT_temp_T_29) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_30 = bits(addrTPre[2], 5, 5) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_31 = bits(addrTPre[2], 1, 1) @[FFTEngine.scala 132:55]
    node addrT_temp_1_2 = mux(UInt<1>("h1"), _addrT_temp_T_30, _addrT_temp_T_31) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_32 = bits(addrTPre[2], 4, 4) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_33 = bits(addrTPre[2], 2, 2) @[FFTEngine.scala 132:55]
    node addrT_temp_2_2 = mux(UInt<1>("h1"), _addrT_temp_T_32, _addrT_temp_T_33) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_34 = bits(addrTPre[2], 3, 3) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_35 = bits(addrTPre[2], 3, 3) @[FFTEngine.scala 132:55]
    node addrT_temp_3_2 = mux(UInt<1>("h1"), _addrT_temp_T_34, _addrT_temp_T_35) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_36 = bits(addrTPre[2], 2, 2) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_37 = bits(addrTPre[2], 4, 4) @[FFTEngine.scala 132:55]
    node addrT_temp_4_2 = mux(UInt<1>("h1"), _addrT_temp_T_36, _addrT_temp_T_37) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_38 = bits(addrTPre[2], 1, 1) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_39 = bits(addrTPre[2], 5, 5) @[FFTEngine.scala 132:55]
    node addrT_temp_5_2 = mux(UInt<1>("h1"), _addrT_temp_T_38, _addrT_temp_T_39) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_40 = bits(addrTPre[2], 0, 0) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_41 = bits(addrTPre[2], 6, 6) @[FFTEngine.scala 132:55]
    node addrT_temp_6_2 = mux(UInt<1>("h1"), _addrT_temp_T_40, _addrT_temp_T_41) @[FFTEngine.scala 132:26]
    wire _addrT_WIRE_2 : UInt<1>[7] @[FFTEngine.scala 220:78]
    _addrT_WIRE_2[0] <= addrT_temp_0_2 @[FFTEngine.scala 220:78]
    _addrT_WIRE_2[1] <= addrT_temp_1_2 @[FFTEngine.scala 220:78]
    _addrT_WIRE_2[2] <= addrT_temp_2_2 @[FFTEngine.scala 220:78]
    _addrT_WIRE_2[3] <= addrT_temp_3_2 @[FFTEngine.scala 220:78]
    _addrT_WIRE_2[4] <= addrT_temp_4_2 @[FFTEngine.scala 220:78]
    _addrT_WIRE_2[5] <= addrT_temp_5_2 @[FFTEngine.scala 220:78]
    _addrT_WIRE_2[6] <= addrT_temp_6_2 @[FFTEngine.scala 220:78]
    node addrT_lo_hi_2 = cat(_addrT_WIRE_2[2], _addrT_WIRE_2[1]) @[FFTEngine.scala 220:125]
    node addrT_lo_2 = cat(addrT_lo_hi_2, _addrT_WIRE_2[0]) @[FFTEngine.scala 220:125]
    node addrT_hi_lo_2 = cat(_addrT_WIRE_2[4], _addrT_WIRE_2[3]) @[FFTEngine.scala 220:125]
    node addrT_hi_hi_2 = cat(_addrT_WIRE_2[6], _addrT_WIRE_2[5]) @[FFTEngine.scala 220:125]
    node addrT_hi_2 = cat(addrT_hi_hi_2, addrT_hi_lo_2) @[FFTEngine.scala 220:125]
    node addrT_2 = cat(addrT_hi_2, addrT_lo_2) @[FFTEngine.scala 220:125]
    node _addrT_temp_T_42 = bits(addrTPre[3], 6, 6) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_43 = bits(addrTPre[3], 0, 0) @[FFTEngine.scala 132:55]
    node addrT_temp_0_3 = mux(UInt<1>("h1"), _addrT_temp_T_42, _addrT_temp_T_43) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_44 = bits(addrTPre[3], 5, 5) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_45 = bits(addrTPre[3], 1, 1) @[FFTEngine.scala 132:55]
    node addrT_temp_1_3 = mux(UInt<1>("h1"), _addrT_temp_T_44, _addrT_temp_T_45) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_46 = bits(addrTPre[3], 4, 4) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_47 = bits(addrTPre[3], 2, 2) @[FFTEngine.scala 132:55]
    node addrT_temp_2_3 = mux(UInt<1>("h1"), _addrT_temp_T_46, _addrT_temp_T_47) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_48 = bits(addrTPre[3], 3, 3) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_49 = bits(addrTPre[3], 3, 3) @[FFTEngine.scala 132:55]
    node addrT_temp_3_3 = mux(UInt<1>("h1"), _addrT_temp_T_48, _addrT_temp_T_49) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_50 = bits(addrTPre[3], 2, 2) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_51 = bits(addrTPre[3], 4, 4) @[FFTEngine.scala 132:55]
    node addrT_temp_4_3 = mux(UInt<1>("h1"), _addrT_temp_T_50, _addrT_temp_T_51) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_52 = bits(addrTPre[3], 1, 1) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_53 = bits(addrTPre[3], 5, 5) @[FFTEngine.scala 132:55]
    node addrT_temp_5_3 = mux(UInt<1>("h1"), _addrT_temp_T_52, _addrT_temp_T_53) @[FFTEngine.scala 132:26]
    node _addrT_temp_T_54 = bits(addrTPre[3], 0, 0) @[FFTEngine.scala 132:34]
    node _addrT_temp_T_55 = bits(addrTPre[3], 6, 6) @[FFTEngine.scala 132:55]
    node addrT_temp_6_3 = mux(UInt<1>("h1"), _addrT_temp_T_54, _addrT_temp_T_55) @[FFTEngine.scala 132:26]
    wire _addrT_WIRE_3 : UInt<1>[7] @[FFTEngine.scala 220:78]
    _addrT_WIRE_3[0] <= addrT_temp_0_3 @[FFTEngine.scala 220:78]
    _addrT_WIRE_3[1] <= addrT_temp_1_3 @[FFTEngine.scala 220:78]
    _addrT_WIRE_3[2] <= addrT_temp_2_3 @[FFTEngine.scala 220:78]
    _addrT_WIRE_3[3] <= addrT_temp_3_3 @[FFTEngine.scala 220:78]
    _addrT_WIRE_3[4] <= addrT_temp_4_3 @[FFTEngine.scala 220:78]
    _addrT_WIRE_3[5] <= addrT_temp_5_3 @[FFTEngine.scala 220:78]
    _addrT_WIRE_3[6] <= addrT_temp_6_3 @[FFTEngine.scala 220:78]
    node addrT_lo_hi_3 = cat(_addrT_WIRE_3[2], _addrT_WIRE_3[1]) @[FFTEngine.scala 220:125]
    node addrT_lo_3 = cat(addrT_lo_hi_3, _addrT_WIRE_3[0]) @[FFTEngine.scala 220:125]
    node addrT_hi_lo_3 = cat(_addrT_WIRE_3[4], _addrT_WIRE_3[3]) @[FFTEngine.scala 220:125]
    node addrT_hi_hi_3 = cat(_addrT_WIRE_3[6], _addrT_WIRE_3[5]) @[FFTEngine.scala 220:125]
    node addrT_hi_3 = cat(addrT_hi_hi_3, addrT_hi_lo_3) @[FFTEngine.scala 220:125]
    node addrT_3 = cat(addrT_hi_3, addrT_lo_3) @[FFTEngine.scala 220:125]
    node _addrSBankSelPrePre_sum_T = dshr(addrS_0, UInt<2>("h2")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_1 = bits(_addrSBankSelPrePre_sum_T, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_2 = add(UInt<3>("h0"), _addrSBankSelPrePre_sum_T_1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_3 = tail(_addrSBankSelPrePre_sum_T_2, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_4 = dshr(addrS_0, UInt<3>("h5")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_5 = bits(_addrSBankSelPrePre_sum_T_4, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_6 = add(_addrSBankSelPrePre_sum_T_3, _addrSBankSelPrePre_sum_T_5) @[FFTEngine.scala 223:107]
    node addrSBankSelPrePre_0_0 = tail(_addrSBankSelPrePre_sum_T_6, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_7 = dshr(addrS_0, UInt<1>("h1")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_8 = bits(_addrSBankSelPrePre_sum_T_7, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_9 = add(UInt<3>("h0"), _addrSBankSelPrePre_sum_T_8) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_10 = tail(_addrSBankSelPrePre_sum_T_9, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_11 = dshr(addrS_0, UInt<3>("h4")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_12 = bits(_addrSBankSelPrePre_sum_T_11, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_13 = add(_addrSBankSelPrePre_sum_T_10, _addrSBankSelPrePre_sum_T_12) @[FFTEngine.scala 223:107]
    node addrSBankSelPrePre_0_1 = tail(_addrSBankSelPrePre_sum_T_13, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_14 = dshr(addrS_0, UInt<1>("h0")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_15 = bits(_addrSBankSelPrePre_sum_T_14, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_16 = add(UInt<3>("h0"), _addrSBankSelPrePre_sum_T_15) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_17 = tail(_addrSBankSelPrePre_sum_T_16, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_18 = dshr(addrS_0, UInt<2>("h3")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_19 = bits(_addrSBankSelPrePre_sum_T_18, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_20 = add(_addrSBankSelPrePre_sum_T_17, _addrSBankSelPrePre_sum_T_19) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_21 = tail(_addrSBankSelPrePre_sum_T_20, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_22 = dshr(addrS_0, UInt<3>("h6")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_23 = bits(_addrSBankSelPrePre_sum_T_22, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_24 = add(_addrSBankSelPrePre_sum_T_21, _addrSBankSelPrePre_sum_T_23) @[FFTEngine.scala 223:107]
    node addrSBankSelPrePre_0_2 = tail(_addrSBankSelPrePre_sum_T_24, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_25 = dshr(addrS_1, UInt<2>("h2")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_26 = bits(_addrSBankSelPrePre_sum_T_25, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_27 = add(UInt<3>("h0"), _addrSBankSelPrePre_sum_T_26) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_28 = tail(_addrSBankSelPrePre_sum_T_27, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_29 = dshr(addrS_1, UInt<3>("h5")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_30 = bits(_addrSBankSelPrePre_sum_T_29, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_31 = add(_addrSBankSelPrePre_sum_T_28, _addrSBankSelPrePre_sum_T_30) @[FFTEngine.scala 223:107]
    node addrSBankSelPrePre_1_0 = tail(_addrSBankSelPrePre_sum_T_31, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_32 = dshr(addrS_1, UInt<1>("h1")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_33 = bits(_addrSBankSelPrePre_sum_T_32, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_34 = add(UInt<3>("h0"), _addrSBankSelPrePre_sum_T_33) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_35 = tail(_addrSBankSelPrePre_sum_T_34, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_36 = dshr(addrS_1, UInt<3>("h4")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_37 = bits(_addrSBankSelPrePre_sum_T_36, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_38 = add(_addrSBankSelPrePre_sum_T_35, _addrSBankSelPrePre_sum_T_37) @[FFTEngine.scala 223:107]
    node addrSBankSelPrePre_1_1 = tail(_addrSBankSelPrePre_sum_T_38, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_39 = dshr(addrS_1, UInt<1>("h0")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_40 = bits(_addrSBankSelPrePre_sum_T_39, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_41 = add(UInt<3>("h0"), _addrSBankSelPrePre_sum_T_40) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_42 = tail(_addrSBankSelPrePre_sum_T_41, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_43 = dshr(addrS_1, UInt<2>("h3")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_44 = bits(_addrSBankSelPrePre_sum_T_43, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_45 = add(_addrSBankSelPrePre_sum_T_42, _addrSBankSelPrePre_sum_T_44) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_46 = tail(_addrSBankSelPrePre_sum_T_45, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_47 = dshr(addrS_1, UInt<3>("h6")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_48 = bits(_addrSBankSelPrePre_sum_T_47, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_49 = add(_addrSBankSelPrePre_sum_T_46, _addrSBankSelPrePre_sum_T_48) @[FFTEngine.scala 223:107]
    node addrSBankSelPrePre_1_2 = tail(_addrSBankSelPrePre_sum_T_49, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_50 = dshr(addrS_2, UInt<2>("h2")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_51 = bits(_addrSBankSelPrePre_sum_T_50, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_52 = add(UInt<3>("h0"), _addrSBankSelPrePre_sum_T_51) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_53 = tail(_addrSBankSelPrePre_sum_T_52, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_54 = dshr(addrS_2, UInt<3>("h5")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_55 = bits(_addrSBankSelPrePre_sum_T_54, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_56 = add(_addrSBankSelPrePre_sum_T_53, _addrSBankSelPrePre_sum_T_55) @[FFTEngine.scala 223:107]
    node addrSBankSelPrePre_2_0 = tail(_addrSBankSelPrePre_sum_T_56, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_57 = dshr(addrS_2, UInt<1>("h1")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_58 = bits(_addrSBankSelPrePre_sum_T_57, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_59 = add(UInt<3>("h0"), _addrSBankSelPrePre_sum_T_58) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_60 = tail(_addrSBankSelPrePre_sum_T_59, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_61 = dshr(addrS_2, UInt<3>("h4")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_62 = bits(_addrSBankSelPrePre_sum_T_61, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_63 = add(_addrSBankSelPrePre_sum_T_60, _addrSBankSelPrePre_sum_T_62) @[FFTEngine.scala 223:107]
    node addrSBankSelPrePre_2_1 = tail(_addrSBankSelPrePre_sum_T_63, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_64 = dshr(addrS_2, UInt<1>("h0")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_65 = bits(_addrSBankSelPrePre_sum_T_64, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_66 = add(UInt<3>("h0"), _addrSBankSelPrePre_sum_T_65) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_67 = tail(_addrSBankSelPrePre_sum_T_66, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_68 = dshr(addrS_2, UInt<2>("h3")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_69 = bits(_addrSBankSelPrePre_sum_T_68, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_70 = add(_addrSBankSelPrePre_sum_T_67, _addrSBankSelPrePre_sum_T_69) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_71 = tail(_addrSBankSelPrePre_sum_T_70, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_72 = dshr(addrS_2, UInt<3>("h6")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_73 = bits(_addrSBankSelPrePre_sum_T_72, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_74 = add(_addrSBankSelPrePre_sum_T_71, _addrSBankSelPrePre_sum_T_73) @[FFTEngine.scala 223:107]
    node addrSBankSelPrePre_2_2 = tail(_addrSBankSelPrePre_sum_T_74, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_75 = dshr(addrS_3, UInt<2>("h2")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_76 = bits(_addrSBankSelPrePre_sum_T_75, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_77 = add(UInt<3>("h0"), _addrSBankSelPrePre_sum_T_76) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_78 = tail(_addrSBankSelPrePre_sum_T_77, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_79 = dshr(addrS_3, UInt<3>("h5")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_80 = bits(_addrSBankSelPrePre_sum_T_79, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_81 = add(_addrSBankSelPrePre_sum_T_78, _addrSBankSelPrePre_sum_T_80) @[FFTEngine.scala 223:107]
    node addrSBankSelPrePre_3_0 = tail(_addrSBankSelPrePre_sum_T_81, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_82 = dshr(addrS_3, UInt<1>("h1")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_83 = bits(_addrSBankSelPrePre_sum_T_82, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_84 = add(UInt<3>("h0"), _addrSBankSelPrePre_sum_T_83) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_85 = tail(_addrSBankSelPrePre_sum_T_84, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_86 = dshr(addrS_3, UInt<3>("h4")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_87 = bits(_addrSBankSelPrePre_sum_T_86, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_88 = add(_addrSBankSelPrePre_sum_T_85, _addrSBankSelPrePre_sum_T_87) @[FFTEngine.scala 223:107]
    node addrSBankSelPrePre_3_1 = tail(_addrSBankSelPrePre_sum_T_88, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_89 = dshr(addrS_3, UInt<1>("h0")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_90 = bits(_addrSBankSelPrePre_sum_T_89, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_91 = add(UInt<3>("h0"), _addrSBankSelPrePre_sum_T_90) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_92 = tail(_addrSBankSelPrePre_sum_T_91, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_93 = dshr(addrS_3, UInt<2>("h3")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_94 = bits(_addrSBankSelPrePre_sum_T_93, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_95 = add(_addrSBankSelPrePre_sum_T_92, _addrSBankSelPrePre_sum_T_94) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_96 = tail(_addrSBankSelPrePre_sum_T_95, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPrePre_sum_T_97 = dshr(addrS_3, UInt<3>("h6")) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_98 = bits(_addrSBankSelPrePre_sum_T_97, 0, 0) @[FFTEngine.scala 223:115]
    node _addrSBankSelPrePre_sum_T_99 = add(_addrSBankSelPrePre_sum_T_96, _addrSBankSelPrePre_sum_T_98) @[FFTEngine.scala 223:107]
    node addrSBankSelPrePre_3_2 = tail(_addrSBankSelPrePre_sum_T_99, 1) @[FFTEngine.scala 223:107]
    node _addrSBankSelPre_T = shl(UInt<1>("h0"), 1) @[FFTEngine.scala 229:126]
    node _addrSBankSelPre_T_1 = add(_addrSBankSelPre_T, addrSBankSelPrePre_0_0) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_2 = tail(_addrSBankSelPre_T_1, 1) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_3 = shl(_addrSBankSelPre_T_2, 1) @[FFTEngine.scala 229:126]
    node _addrSBankSelPre_T_4 = add(_addrSBankSelPre_T_3, addrSBankSelPrePre_0_1) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_5 = tail(_addrSBankSelPre_T_4, 1) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_6 = shl(_addrSBankSelPre_T_5, 1) @[FFTEngine.scala 229:126]
    node _addrSBankSelPre_T_7 = add(_addrSBankSelPre_T_6, addrSBankSelPrePre_0_2) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_8 = tail(_addrSBankSelPre_T_7, 1) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_9 = shl(UInt<1>("h0"), 1) @[FFTEngine.scala 229:126]
    node _addrSBankSelPre_T_10 = add(_addrSBankSelPre_T_9, addrSBankSelPrePre_1_0) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_11 = tail(_addrSBankSelPre_T_10, 1) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_12 = shl(_addrSBankSelPre_T_11, 1) @[FFTEngine.scala 229:126]
    node _addrSBankSelPre_T_13 = add(_addrSBankSelPre_T_12, addrSBankSelPrePre_1_1) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_14 = tail(_addrSBankSelPre_T_13, 1) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_15 = shl(_addrSBankSelPre_T_14, 1) @[FFTEngine.scala 229:126]
    node _addrSBankSelPre_T_16 = add(_addrSBankSelPre_T_15, addrSBankSelPrePre_1_2) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_17 = tail(_addrSBankSelPre_T_16, 1) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_18 = shl(UInt<1>("h0"), 1) @[FFTEngine.scala 229:126]
    node _addrSBankSelPre_T_19 = add(_addrSBankSelPre_T_18, addrSBankSelPrePre_2_0) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_20 = tail(_addrSBankSelPre_T_19, 1) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_21 = shl(_addrSBankSelPre_T_20, 1) @[FFTEngine.scala 229:126]
    node _addrSBankSelPre_T_22 = add(_addrSBankSelPre_T_21, addrSBankSelPrePre_2_1) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_23 = tail(_addrSBankSelPre_T_22, 1) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_24 = shl(_addrSBankSelPre_T_23, 1) @[FFTEngine.scala 229:126]
    node _addrSBankSelPre_T_25 = add(_addrSBankSelPre_T_24, addrSBankSelPrePre_2_2) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_26 = tail(_addrSBankSelPre_T_25, 1) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_27 = shl(UInt<1>("h0"), 1) @[FFTEngine.scala 229:126]
    node _addrSBankSelPre_T_28 = add(_addrSBankSelPre_T_27, addrSBankSelPrePre_3_0) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_29 = tail(_addrSBankSelPre_T_28, 1) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_30 = shl(_addrSBankSelPre_T_29, 1) @[FFTEngine.scala 229:126]
    node _addrSBankSelPre_T_31 = add(_addrSBankSelPre_T_30, addrSBankSelPrePre_3_1) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_32 = tail(_addrSBankSelPre_T_31, 1) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_33 = shl(_addrSBankSelPre_T_32, 1) @[FFTEngine.scala 229:126]
    node _addrSBankSelPre_T_34 = add(_addrSBankSelPre_T_33, addrSBankSelPrePre_3_2) @[FFTEngine.scala 229:132]
    node _addrSBankSelPre_T_35 = tail(_addrSBankSelPre_T_34, 1) @[FFTEngine.scala 229:132]
    node addrSBankSelPre_0 = bits(_addrSBankSelPre_T_8, 2, 0) @[FFTEngine.scala 229:148]
    node addrSBankSelPre_1 = bits(_addrSBankSelPre_T_17, 2, 0) @[FFTEngine.scala 229:148]
    node addrSBankSelPre_2 = bits(_addrSBankSelPre_T_26, 2, 0) @[FFTEngine.scala 229:148]
    node addrSBankSelPre_3 = bits(_addrSBankSelPre_T_35, 2, 0) @[FFTEngine.scala 229:148]
    wire addrSBankSel : UInt[4] @[FFTEngine.scala 231:28]
    node _addrSBankSel_0_T = mux(kernelState, addrSBankSelPre_0, UInt<1>("h0")) @[FFTEngine.scala 233:27]
    addrSBankSel[0] <= _addrSBankSel_0_T @[FFTEngine.scala 233:21]
    when kernelState : @[FFTEngine.scala 236:27]
      addrSBankSel[1] <= addrSBankSelPre_1 @[FFTEngine.scala 237:29]
    else :
      node _addrSBankSel_1_T = shl(UInt<1>("h1"), 1) @[FFTEngine.scala 239:59]
      node _addrSBankSel_1_T_1 = add(addrSBankSelPre_0, _addrSBankSel_1_T) @[FFTEngine.scala 239:52]
      node _addrSBankSel_1_T_2 = tail(_addrSBankSel_1_T_1, 1) @[FFTEngine.scala 239:52]
      node _addrSBankSel_1_T_3 = bits(_addrSBankSel_1_T_2, 2, 0) @[FFTEngine.scala 239:65]
      addrSBankSel[1] <= _addrSBankSel_1_T_3 @[FFTEngine.scala 239:29]
    when kernelState : @[FFTEngine.scala 236:27]
      addrSBankSel[2] <= addrSBankSelPre_2 @[FFTEngine.scala 237:29]
    else :
      node _addrSBankSel_2_T = shl(UInt<2>("h2"), 1) @[FFTEngine.scala 239:59]
      node _addrSBankSel_2_T_1 = add(addrSBankSelPre_0, _addrSBankSel_2_T) @[FFTEngine.scala 239:52]
      node _addrSBankSel_2_T_2 = tail(_addrSBankSel_2_T_1, 1) @[FFTEngine.scala 239:52]
      node _addrSBankSel_2_T_3 = bits(_addrSBankSel_2_T_2, 2, 0) @[FFTEngine.scala 239:65]
      addrSBankSel[2] <= _addrSBankSel_2_T_3 @[FFTEngine.scala 239:29]
    when kernelState : @[FFTEngine.scala 236:27]
      addrSBankSel[3] <= addrSBankSelPre_3 @[FFTEngine.scala 237:29]
    else :
      node _addrSBankSel_3_T = shl(UInt<2>("h3"), 1) @[FFTEngine.scala 239:59]
      node _addrSBankSel_3_T_1 = add(addrSBankSelPre_0, _addrSBankSel_3_T) @[FFTEngine.scala 239:52]
      node _addrSBankSel_3_T_2 = tail(_addrSBankSel_3_T_1, 1) @[FFTEngine.scala 239:52]
      node _addrSBankSel_3_T_3 = bits(_addrSBankSel_3_T_2, 2, 0) @[FFTEngine.scala 239:65]
      addrSBankSel[3] <= _addrSBankSel_3_T_3 @[FFTEngine.scala 239:29]
    node _addrTBankSelPrePre_sum_T = dshr(addrT_0, UInt<2>("h2")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_1 = bits(_addrTBankSelPrePre_sum_T, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_2 = add(UInt<3>("h0"), _addrTBankSelPrePre_sum_T_1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_3 = tail(_addrTBankSelPrePre_sum_T_2, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_4 = dshr(addrT_0, UInt<3>("h5")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_5 = bits(_addrTBankSelPrePre_sum_T_4, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_6 = add(_addrTBankSelPrePre_sum_T_3, _addrTBankSelPrePre_sum_T_5) @[FFTEngine.scala 223:107]
    node addrTBankSelPrePre_0_0 = tail(_addrTBankSelPrePre_sum_T_6, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_7 = dshr(addrT_0, UInt<1>("h1")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_8 = bits(_addrTBankSelPrePre_sum_T_7, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_9 = add(UInt<3>("h0"), _addrTBankSelPrePre_sum_T_8) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_10 = tail(_addrTBankSelPrePre_sum_T_9, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_11 = dshr(addrT_0, UInt<3>("h4")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_12 = bits(_addrTBankSelPrePre_sum_T_11, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_13 = add(_addrTBankSelPrePre_sum_T_10, _addrTBankSelPrePre_sum_T_12) @[FFTEngine.scala 223:107]
    node addrTBankSelPrePre_0_1 = tail(_addrTBankSelPrePre_sum_T_13, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_14 = dshr(addrT_0, UInt<1>("h0")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_15 = bits(_addrTBankSelPrePre_sum_T_14, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_16 = add(UInt<3>("h0"), _addrTBankSelPrePre_sum_T_15) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_17 = tail(_addrTBankSelPrePre_sum_T_16, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_18 = dshr(addrT_0, UInt<2>("h3")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_19 = bits(_addrTBankSelPrePre_sum_T_18, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_20 = add(_addrTBankSelPrePre_sum_T_17, _addrTBankSelPrePre_sum_T_19) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_21 = tail(_addrTBankSelPrePre_sum_T_20, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_22 = dshr(addrT_0, UInt<3>("h6")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_23 = bits(_addrTBankSelPrePre_sum_T_22, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_24 = add(_addrTBankSelPrePre_sum_T_21, _addrTBankSelPrePre_sum_T_23) @[FFTEngine.scala 223:107]
    node addrTBankSelPrePre_0_2 = tail(_addrTBankSelPrePre_sum_T_24, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_25 = dshr(addrT_1, UInt<2>("h2")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_26 = bits(_addrTBankSelPrePre_sum_T_25, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_27 = add(UInt<3>("h0"), _addrTBankSelPrePre_sum_T_26) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_28 = tail(_addrTBankSelPrePre_sum_T_27, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_29 = dshr(addrT_1, UInt<3>("h5")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_30 = bits(_addrTBankSelPrePre_sum_T_29, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_31 = add(_addrTBankSelPrePre_sum_T_28, _addrTBankSelPrePre_sum_T_30) @[FFTEngine.scala 223:107]
    node addrTBankSelPrePre_1_0 = tail(_addrTBankSelPrePre_sum_T_31, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_32 = dshr(addrT_1, UInt<1>("h1")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_33 = bits(_addrTBankSelPrePre_sum_T_32, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_34 = add(UInt<3>("h0"), _addrTBankSelPrePre_sum_T_33) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_35 = tail(_addrTBankSelPrePre_sum_T_34, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_36 = dshr(addrT_1, UInt<3>("h4")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_37 = bits(_addrTBankSelPrePre_sum_T_36, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_38 = add(_addrTBankSelPrePre_sum_T_35, _addrTBankSelPrePre_sum_T_37) @[FFTEngine.scala 223:107]
    node addrTBankSelPrePre_1_1 = tail(_addrTBankSelPrePre_sum_T_38, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_39 = dshr(addrT_1, UInt<1>("h0")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_40 = bits(_addrTBankSelPrePre_sum_T_39, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_41 = add(UInt<3>("h0"), _addrTBankSelPrePre_sum_T_40) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_42 = tail(_addrTBankSelPrePre_sum_T_41, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_43 = dshr(addrT_1, UInt<2>("h3")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_44 = bits(_addrTBankSelPrePre_sum_T_43, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_45 = add(_addrTBankSelPrePre_sum_T_42, _addrTBankSelPrePre_sum_T_44) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_46 = tail(_addrTBankSelPrePre_sum_T_45, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_47 = dshr(addrT_1, UInt<3>("h6")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_48 = bits(_addrTBankSelPrePre_sum_T_47, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_49 = add(_addrTBankSelPrePre_sum_T_46, _addrTBankSelPrePre_sum_T_48) @[FFTEngine.scala 223:107]
    node addrTBankSelPrePre_1_2 = tail(_addrTBankSelPrePre_sum_T_49, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_50 = dshr(addrT_2, UInt<2>("h2")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_51 = bits(_addrTBankSelPrePre_sum_T_50, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_52 = add(UInt<3>("h0"), _addrTBankSelPrePre_sum_T_51) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_53 = tail(_addrTBankSelPrePre_sum_T_52, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_54 = dshr(addrT_2, UInt<3>("h5")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_55 = bits(_addrTBankSelPrePre_sum_T_54, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_56 = add(_addrTBankSelPrePre_sum_T_53, _addrTBankSelPrePre_sum_T_55) @[FFTEngine.scala 223:107]
    node addrTBankSelPrePre_2_0 = tail(_addrTBankSelPrePre_sum_T_56, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_57 = dshr(addrT_2, UInt<1>("h1")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_58 = bits(_addrTBankSelPrePre_sum_T_57, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_59 = add(UInt<3>("h0"), _addrTBankSelPrePre_sum_T_58) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_60 = tail(_addrTBankSelPrePre_sum_T_59, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_61 = dshr(addrT_2, UInt<3>("h4")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_62 = bits(_addrTBankSelPrePre_sum_T_61, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_63 = add(_addrTBankSelPrePre_sum_T_60, _addrTBankSelPrePre_sum_T_62) @[FFTEngine.scala 223:107]
    node addrTBankSelPrePre_2_1 = tail(_addrTBankSelPrePre_sum_T_63, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_64 = dshr(addrT_2, UInt<1>("h0")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_65 = bits(_addrTBankSelPrePre_sum_T_64, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_66 = add(UInt<3>("h0"), _addrTBankSelPrePre_sum_T_65) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_67 = tail(_addrTBankSelPrePre_sum_T_66, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_68 = dshr(addrT_2, UInt<2>("h3")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_69 = bits(_addrTBankSelPrePre_sum_T_68, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_70 = add(_addrTBankSelPrePre_sum_T_67, _addrTBankSelPrePre_sum_T_69) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_71 = tail(_addrTBankSelPrePre_sum_T_70, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_72 = dshr(addrT_2, UInt<3>("h6")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_73 = bits(_addrTBankSelPrePre_sum_T_72, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_74 = add(_addrTBankSelPrePre_sum_T_71, _addrTBankSelPrePre_sum_T_73) @[FFTEngine.scala 223:107]
    node addrTBankSelPrePre_2_2 = tail(_addrTBankSelPrePre_sum_T_74, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_75 = dshr(addrT_3, UInt<2>("h2")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_76 = bits(_addrTBankSelPrePre_sum_T_75, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_77 = add(UInt<3>("h0"), _addrTBankSelPrePre_sum_T_76) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_78 = tail(_addrTBankSelPrePre_sum_T_77, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_79 = dshr(addrT_3, UInt<3>("h5")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_80 = bits(_addrTBankSelPrePre_sum_T_79, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_81 = add(_addrTBankSelPrePre_sum_T_78, _addrTBankSelPrePre_sum_T_80) @[FFTEngine.scala 223:107]
    node addrTBankSelPrePre_3_0 = tail(_addrTBankSelPrePre_sum_T_81, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_82 = dshr(addrT_3, UInt<1>("h1")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_83 = bits(_addrTBankSelPrePre_sum_T_82, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_84 = add(UInt<3>("h0"), _addrTBankSelPrePre_sum_T_83) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_85 = tail(_addrTBankSelPrePre_sum_T_84, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_86 = dshr(addrT_3, UInt<3>("h4")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_87 = bits(_addrTBankSelPrePre_sum_T_86, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_88 = add(_addrTBankSelPrePre_sum_T_85, _addrTBankSelPrePre_sum_T_87) @[FFTEngine.scala 223:107]
    node addrTBankSelPrePre_3_1 = tail(_addrTBankSelPrePre_sum_T_88, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_89 = dshr(addrT_3, UInt<1>("h0")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_90 = bits(_addrTBankSelPrePre_sum_T_89, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_91 = add(UInt<3>("h0"), _addrTBankSelPrePre_sum_T_90) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_92 = tail(_addrTBankSelPrePre_sum_T_91, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_93 = dshr(addrT_3, UInt<2>("h3")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_94 = bits(_addrTBankSelPrePre_sum_T_93, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_95 = add(_addrTBankSelPrePre_sum_T_92, _addrTBankSelPrePre_sum_T_94) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_96 = tail(_addrTBankSelPrePre_sum_T_95, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPrePre_sum_T_97 = dshr(addrT_3, UInt<3>("h6")) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_98 = bits(_addrTBankSelPrePre_sum_T_97, 0, 0) @[FFTEngine.scala 223:115]
    node _addrTBankSelPrePre_sum_T_99 = add(_addrTBankSelPrePre_sum_T_96, _addrTBankSelPrePre_sum_T_98) @[FFTEngine.scala 223:107]
    node addrTBankSelPrePre_3_2 = tail(_addrTBankSelPrePre_sum_T_99, 1) @[FFTEngine.scala 223:107]
    node _addrTBankSelPre_T = shl(UInt<1>("h0"), 1) @[FFTEngine.scala 245:126]
    node _addrTBankSelPre_T_1 = add(_addrTBankSelPre_T, addrTBankSelPrePre_0_0) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_2 = tail(_addrTBankSelPre_T_1, 1) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_3 = shl(_addrTBankSelPre_T_2, 1) @[FFTEngine.scala 245:126]
    node _addrTBankSelPre_T_4 = add(_addrTBankSelPre_T_3, addrTBankSelPrePre_0_1) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_5 = tail(_addrTBankSelPre_T_4, 1) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_6 = shl(_addrTBankSelPre_T_5, 1) @[FFTEngine.scala 245:126]
    node _addrTBankSelPre_T_7 = add(_addrTBankSelPre_T_6, addrTBankSelPrePre_0_2) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_8 = tail(_addrTBankSelPre_T_7, 1) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_9 = shl(UInt<1>("h0"), 1) @[FFTEngine.scala 245:126]
    node _addrTBankSelPre_T_10 = add(_addrTBankSelPre_T_9, addrTBankSelPrePre_1_0) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_11 = tail(_addrTBankSelPre_T_10, 1) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_12 = shl(_addrTBankSelPre_T_11, 1) @[FFTEngine.scala 245:126]
    node _addrTBankSelPre_T_13 = add(_addrTBankSelPre_T_12, addrTBankSelPrePre_1_1) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_14 = tail(_addrTBankSelPre_T_13, 1) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_15 = shl(_addrTBankSelPre_T_14, 1) @[FFTEngine.scala 245:126]
    node _addrTBankSelPre_T_16 = add(_addrTBankSelPre_T_15, addrTBankSelPrePre_1_2) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_17 = tail(_addrTBankSelPre_T_16, 1) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_18 = shl(UInt<1>("h0"), 1) @[FFTEngine.scala 245:126]
    node _addrTBankSelPre_T_19 = add(_addrTBankSelPre_T_18, addrTBankSelPrePre_2_0) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_20 = tail(_addrTBankSelPre_T_19, 1) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_21 = shl(_addrTBankSelPre_T_20, 1) @[FFTEngine.scala 245:126]
    node _addrTBankSelPre_T_22 = add(_addrTBankSelPre_T_21, addrTBankSelPrePre_2_1) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_23 = tail(_addrTBankSelPre_T_22, 1) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_24 = shl(_addrTBankSelPre_T_23, 1) @[FFTEngine.scala 245:126]
    node _addrTBankSelPre_T_25 = add(_addrTBankSelPre_T_24, addrTBankSelPrePre_2_2) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_26 = tail(_addrTBankSelPre_T_25, 1) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_27 = shl(UInt<1>("h0"), 1) @[FFTEngine.scala 245:126]
    node _addrTBankSelPre_T_28 = add(_addrTBankSelPre_T_27, addrTBankSelPrePre_3_0) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_29 = tail(_addrTBankSelPre_T_28, 1) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_30 = shl(_addrTBankSelPre_T_29, 1) @[FFTEngine.scala 245:126]
    node _addrTBankSelPre_T_31 = add(_addrTBankSelPre_T_30, addrTBankSelPrePre_3_1) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_32 = tail(_addrTBankSelPre_T_31, 1) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_33 = shl(_addrTBankSelPre_T_32, 1) @[FFTEngine.scala 245:126]
    node _addrTBankSelPre_T_34 = add(_addrTBankSelPre_T_33, addrTBankSelPrePre_3_2) @[FFTEngine.scala 245:132]
    node _addrTBankSelPre_T_35 = tail(_addrTBankSelPre_T_34, 1) @[FFTEngine.scala 245:132]
    node addrTBankSelPre_0 = bits(_addrTBankSelPre_T_8, 2, 0) @[FFTEngine.scala 245:148]
    node addrTBankSelPre_1 = bits(_addrTBankSelPre_T_17, 2, 0) @[FFTEngine.scala 245:148]
    node addrTBankSelPre_2 = bits(_addrTBankSelPre_T_26, 2, 0) @[FFTEngine.scala 245:148]
    node addrTBankSelPre_3 = bits(_addrTBankSelPre_T_35, 2, 0) @[FFTEngine.scala 245:148]
    wire addrTBankSel : UInt[4] @[FFTEngine.scala 247:28]
    node _addrTBankSel_0_T = mux(kernelState, addrTBankSelPre_0, UInt<1>("h1")) @[FFTEngine.scala 249:27]
    addrTBankSel[0] <= _addrTBankSel_0_T @[FFTEngine.scala 249:21]
    when kernelState : @[FFTEngine.scala 252:27]
      addrTBankSel[1] <= addrTBankSelPre_1 @[FFTEngine.scala 253:29]
    else :
      node _addrTBankSel_1_T = shl(UInt<1>("h1"), 1) @[FFTEngine.scala 255:59]
      node _addrTBankSel_1_T_1 = add(addrTBankSelPre_0, _addrTBankSel_1_T) @[FFTEngine.scala 255:52]
      node _addrTBankSel_1_T_2 = tail(_addrTBankSel_1_T_1, 1) @[FFTEngine.scala 255:52]
      node _addrTBankSel_1_T_3 = bits(_addrTBankSel_1_T_2, 2, 0) @[FFTEngine.scala 255:65]
      addrTBankSel[1] <= _addrTBankSel_1_T_3 @[FFTEngine.scala 255:29]
    when kernelState : @[FFTEngine.scala 252:27]
      addrTBankSel[2] <= addrTBankSelPre_2 @[FFTEngine.scala 253:29]
    else :
      node _addrTBankSel_2_T = shl(UInt<2>("h2"), 1) @[FFTEngine.scala 255:59]
      node _addrTBankSel_2_T_1 = add(addrTBankSelPre_0, _addrTBankSel_2_T) @[FFTEngine.scala 255:52]
      node _addrTBankSel_2_T_2 = tail(_addrTBankSel_2_T_1, 1) @[FFTEngine.scala 255:52]
      node _addrTBankSel_2_T_3 = bits(_addrTBankSel_2_T_2, 2, 0) @[FFTEngine.scala 255:65]
      addrTBankSel[2] <= _addrTBankSel_2_T_3 @[FFTEngine.scala 255:29]
    when kernelState : @[FFTEngine.scala 252:27]
      addrTBankSel[3] <= addrTBankSelPre_3 @[FFTEngine.scala 253:29]
    else :
      node _addrTBankSel_3_T = shl(UInt<2>("h3"), 1) @[FFTEngine.scala 255:59]
      node _addrTBankSel_3_T_1 = add(addrTBankSelPre_0, _addrTBankSel_3_T) @[FFTEngine.scala 255:52]
      node _addrTBankSel_3_T_2 = tail(_addrTBankSel_3_T_1, 1) @[FFTEngine.scala 255:52]
      node _addrTBankSel_3_T_3 = bits(_addrTBankSel_3_T_2, 2, 0) @[FFTEngine.scala 255:65]
      addrTBankSel[3] <= _addrTBankSel_3_T_3 @[FFTEngine.scala 255:29]
    node _T_12 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 259:88]
    node _T_13 = and(kernelState, _T_12) @[FFTEngine.scala 259:86]
    node _T_14 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 259:88]
    node _T_15 = and(kernelState, _T_14) @[FFTEngine.scala 259:86]
    node _T_16 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 259:88]
    node _T_17 = and(kernelState, _T_16) @[FFTEngine.scala 259:86]
    node _T_18 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 259:88]
    node _T_19 = and(kernelState, _T_18) @[FFTEngine.scala 259:86]
    node _T_20 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 259:88]
    node _T_21 = and(kernelState, _T_20) @[FFTEngine.scala 259:86]
    node _T_22 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 259:88]
    node _T_23 = and(kernelState, _T_22) @[FFTEngine.scala 259:86]
    node _T_24 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 259:88]
    node _T_25 = and(kernelState, _T_24) @[FFTEngine.scala 259:86]
    node _T_26 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 259:88]
    node _T_27 = and(kernelState, _T_26) @[FFTEngine.scala 259:86]
    wire _WIRE : UInt<1>[8] @[FFTEngine.scala 259:38]
    _WIRE[0] <= _T_13 @[FFTEngine.scala 259:38]
    _WIRE[1] <= _T_15 @[FFTEngine.scala 259:38]
    _WIRE[2] <= _T_17 @[FFTEngine.scala 259:38]
    _WIRE[3] <= _T_19 @[FFTEngine.scala 259:38]
    _WIRE[4] <= _T_21 @[FFTEngine.scala 259:38]
    _WIRE[5] <= _T_23 @[FFTEngine.scala 259:38]
    _WIRE[6] <= _T_25 @[FFTEngine.scala 259:38]
    _WIRE[7] <= _T_27 @[FFTEngine.scala 259:38]
    io.readEnableSram0Bank <= _WIRE @[FFTEngine.scala 259:28]
    node _T_28 = and(kernelState, srcBuffer) @[FFTEngine.scala 260:86]
    node _T_29 = and(kernelState, srcBuffer) @[FFTEngine.scala 260:86]
    node _T_30 = and(kernelState, srcBuffer) @[FFTEngine.scala 260:86]
    node _T_31 = and(kernelState, srcBuffer) @[FFTEngine.scala 260:86]
    node _T_32 = and(kernelState, srcBuffer) @[FFTEngine.scala 260:86]
    node _T_33 = and(kernelState, srcBuffer) @[FFTEngine.scala 260:86]
    node _T_34 = and(kernelState, srcBuffer) @[FFTEngine.scala 260:86]
    node _T_35 = and(kernelState, srcBuffer) @[FFTEngine.scala 260:86]
    wire _WIRE_1 : UInt<1>[8] @[FFTEngine.scala 260:38]
    _WIRE_1[0] <= _T_28 @[FFTEngine.scala 260:38]
    _WIRE_1[1] <= _T_29 @[FFTEngine.scala 260:38]
    _WIRE_1[2] <= _T_30 @[FFTEngine.scala 260:38]
    _WIRE_1[3] <= _T_31 @[FFTEngine.scala 260:38]
    _WIRE_1[4] <= _T_32 @[FFTEngine.scala 260:38]
    _WIRE_1[5] <= _T_33 @[FFTEngine.scala 260:38]
    _WIRE_1[6] <= _T_34 @[FFTEngine.scala 260:38]
    _WIRE_1[7] <= _T_35 @[FFTEngine.scala 260:38]
    io.readEnableSram1Bank <= _WIRE_1 @[FFTEngine.scala 260:28]
    wire addrSBankSel1c : UInt[4] @[FFTEngine.scala 262:30]
    wire addrSBankSel2c : UInt[4] @[FFTEngine.scala 263:30]
    wire addrSBankSel3c : UInt[4] @[FFTEngine.scala 264:30]
    reg addrSBankSel1c_0_r : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSel1c_0_r <= addrSBankSel[0] @[Reg.scala 36:22]
    addrSBankSel1c[0] <= addrSBankSel1c_0_r @[FFTEngine.scala 267:27]
    reg addrSBankSel2c_0_r : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSel2c_0_r <= addrSBankSel1c[0] @[Reg.scala 36:22]
    addrSBankSel2c[0] <= addrSBankSel2c_0_r @[FFTEngine.scala 268:27]
    reg addrSBankSel3c_0_r : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSel3c_0_r <= addrSBankSel2c[0] @[Reg.scala 36:22]
    addrSBankSel3c[0] <= addrSBankSel3c_0_r @[FFTEngine.scala 269:27]
    reg addrSBankSel1c_1_r : UInt, clock with :
      reset => (reset, UInt<2>("h2")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSel1c_1_r <= addrSBankSel[1] @[Reg.scala 36:22]
    addrSBankSel1c[1] <= addrSBankSel1c_1_r @[FFTEngine.scala 267:27]
    reg addrSBankSel2c_1_r : UInt, clock with :
      reset => (reset, UInt<2>("h2")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSel2c_1_r <= addrSBankSel1c[1] @[Reg.scala 36:22]
    addrSBankSel2c[1] <= addrSBankSel2c_1_r @[FFTEngine.scala 268:27]
    reg addrSBankSel3c_1_r : UInt, clock with :
      reset => (reset, UInt<2>("h2")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSel3c_1_r <= addrSBankSel2c[1] @[Reg.scala 36:22]
    addrSBankSel3c[1] <= addrSBankSel3c_1_r @[FFTEngine.scala 269:27]
    reg addrSBankSel1c_2_r : UInt, clock with :
      reset => (reset, UInt<3>("h4")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSel1c_2_r <= addrSBankSel[2] @[Reg.scala 36:22]
    addrSBankSel1c[2] <= addrSBankSel1c_2_r @[FFTEngine.scala 267:27]
    reg addrSBankSel2c_2_r : UInt, clock with :
      reset => (reset, UInt<3>("h4")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSel2c_2_r <= addrSBankSel1c[2] @[Reg.scala 36:22]
    addrSBankSel2c[2] <= addrSBankSel2c_2_r @[FFTEngine.scala 268:27]
    reg addrSBankSel3c_2_r : UInt, clock with :
      reset => (reset, UInt<3>("h4")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSel3c_2_r <= addrSBankSel2c[2] @[Reg.scala 36:22]
    addrSBankSel3c[2] <= addrSBankSel3c_2_r @[FFTEngine.scala 269:27]
    reg addrSBankSel1c_3_r : UInt, clock with :
      reset => (reset, UInt<3>("h6")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSel1c_3_r <= addrSBankSel[3] @[Reg.scala 36:22]
    addrSBankSel1c[3] <= addrSBankSel1c_3_r @[FFTEngine.scala 267:27]
    reg addrSBankSel2c_3_r : UInt, clock with :
      reset => (reset, UInt<3>("h6")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSel2c_3_r <= addrSBankSel1c[3] @[Reg.scala 36:22]
    addrSBankSel2c[3] <= addrSBankSel2c_3_r @[FFTEngine.scala 268:27]
    reg addrSBankSel3c_3_r : UInt, clock with :
      reset => (reset, UInt<3>("h6")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSel3c_3_r <= addrSBankSel2c[3] @[Reg.scala 36:22]
    addrSBankSel3c[3] <= addrSBankSel3c_3_r @[FFTEngine.scala 269:27]
    wire addrTBankSel1c : UInt[4] @[FFTEngine.scala 272:30]
    wire addrTBankSel2c : UInt[4] @[FFTEngine.scala 273:30]
    wire addrTBankSel3c : UInt[4] @[FFTEngine.scala 274:30]
    reg addrTBankSel1c_0_r : UInt, clock with :
      reset => (reset, UInt<1>("h1")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSel1c_0_r <= addrTBankSel[0] @[Reg.scala 36:22]
    addrTBankSel1c[0] <= addrTBankSel1c_0_r @[FFTEngine.scala 277:27]
    reg addrTBankSel2c_0_r : UInt, clock with :
      reset => (reset, UInt<1>("h1")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSel2c_0_r <= addrTBankSel1c[0] @[Reg.scala 36:22]
    addrTBankSel2c[0] <= addrTBankSel2c_0_r @[FFTEngine.scala 278:27]
    reg addrTBankSel3c_0_r : UInt, clock with :
      reset => (reset, UInt<1>("h1")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSel3c_0_r <= addrTBankSel2c[0] @[Reg.scala 36:22]
    addrTBankSel3c[0] <= addrTBankSel3c_0_r @[FFTEngine.scala 279:27]
    reg addrTBankSel1c_1_r : UInt, clock with :
      reset => (reset, UInt<2>("h3")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSel1c_1_r <= addrTBankSel[1] @[Reg.scala 36:22]
    addrTBankSel1c[1] <= addrTBankSel1c_1_r @[FFTEngine.scala 277:27]
    reg addrTBankSel2c_1_r : UInt, clock with :
      reset => (reset, UInt<2>("h3")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSel2c_1_r <= addrTBankSel1c[1] @[Reg.scala 36:22]
    addrTBankSel2c[1] <= addrTBankSel2c_1_r @[FFTEngine.scala 278:27]
    reg addrTBankSel3c_1_r : UInt, clock with :
      reset => (reset, UInt<2>("h3")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSel3c_1_r <= addrTBankSel2c[1] @[Reg.scala 36:22]
    addrTBankSel3c[1] <= addrTBankSel3c_1_r @[FFTEngine.scala 279:27]
    reg addrTBankSel1c_2_r : UInt, clock with :
      reset => (reset, UInt<3>("h5")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSel1c_2_r <= addrTBankSel[2] @[Reg.scala 36:22]
    addrTBankSel1c[2] <= addrTBankSel1c_2_r @[FFTEngine.scala 277:27]
    reg addrTBankSel2c_2_r : UInt, clock with :
      reset => (reset, UInt<3>("h5")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSel2c_2_r <= addrTBankSel1c[2] @[Reg.scala 36:22]
    addrTBankSel2c[2] <= addrTBankSel2c_2_r @[FFTEngine.scala 278:27]
    reg addrTBankSel3c_2_r : UInt, clock with :
      reset => (reset, UInt<3>("h5")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSel3c_2_r <= addrTBankSel2c[2] @[Reg.scala 36:22]
    addrTBankSel3c[2] <= addrTBankSel3c_2_r @[FFTEngine.scala 279:27]
    reg addrTBankSel1c_3_r : UInt, clock with :
      reset => (reset, UInt<3>("h7")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSel1c_3_r <= addrTBankSel[3] @[Reg.scala 36:22]
    addrTBankSel1c[3] <= addrTBankSel1c_3_r @[FFTEngine.scala 277:27]
    reg addrTBankSel2c_3_r : UInt, clock with :
      reset => (reset, UInt<3>("h7")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSel2c_3_r <= addrTBankSel1c[3] @[Reg.scala 36:22]
    addrTBankSel2c[3] <= addrTBankSel2c_3_r @[FFTEngine.scala 278:27]
    reg addrTBankSel3c_3_r : UInt, clock with :
      reset => (reset, UInt<3>("h7")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSel3c_3_r <= addrTBankSel2c[3] @[Reg.scala 36:22]
    addrTBankSel3c[3] <= addrTBankSel3c_3_r @[FFTEngine.scala 279:27]
    reg kernelState1c : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      kernelState1c <= kernelState @[Reg.scala 36:22]
    reg kernelState2c : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      kernelState2c <= kernelState1c @[Reg.scala 36:22]
    reg kernelState3c : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      kernelState3c <= kernelState2c @[Reg.scala 36:22]
    wire dataInRPre : UInt[8] @[FFTEngine.scala 286:26]
    wire dataInIPre : UInt[8] @[FFTEngine.scala 287:26]
    node _dataInRPre_0_T = bits(io.readDataSram1Bank[0], 15, 0) @[FFTEngine.scala 290:64]
    node _dataInRPre_0_T_1 = bits(io.readDataSram0Bank[0], 15, 0) @[FFTEngine.scala 290:110]
    node _dataInRPre_0_T_2 = mux(srcBuffer, _dataInRPre_0_T, _dataInRPre_0_T_1) @[FFTEngine.scala 290:29]
    dataInRPre[0] <= _dataInRPre_0_T_2 @[FFTEngine.scala 290:23]
    node _dataInIPre_0_T = bits(io.readDataSram1Bank[0], 31, 16) @[FFTEngine.scala 291:64]
    node _dataInIPre_0_T_1 = bits(io.readDataSram0Bank[0], 31, 16) @[FFTEngine.scala 291:135]
    node _dataInIPre_0_T_2 = mux(srcBuffer, _dataInIPre_0_T, _dataInIPre_0_T_1) @[FFTEngine.scala 291:29]
    dataInIPre[0] <= _dataInIPre_0_T_2 @[FFTEngine.scala 291:23]
    node _dataInRPre_1_T = bits(io.readDataSram1Bank[1], 15, 0) @[FFTEngine.scala 290:64]
    node _dataInRPre_1_T_1 = bits(io.readDataSram0Bank[1], 15, 0) @[FFTEngine.scala 290:110]
    node _dataInRPre_1_T_2 = mux(srcBuffer, _dataInRPre_1_T, _dataInRPre_1_T_1) @[FFTEngine.scala 290:29]
    dataInRPre[1] <= _dataInRPre_1_T_2 @[FFTEngine.scala 290:23]
    node _dataInIPre_1_T = bits(io.readDataSram1Bank[1], 31, 16) @[FFTEngine.scala 291:64]
    node _dataInIPre_1_T_1 = bits(io.readDataSram0Bank[1], 31, 16) @[FFTEngine.scala 291:135]
    node _dataInIPre_1_T_2 = mux(srcBuffer, _dataInIPre_1_T, _dataInIPre_1_T_1) @[FFTEngine.scala 291:29]
    dataInIPre[1] <= _dataInIPre_1_T_2 @[FFTEngine.scala 291:23]
    node _dataInRPre_2_T = bits(io.readDataSram1Bank[2], 15, 0) @[FFTEngine.scala 290:64]
    node _dataInRPre_2_T_1 = bits(io.readDataSram0Bank[2], 15, 0) @[FFTEngine.scala 290:110]
    node _dataInRPre_2_T_2 = mux(srcBuffer, _dataInRPre_2_T, _dataInRPre_2_T_1) @[FFTEngine.scala 290:29]
    dataInRPre[2] <= _dataInRPre_2_T_2 @[FFTEngine.scala 290:23]
    node _dataInIPre_2_T = bits(io.readDataSram1Bank[2], 31, 16) @[FFTEngine.scala 291:64]
    node _dataInIPre_2_T_1 = bits(io.readDataSram0Bank[2], 31, 16) @[FFTEngine.scala 291:135]
    node _dataInIPre_2_T_2 = mux(srcBuffer, _dataInIPre_2_T, _dataInIPre_2_T_1) @[FFTEngine.scala 291:29]
    dataInIPre[2] <= _dataInIPre_2_T_2 @[FFTEngine.scala 291:23]
    node _dataInRPre_3_T = bits(io.readDataSram1Bank[3], 15, 0) @[FFTEngine.scala 290:64]
    node _dataInRPre_3_T_1 = bits(io.readDataSram0Bank[3], 15, 0) @[FFTEngine.scala 290:110]
    node _dataInRPre_3_T_2 = mux(srcBuffer, _dataInRPre_3_T, _dataInRPre_3_T_1) @[FFTEngine.scala 290:29]
    dataInRPre[3] <= _dataInRPre_3_T_2 @[FFTEngine.scala 290:23]
    node _dataInIPre_3_T = bits(io.readDataSram1Bank[3], 31, 16) @[FFTEngine.scala 291:64]
    node _dataInIPre_3_T_1 = bits(io.readDataSram0Bank[3], 31, 16) @[FFTEngine.scala 291:135]
    node _dataInIPre_3_T_2 = mux(srcBuffer, _dataInIPre_3_T, _dataInIPre_3_T_1) @[FFTEngine.scala 291:29]
    dataInIPre[3] <= _dataInIPre_3_T_2 @[FFTEngine.scala 291:23]
    node _dataInRPre_4_T = bits(io.readDataSram1Bank[4], 15, 0) @[FFTEngine.scala 290:64]
    node _dataInRPre_4_T_1 = bits(io.readDataSram0Bank[4], 15, 0) @[FFTEngine.scala 290:110]
    node _dataInRPre_4_T_2 = mux(srcBuffer, _dataInRPre_4_T, _dataInRPre_4_T_1) @[FFTEngine.scala 290:29]
    dataInRPre[4] <= _dataInRPre_4_T_2 @[FFTEngine.scala 290:23]
    node _dataInIPre_4_T = bits(io.readDataSram1Bank[4], 31, 16) @[FFTEngine.scala 291:64]
    node _dataInIPre_4_T_1 = bits(io.readDataSram0Bank[4], 31, 16) @[FFTEngine.scala 291:135]
    node _dataInIPre_4_T_2 = mux(srcBuffer, _dataInIPre_4_T, _dataInIPre_4_T_1) @[FFTEngine.scala 291:29]
    dataInIPre[4] <= _dataInIPre_4_T_2 @[FFTEngine.scala 291:23]
    node _dataInRPre_5_T = bits(io.readDataSram1Bank[5], 15, 0) @[FFTEngine.scala 290:64]
    node _dataInRPre_5_T_1 = bits(io.readDataSram0Bank[5], 15, 0) @[FFTEngine.scala 290:110]
    node _dataInRPre_5_T_2 = mux(srcBuffer, _dataInRPre_5_T, _dataInRPre_5_T_1) @[FFTEngine.scala 290:29]
    dataInRPre[5] <= _dataInRPre_5_T_2 @[FFTEngine.scala 290:23]
    node _dataInIPre_5_T = bits(io.readDataSram1Bank[5], 31, 16) @[FFTEngine.scala 291:64]
    node _dataInIPre_5_T_1 = bits(io.readDataSram0Bank[5], 31, 16) @[FFTEngine.scala 291:135]
    node _dataInIPre_5_T_2 = mux(srcBuffer, _dataInIPre_5_T, _dataInIPre_5_T_1) @[FFTEngine.scala 291:29]
    dataInIPre[5] <= _dataInIPre_5_T_2 @[FFTEngine.scala 291:23]
    node _dataInRPre_6_T = bits(io.readDataSram1Bank[6], 15, 0) @[FFTEngine.scala 290:64]
    node _dataInRPre_6_T_1 = bits(io.readDataSram0Bank[6], 15, 0) @[FFTEngine.scala 290:110]
    node _dataInRPre_6_T_2 = mux(srcBuffer, _dataInRPre_6_T, _dataInRPre_6_T_1) @[FFTEngine.scala 290:29]
    dataInRPre[6] <= _dataInRPre_6_T_2 @[FFTEngine.scala 290:23]
    node _dataInIPre_6_T = bits(io.readDataSram1Bank[6], 31, 16) @[FFTEngine.scala 291:64]
    node _dataInIPre_6_T_1 = bits(io.readDataSram0Bank[6], 31, 16) @[FFTEngine.scala 291:135]
    node _dataInIPre_6_T_2 = mux(srcBuffer, _dataInIPre_6_T, _dataInIPre_6_T_1) @[FFTEngine.scala 291:29]
    dataInIPre[6] <= _dataInIPre_6_T_2 @[FFTEngine.scala 291:23]
    node _dataInRPre_7_T = bits(io.readDataSram1Bank[7], 15, 0) @[FFTEngine.scala 290:64]
    node _dataInRPre_7_T_1 = bits(io.readDataSram0Bank[7], 15, 0) @[FFTEngine.scala 290:110]
    node _dataInRPre_7_T_2 = mux(srcBuffer, _dataInRPre_7_T, _dataInRPre_7_T_1) @[FFTEngine.scala 290:29]
    dataInRPre[7] <= _dataInRPre_7_T_2 @[FFTEngine.scala 290:23]
    node _dataInIPre_7_T = bits(io.readDataSram1Bank[7], 31, 16) @[FFTEngine.scala 291:64]
    node _dataInIPre_7_T_1 = bits(io.readDataSram0Bank[7], 31, 16) @[FFTEngine.scala 291:135]
    node _dataInIPre_7_T_2 = mux(srcBuffer, _dataInIPre_7_T, _dataInIPre_7_T_1) @[FFTEngine.scala 291:29]
    dataInIPre[7] <= _dataInIPre_7_T_2 @[FFTEngine.scala 291:23]
    node _addrS1c_T = bits(addrS_0, 3, 0) @[FFTEngine.scala 294:45]
    reg addrS1c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS1c <= _addrS1c_T @[Reg.scala 36:22]
    reg addrS2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS2c <= addrS1c @[Reg.scala 36:22]
    reg addrS3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS3c <= addrS2c @[Reg.scala 36:22]
    node _addrT1c_T = bits(addrT_0, 3, 0) @[FFTEngine.scala 298:45]
    reg addrT1c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT1c <= _addrT1c_T @[Reg.scala 36:22]
    reg addrT2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT2c <= addrT1c @[Reg.scala 36:22]
    reg addrT3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT3c <= addrT2c @[Reg.scala 36:22]
    inst fftCalc of FFT3PipelineCalc @[FFTEngine.scala 302:29]
    fftCalc.clock <= clock
    fftCalc.reset <= reset
    node _fftCalc_io_dataInSR_T = or(addrSBankSel1c[0], UInt<3>("h0"))
    node _fftCalc_io_dataInSR_T_1 = bits(_fftCalc_io_dataInSR_T, 2, 0)
    fftCalc.io.dataInSR <= dataInRPre[_fftCalc_io_dataInSR_T_1] @[FFTEngine.scala 303:29]
    node _fftCalc_io_dataInSI_T = or(addrSBankSel1c[0], UInt<3>("h0"))
    node _fftCalc_io_dataInSI_T_1 = bits(_fftCalc_io_dataInSI_T, 2, 0)
    fftCalc.io.dataInSI <= dataInIPre[_fftCalc_io_dataInSI_T_1] @[FFTEngine.scala 304:29]
    node _fftCalc_io_dataInTR_T = or(addrTBankSel1c[0], UInt<3>("h0"))
    node _fftCalc_io_dataInTR_T_1 = bits(_fftCalc_io_dataInTR_T, 2, 0)
    fftCalc.io.dataInTR <= dataInRPre[_fftCalc_io_dataInTR_T_1] @[FFTEngine.scala 305:29]
    node _fftCalc_io_dataInTI_T = or(addrTBankSel1c[0], UInt<3>("h0"))
    node _fftCalc_io_dataInTI_T_1 = bits(_fftCalc_io_dataInTI_T, 2, 0)
    fftCalc.io.dataInTI <= dataInIPre[_fftCalc_io_dataInTI_T_1] @[FFTEngine.scala 306:29]
    fftCalc.io.nk <= nk[0] @[FFTEngine.scala 307:23]
    fftCalc.io.rShiftSym <= io.fftRShiftP0[phaseCount] @[FFTEngine.scala 308:30]
    fftCalc.io.isFFT <= isFFT @[FFTEngine.scala 309:26]
    fftCalc.io.dataMode <= UInt<1>("h0") @[FFTEngine.scala 310:29]
    fftCalc.io.state1c <= kernelState1c @[FFTEngine.scala 311:28]
    fftCalc.io.state2c <= kernelState2c @[FFTEngine.scala 312:28]
    node writeDataSPre = cat(fftCalc.io.dataOutSI3c, fftCalc.io.dataOutSR3c) @[Cat.scala 33:92]
    node writeDataTPre = cat(fftCalc.io.dataOutTI3c, fftCalc.io.dataOutTR3c) @[Cat.scala 33:92]
    node _T_36 = or(addrSBankSel3c[0], UInt<3>("h0"))
    node _T_37 = bits(_T_36, 2, 0)
    node _io_writeEnableSram0Bank_T = and(srcBuffer, kernelState3c) @[FFTEngine.scala 316:65]
    io.writeEnableSram0Bank[_T_37] <= _io_writeEnableSram0Bank_T @[FFTEngine.scala 316:52]
    node _T_38 = or(addrTBankSel3c[0], UInt<3>("h0"))
    node _T_39 = bits(_T_38, 2, 0)
    node _io_writeEnableSram0Bank_T_1 = and(srcBuffer, kernelState3c) @[FFTEngine.scala 317:65]
    io.writeEnableSram0Bank[_T_39] <= _io_writeEnableSram0Bank_T_1 @[FFTEngine.scala 317:52]
    node _T_40 = or(addrSBankSel3c[0], UInt<3>("h0"))
    node _T_41 = bits(_T_40, 2, 0)
    node _io_writeEnableSram1Bank_T = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 318:55]
    node _io_writeEnableSram1Bank_T_1 = and(_io_writeEnableSram1Bank_T, kernelState3c) @[FFTEngine.scala 318:66]
    io.writeEnableSram1Bank[_T_41] <= _io_writeEnableSram1Bank_T_1 @[FFTEngine.scala 318:52]
    node _T_42 = or(addrTBankSel3c[0], UInt<3>("h0"))
    node _T_43 = bits(_T_42, 2, 0)
    node _io_writeEnableSram1Bank_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 319:55]
    node _io_writeEnableSram1Bank_T_3 = and(_io_writeEnableSram1Bank_T_2, kernelState3c) @[FFTEngine.scala 319:66]
    io.writeEnableSram1Bank[_T_43] <= _io_writeEnableSram1Bank_T_3 @[FFTEngine.scala 319:52]
    node _T_44 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 321:24]
    when _T_44 : @[FFTEngine.scala 321:33]
      node _T_45 = or(addrSBankSel[0], UInt<3>("h0"))
      node _T_46 = bits(_T_45, 2, 0)
      node _io_addrSram0Bank_T = bits(addrS_0, 3, 0) @[FFTEngine.scala 322:58]
      io.addrSram0Bank[_T_46] <= _io_addrSram0Bank_T @[FFTEngine.scala 322:47]
      node _T_47 = or(addrTBankSel[0], UInt<3>("h0"))
      node _T_48 = bits(_T_47, 2, 0)
      node _io_addrSram0Bank_T_1 = bits(addrT_0, 3, 0) @[FFTEngine.scala 323:58]
      io.addrSram0Bank[_T_48] <= _io_addrSram0Bank_T_1 @[FFTEngine.scala 323:47]
      node _T_49 = or(addrSBankSel3c[0], UInt<3>("h0"))
      node _T_50 = bits(_T_49, 2, 0)
      io.addrSram1Bank[_T_50] <= addrS3c @[FFTEngine.scala 324:49]
      node _T_51 = or(addrTBankSel3c[0], UInt<3>("h0"))
      node _T_52 = bits(_T_51, 2, 0)
      io.addrSram1Bank[_T_52] <= addrT3c @[FFTEngine.scala 325:49]
    else :
      node _T_53 = or(addrSBankSel3c[0], UInt<3>("h0"))
      node _T_54 = bits(_T_53, 2, 0)
      io.addrSram0Bank[_T_54] <= addrS3c @[FFTEngine.scala 327:49]
      node _T_55 = or(addrTBankSel3c[0], UInt<3>("h0"))
      node _T_56 = bits(_T_55, 2, 0)
      io.addrSram0Bank[_T_56] <= addrT3c @[FFTEngine.scala 328:49]
      node _T_57 = or(addrSBankSel[0], UInt<3>("h0"))
      node _T_58 = bits(_T_57, 2, 0)
      node _io_addrSram1Bank_T = bits(addrS_0, 3, 0) @[FFTEngine.scala 329:58]
      io.addrSram1Bank[_T_58] <= _io_addrSram1Bank_T @[FFTEngine.scala 329:47]
      node _T_59 = or(addrTBankSel[0], UInt<3>("h0"))
      node _T_60 = bits(_T_59, 2, 0)
      node _io_addrSram1Bank_T_1 = bits(addrT_0, 3, 0) @[FFTEngine.scala 330:58]
      io.addrSram1Bank[_T_60] <= _io_addrSram1Bank_T_1 @[FFTEngine.scala 330:47]
    node _T_61 = or(addrSBankSel3c[0], UInt<3>("h0"))
    node _T_62 = bits(_T_61, 2, 0)
    io.writeDataSram0Bank[_T_62] <= writeDataSPre @[FFTEngine.scala 333:50]
    node _T_63 = or(addrTBankSel3c[0], UInt<3>("h0"))
    node _T_64 = bits(_T_63, 2, 0)
    io.writeDataSram0Bank[_T_64] <= writeDataTPre @[FFTEngine.scala 334:50]
    node _T_65 = or(addrSBankSel3c[0], UInt<3>("h0"))
    node _T_66 = bits(_T_65, 2, 0)
    io.writeDataSram1Bank[_T_66] <= writeDataSPre @[FFTEngine.scala 335:50]
    node _T_67 = or(addrTBankSel3c[0], UInt<3>("h0"))
    node _T_68 = bits(_T_67, 2, 0)
    io.writeDataSram1Bank[_T_68] <= writeDataTPre @[FFTEngine.scala 336:50]
    node _addrS1c_T_1 = bits(addrS_1, 3, 0) @[FFTEngine.scala 294:45]
    reg addrS1c_1 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS1c_1 <= _addrS1c_T_1 @[Reg.scala 36:22]
    reg addrS2c_1 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS2c_1 <= addrS1c_1 @[Reg.scala 36:22]
    reg addrS3c_1 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS3c_1 <= addrS2c_1 @[Reg.scala 36:22]
    node _addrT1c_T_1 = bits(addrT_1, 3, 0) @[FFTEngine.scala 298:45]
    reg addrT1c_1 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT1c_1 <= _addrT1c_T_1 @[Reg.scala 36:22]
    reg addrT2c_1 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT2c_1 <= addrT1c_1 @[Reg.scala 36:22]
    reg addrT3c_1 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT3c_1 <= addrT2c_1 @[Reg.scala 36:22]
    inst fftCalc_1 of FFT3PipelineCalc_1 @[FFTEngine.scala 302:29]
    fftCalc_1.clock <= clock
    fftCalc_1.reset <= reset
    node _fftCalc_io_dataInSR_T_2 = or(addrSBankSel1c[1], UInt<3>("h0"))
    node _fftCalc_io_dataInSR_T_3 = bits(_fftCalc_io_dataInSR_T_2, 2, 0)
    fftCalc_1.io.dataInSR <= dataInRPre[_fftCalc_io_dataInSR_T_3] @[FFTEngine.scala 303:29]
    node _fftCalc_io_dataInSI_T_2 = or(addrSBankSel1c[1], UInt<3>("h0"))
    node _fftCalc_io_dataInSI_T_3 = bits(_fftCalc_io_dataInSI_T_2, 2, 0)
    fftCalc_1.io.dataInSI <= dataInIPre[_fftCalc_io_dataInSI_T_3] @[FFTEngine.scala 304:29]
    node _fftCalc_io_dataInTR_T_2 = or(addrTBankSel1c[1], UInt<3>("h0"))
    node _fftCalc_io_dataInTR_T_3 = bits(_fftCalc_io_dataInTR_T_2, 2, 0)
    fftCalc_1.io.dataInTR <= dataInRPre[_fftCalc_io_dataInTR_T_3] @[FFTEngine.scala 305:29]
    node _fftCalc_io_dataInTI_T_2 = or(addrTBankSel1c[1], UInt<3>("h0"))
    node _fftCalc_io_dataInTI_T_3 = bits(_fftCalc_io_dataInTI_T_2, 2, 0)
    fftCalc_1.io.dataInTI <= dataInIPre[_fftCalc_io_dataInTI_T_3] @[FFTEngine.scala 306:29]
    fftCalc_1.io.nk <= nk[1] @[FFTEngine.scala 307:23]
    fftCalc_1.io.rShiftSym <= io.fftRShiftP0[phaseCount] @[FFTEngine.scala 308:30]
    fftCalc_1.io.isFFT <= isFFT @[FFTEngine.scala 309:26]
    fftCalc_1.io.dataMode <= UInt<1>("h0") @[FFTEngine.scala 310:29]
    fftCalc_1.io.state1c <= kernelState1c @[FFTEngine.scala 311:28]
    fftCalc_1.io.state2c <= kernelState2c @[FFTEngine.scala 312:28]
    node writeDataSPre_1 = cat(fftCalc_1.io.dataOutSI3c, fftCalc_1.io.dataOutSR3c) @[Cat.scala 33:92]
    node writeDataTPre_1 = cat(fftCalc_1.io.dataOutTI3c, fftCalc_1.io.dataOutTR3c) @[Cat.scala 33:92]
    node _T_69 = or(addrSBankSel3c[1], UInt<3>("h0"))
    node _T_70 = bits(_T_69, 2, 0)
    node _io_writeEnableSram0Bank_T_2 = and(srcBuffer, kernelState3c) @[FFTEngine.scala 316:65]
    io.writeEnableSram0Bank[_T_70] <= _io_writeEnableSram0Bank_T_2 @[FFTEngine.scala 316:52]
    node _T_71 = or(addrTBankSel3c[1], UInt<3>("h0"))
    node _T_72 = bits(_T_71, 2, 0)
    node _io_writeEnableSram0Bank_T_3 = and(srcBuffer, kernelState3c) @[FFTEngine.scala 317:65]
    io.writeEnableSram0Bank[_T_72] <= _io_writeEnableSram0Bank_T_3 @[FFTEngine.scala 317:52]
    node _T_73 = or(addrSBankSel3c[1], UInt<3>("h0"))
    node _T_74 = bits(_T_73, 2, 0)
    node _io_writeEnableSram1Bank_T_4 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 318:55]
    node _io_writeEnableSram1Bank_T_5 = and(_io_writeEnableSram1Bank_T_4, kernelState3c) @[FFTEngine.scala 318:66]
    io.writeEnableSram1Bank[_T_74] <= _io_writeEnableSram1Bank_T_5 @[FFTEngine.scala 318:52]
    node _T_75 = or(addrTBankSel3c[1], UInt<3>("h0"))
    node _T_76 = bits(_T_75, 2, 0)
    node _io_writeEnableSram1Bank_T_6 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 319:55]
    node _io_writeEnableSram1Bank_T_7 = and(_io_writeEnableSram1Bank_T_6, kernelState3c) @[FFTEngine.scala 319:66]
    io.writeEnableSram1Bank[_T_76] <= _io_writeEnableSram1Bank_T_7 @[FFTEngine.scala 319:52]
    node _T_77 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 321:24]
    when _T_77 : @[FFTEngine.scala 321:33]
      node _T_78 = or(addrSBankSel[1], UInt<3>("h0"))
      node _T_79 = bits(_T_78, 2, 0)
      node _io_addrSram0Bank_T_2 = bits(addrS_1, 3, 0) @[FFTEngine.scala 322:58]
      io.addrSram0Bank[_T_79] <= _io_addrSram0Bank_T_2 @[FFTEngine.scala 322:47]
      node _T_80 = or(addrTBankSel[1], UInt<3>("h0"))
      node _T_81 = bits(_T_80, 2, 0)
      node _io_addrSram0Bank_T_3 = bits(addrT_1, 3, 0) @[FFTEngine.scala 323:58]
      io.addrSram0Bank[_T_81] <= _io_addrSram0Bank_T_3 @[FFTEngine.scala 323:47]
      node _T_82 = or(addrSBankSel3c[1], UInt<3>("h0"))
      node _T_83 = bits(_T_82, 2, 0)
      io.addrSram1Bank[_T_83] <= addrS3c_1 @[FFTEngine.scala 324:49]
      node _T_84 = or(addrTBankSel3c[1], UInt<3>("h0"))
      node _T_85 = bits(_T_84, 2, 0)
      io.addrSram1Bank[_T_85] <= addrT3c_1 @[FFTEngine.scala 325:49]
    else :
      node _T_86 = or(addrSBankSel3c[1], UInt<3>("h0"))
      node _T_87 = bits(_T_86, 2, 0)
      io.addrSram0Bank[_T_87] <= addrS3c_1 @[FFTEngine.scala 327:49]
      node _T_88 = or(addrTBankSel3c[1], UInt<3>("h0"))
      node _T_89 = bits(_T_88, 2, 0)
      io.addrSram0Bank[_T_89] <= addrT3c_1 @[FFTEngine.scala 328:49]
      node _T_90 = or(addrSBankSel[1], UInt<3>("h0"))
      node _T_91 = bits(_T_90, 2, 0)
      node _io_addrSram1Bank_T_2 = bits(addrS_1, 3, 0) @[FFTEngine.scala 329:58]
      io.addrSram1Bank[_T_91] <= _io_addrSram1Bank_T_2 @[FFTEngine.scala 329:47]
      node _T_92 = or(addrTBankSel[1], UInt<3>("h0"))
      node _T_93 = bits(_T_92, 2, 0)
      node _io_addrSram1Bank_T_3 = bits(addrT_1, 3, 0) @[FFTEngine.scala 330:58]
      io.addrSram1Bank[_T_93] <= _io_addrSram1Bank_T_3 @[FFTEngine.scala 330:47]
    node _T_94 = or(addrSBankSel3c[1], UInt<3>("h0"))
    node _T_95 = bits(_T_94, 2, 0)
    io.writeDataSram0Bank[_T_95] <= writeDataSPre_1 @[FFTEngine.scala 333:50]
    node _T_96 = or(addrTBankSel3c[1], UInt<3>("h0"))
    node _T_97 = bits(_T_96, 2, 0)
    io.writeDataSram0Bank[_T_97] <= writeDataTPre_1 @[FFTEngine.scala 334:50]
    node _T_98 = or(addrSBankSel3c[1], UInt<3>("h0"))
    node _T_99 = bits(_T_98, 2, 0)
    io.writeDataSram1Bank[_T_99] <= writeDataSPre_1 @[FFTEngine.scala 335:50]
    node _T_100 = or(addrTBankSel3c[1], UInt<3>("h0"))
    node _T_101 = bits(_T_100, 2, 0)
    io.writeDataSram1Bank[_T_101] <= writeDataTPre_1 @[FFTEngine.scala 336:50]
    node _addrS1c_T_2 = bits(addrS_2, 3, 0) @[FFTEngine.scala 294:45]
    reg addrS1c_2 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS1c_2 <= _addrS1c_T_2 @[Reg.scala 36:22]
    reg addrS2c_2 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS2c_2 <= addrS1c_2 @[Reg.scala 36:22]
    reg addrS3c_2 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS3c_2 <= addrS2c_2 @[Reg.scala 36:22]
    node _addrT1c_T_2 = bits(addrT_2, 3, 0) @[FFTEngine.scala 298:45]
    reg addrT1c_2 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT1c_2 <= _addrT1c_T_2 @[Reg.scala 36:22]
    reg addrT2c_2 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT2c_2 <= addrT1c_2 @[Reg.scala 36:22]
    reg addrT3c_2 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT3c_2 <= addrT2c_2 @[Reg.scala 36:22]
    inst fftCalc_2 of FFT3PipelineCalc_2 @[FFTEngine.scala 302:29]
    fftCalc_2.clock <= clock
    fftCalc_2.reset <= reset
    node _fftCalc_io_dataInSR_T_4 = or(addrSBankSel1c[2], UInt<3>("h0"))
    node _fftCalc_io_dataInSR_T_5 = bits(_fftCalc_io_dataInSR_T_4, 2, 0)
    fftCalc_2.io.dataInSR <= dataInRPre[_fftCalc_io_dataInSR_T_5] @[FFTEngine.scala 303:29]
    node _fftCalc_io_dataInSI_T_4 = or(addrSBankSel1c[2], UInt<3>("h0"))
    node _fftCalc_io_dataInSI_T_5 = bits(_fftCalc_io_dataInSI_T_4, 2, 0)
    fftCalc_2.io.dataInSI <= dataInIPre[_fftCalc_io_dataInSI_T_5] @[FFTEngine.scala 304:29]
    node _fftCalc_io_dataInTR_T_4 = or(addrTBankSel1c[2], UInt<3>("h0"))
    node _fftCalc_io_dataInTR_T_5 = bits(_fftCalc_io_dataInTR_T_4, 2, 0)
    fftCalc_2.io.dataInTR <= dataInRPre[_fftCalc_io_dataInTR_T_5] @[FFTEngine.scala 305:29]
    node _fftCalc_io_dataInTI_T_4 = or(addrTBankSel1c[2], UInt<3>("h0"))
    node _fftCalc_io_dataInTI_T_5 = bits(_fftCalc_io_dataInTI_T_4, 2, 0)
    fftCalc_2.io.dataInTI <= dataInIPre[_fftCalc_io_dataInTI_T_5] @[FFTEngine.scala 306:29]
    fftCalc_2.io.nk <= nk[2] @[FFTEngine.scala 307:23]
    fftCalc_2.io.rShiftSym <= io.fftRShiftP0[phaseCount] @[FFTEngine.scala 308:30]
    fftCalc_2.io.isFFT <= isFFT @[FFTEngine.scala 309:26]
    fftCalc_2.io.dataMode <= UInt<1>("h0") @[FFTEngine.scala 310:29]
    fftCalc_2.io.state1c <= kernelState1c @[FFTEngine.scala 311:28]
    fftCalc_2.io.state2c <= kernelState2c @[FFTEngine.scala 312:28]
    node writeDataSPre_2 = cat(fftCalc_2.io.dataOutSI3c, fftCalc_2.io.dataOutSR3c) @[Cat.scala 33:92]
    node writeDataTPre_2 = cat(fftCalc_2.io.dataOutTI3c, fftCalc_2.io.dataOutTR3c) @[Cat.scala 33:92]
    node _T_102 = or(addrSBankSel3c[2], UInt<3>("h0"))
    node _T_103 = bits(_T_102, 2, 0)
    node _io_writeEnableSram0Bank_T_4 = and(srcBuffer, kernelState3c) @[FFTEngine.scala 316:65]
    io.writeEnableSram0Bank[_T_103] <= _io_writeEnableSram0Bank_T_4 @[FFTEngine.scala 316:52]
    node _T_104 = or(addrTBankSel3c[2], UInt<3>("h0"))
    node _T_105 = bits(_T_104, 2, 0)
    node _io_writeEnableSram0Bank_T_5 = and(srcBuffer, kernelState3c) @[FFTEngine.scala 317:65]
    io.writeEnableSram0Bank[_T_105] <= _io_writeEnableSram0Bank_T_5 @[FFTEngine.scala 317:52]
    node _T_106 = or(addrSBankSel3c[2], UInt<3>("h0"))
    node _T_107 = bits(_T_106, 2, 0)
    node _io_writeEnableSram1Bank_T_8 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 318:55]
    node _io_writeEnableSram1Bank_T_9 = and(_io_writeEnableSram1Bank_T_8, kernelState3c) @[FFTEngine.scala 318:66]
    io.writeEnableSram1Bank[_T_107] <= _io_writeEnableSram1Bank_T_9 @[FFTEngine.scala 318:52]
    node _T_108 = or(addrTBankSel3c[2], UInt<3>("h0"))
    node _T_109 = bits(_T_108, 2, 0)
    node _io_writeEnableSram1Bank_T_10 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 319:55]
    node _io_writeEnableSram1Bank_T_11 = and(_io_writeEnableSram1Bank_T_10, kernelState3c) @[FFTEngine.scala 319:66]
    io.writeEnableSram1Bank[_T_109] <= _io_writeEnableSram1Bank_T_11 @[FFTEngine.scala 319:52]
    node _T_110 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 321:24]
    when _T_110 : @[FFTEngine.scala 321:33]
      node _T_111 = or(addrSBankSel[2], UInt<3>("h0"))
      node _T_112 = bits(_T_111, 2, 0)
      node _io_addrSram0Bank_T_4 = bits(addrS_2, 3, 0) @[FFTEngine.scala 322:58]
      io.addrSram0Bank[_T_112] <= _io_addrSram0Bank_T_4 @[FFTEngine.scala 322:47]
      node _T_113 = or(addrTBankSel[2], UInt<3>("h0"))
      node _T_114 = bits(_T_113, 2, 0)
      node _io_addrSram0Bank_T_5 = bits(addrT_2, 3, 0) @[FFTEngine.scala 323:58]
      io.addrSram0Bank[_T_114] <= _io_addrSram0Bank_T_5 @[FFTEngine.scala 323:47]
      node _T_115 = or(addrSBankSel3c[2], UInt<3>("h0"))
      node _T_116 = bits(_T_115, 2, 0)
      io.addrSram1Bank[_T_116] <= addrS3c_2 @[FFTEngine.scala 324:49]
      node _T_117 = or(addrTBankSel3c[2], UInt<3>("h0"))
      node _T_118 = bits(_T_117, 2, 0)
      io.addrSram1Bank[_T_118] <= addrT3c_2 @[FFTEngine.scala 325:49]
    else :
      node _T_119 = or(addrSBankSel3c[2], UInt<3>("h0"))
      node _T_120 = bits(_T_119, 2, 0)
      io.addrSram0Bank[_T_120] <= addrS3c_2 @[FFTEngine.scala 327:49]
      node _T_121 = or(addrTBankSel3c[2], UInt<3>("h0"))
      node _T_122 = bits(_T_121, 2, 0)
      io.addrSram0Bank[_T_122] <= addrT3c_2 @[FFTEngine.scala 328:49]
      node _T_123 = or(addrSBankSel[2], UInt<3>("h0"))
      node _T_124 = bits(_T_123, 2, 0)
      node _io_addrSram1Bank_T_4 = bits(addrS_2, 3, 0) @[FFTEngine.scala 329:58]
      io.addrSram1Bank[_T_124] <= _io_addrSram1Bank_T_4 @[FFTEngine.scala 329:47]
      node _T_125 = or(addrTBankSel[2], UInt<3>("h0"))
      node _T_126 = bits(_T_125, 2, 0)
      node _io_addrSram1Bank_T_5 = bits(addrT_2, 3, 0) @[FFTEngine.scala 330:58]
      io.addrSram1Bank[_T_126] <= _io_addrSram1Bank_T_5 @[FFTEngine.scala 330:47]
    node _T_127 = or(addrSBankSel3c[2], UInt<3>("h0"))
    node _T_128 = bits(_T_127, 2, 0)
    io.writeDataSram0Bank[_T_128] <= writeDataSPre_2 @[FFTEngine.scala 333:50]
    node _T_129 = or(addrTBankSel3c[2], UInt<3>("h0"))
    node _T_130 = bits(_T_129, 2, 0)
    io.writeDataSram0Bank[_T_130] <= writeDataTPre_2 @[FFTEngine.scala 334:50]
    node _T_131 = or(addrSBankSel3c[2], UInt<3>("h0"))
    node _T_132 = bits(_T_131, 2, 0)
    io.writeDataSram1Bank[_T_132] <= writeDataSPre_2 @[FFTEngine.scala 335:50]
    node _T_133 = or(addrTBankSel3c[2], UInt<3>("h0"))
    node _T_134 = bits(_T_133, 2, 0)
    io.writeDataSram1Bank[_T_134] <= writeDataTPre_2 @[FFTEngine.scala 336:50]
    node _addrS1c_T_3 = bits(addrS_3, 3, 0) @[FFTEngine.scala 294:45]
    reg addrS1c_3 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS1c_3 <= _addrS1c_T_3 @[Reg.scala 36:22]
    reg addrS2c_3 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS2c_3 <= addrS1c_3 @[Reg.scala 36:22]
    reg addrS3c_3 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS3c_3 <= addrS2c_3 @[Reg.scala 36:22]
    node _addrT1c_T_3 = bits(addrT_3, 3, 0) @[FFTEngine.scala 298:45]
    reg addrT1c_3 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT1c_3 <= _addrT1c_T_3 @[Reg.scala 36:22]
    reg addrT2c_3 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT2c_3 <= addrT1c_3 @[Reg.scala 36:22]
    reg addrT3c_3 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT3c_3 <= addrT2c_3 @[Reg.scala 36:22]
    inst fftCalc_3 of FFT3PipelineCalc_3 @[FFTEngine.scala 302:29]
    fftCalc_3.clock <= clock
    fftCalc_3.reset <= reset
    node _fftCalc_io_dataInSR_T_6 = or(addrSBankSel1c[3], UInt<3>("h0"))
    node _fftCalc_io_dataInSR_T_7 = bits(_fftCalc_io_dataInSR_T_6, 2, 0)
    fftCalc_3.io.dataInSR <= dataInRPre[_fftCalc_io_dataInSR_T_7] @[FFTEngine.scala 303:29]
    node _fftCalc_io_dataInSI_T_6 = or(addrSBankSel1c[3], UInt<3>("h0"))
    node _fftCalc_io_dataInSI_T_7 = bits(_fftCalc_io_dataInSI_T_6, 2, 0)
    fftCalc_3.io.dataInSI <= dataInIPre[_fftCalc_io_dataInSI_T_7] @[FFTEngine.scala 304:29]
    node _fftCalc_io_dataInTR_T_6 = or(addrTBankSel1c[3], UInt<3>("h0"))
    node _fftCalc_io_dataInTR_T_7 = bits(_fftCalc_io_dataInTR_T_6, 2, 0)
    fftCalc_3.io.dataInTR <= dataInRPre[_fftCalc_io_dataInTR_T_7] @[FFTEngine.scala 305:29]
    node _fftCalc_io_dataInTI_T_6 = or(addrTBankSel1c[3], UInt<3>("h0"))
    node _fftCalc_io_dataInTI_T_7 = bits(_fftCalc_io_dataInTI_T_6, 2, 0)
    fftCalc_3.io.dataInTI <= dataInIPre[_fftCalc_io_dataInTI_T_7] @[FFTEngine.scala 306:29]
    fftCalc_3.io.nk <= nk[3] @[FFTEngine.scala 307:23]
    fftCalc_3.io.rShiftSym <= io.fftRShiftP0[phaseCount] @[FFTEngine.scala 308:30]
    fftCalc_3.io.isFFT <= isFFT @[FFTEngine.scala 309:26]
    fftCalc_3.io.dataMode <= UInt<1>("h0") @[FFTEngine.scala 310:29]
    fftCalc_3.io.state1c <= kernelState1c @[FFTEngine.scala 311:28]
    fftCalc_3.io.state2c <= kernelState2c @[FFTEngine.scala 312:28]
    node writeDataSPre_3 = cat(fftCalc_3.io.dataOutSI3c, fftCalc_3.io.dataOutSR3c) @[Cat.scala 33:92]
    node writeDataTPre_3 = cat(fftCalc_3.io.dataOutTI3c, fftCalc_3.io.dataOutTR3c) @[Cat.scala 33:92]
    node _T_135 = or(addrSBankSel3c[3], UInt<3>("h0"))
    node _T_136 = bits(_T_135, 2, 0)
    node _io_writeEnableSram0Bank_T_6 = and(srcBuffer, kernelState3c) @[FFTEngine.scala 316:65]
    io.writeEnableSram0Bank[_T_136] <= _io_writeEnableSram0Bank_T_6 @[FFTEngine.scala 316:52]
    node _T_137 = or(addrTBankSel3c[3], UInt<3>("h0"))
    node _T_138 = bits(_T_137, 2, 0)
    node _io_writeEnableSram0Bank_T_7 = and(srcBuffer, kernelState3c) @[FFTEngine.scala 317:65]
    io.writeEnableSram0Bank[_T_138] <= _io_writeEnableSram0Bank_T_7 @[FFTEngine.scala 317:52]
    node _T_139 = or(addrSBankSel3c[3], UInt<3>("h0"))
    node _T_140 = bits(_T_139, 2, 0)
    node _io_writeEnableSram1Bank_T_12 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 318:55]
    node _io_writeEnableSram1Bank_T_13 = and(_io_writeEnableSram1Bank_T_12, kernelState3c) @[FFTEngine.scala 318:66]
    io.writeEnableSram1Bank[_T_140] <= _io_writeEnableSram1Bank_T_13 @[FFTEngine.scala 318:52]
    node _T_141 = or(addrTBankSel3c[3], UInt<3>("h0"))
    node _T_142 = bits(_T_141, 2, 0)
    node _io_writeEnableSram1Bank_T_14 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 319:55]
    node _io_writeEnableSram1Bank_T_15 = and(_io_writeEnableSram1Bank_T_14, kernelState3c) @[FFTEngine.scala 319:66]
    io.writeEnableSram1Bank[_T_142] <= _io_writeEnableSram1Bank_T_15 @[FFTEngine.scala 319:52]
    node _T_143 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 321:24]
    when _T_143 : @[FFTEngine.scala 321:33]
      node _T_144 = or(addrSBankSel[3], UInt<3>("h0"))
      node _T_145 = bits(_T_144, 2, 0)
      node _io_addrSram0Bank_T_6 = bits(addrS_3, 3, 0) @[FFTEngine.scala 322:58]
      io.addrSram0Bank[_T_145] <= _io_addrSram0Bank_T_6 @[FFTEngine.scala 322:47]
      node _T_146 = or(addrTBankSel[3], UInt<3>("h0"))
      node _T_147 = bits(_T_146, 2, 0)
      node _io_addrSram0Bank_T_7 = bits(addrT_3, 3, 0) @[FFTEngine.scala 323:58]
      io.addrSram0Bank[_T_147] <= _io_addrSram0Bank_T_7 @[FFTEngine.scala 323:47]
      node _T_148 = or(addrSBankSel3c[3], UInt<3>("h0"))
      node _T_149 = bits(_T_148, 2, 0)
      io.addrSram1Bank[_T_149] <= addrS3c_3 @[FFTEngine.scala 324:49]
      node _T_150 = or(addrTBankSel3c[3], UInt<3>("h0"))
      node _T_151 = bits(_T_150, 2, 0)
      io.addrSram1Bank[_T_151] <= addrT3c_3 @[FFTEngine.scala 325:49]
    else :
      node _T_152 = or(addrSBankSel3c[3], UInt<3>("h0"))
      node _T_153 = bits(_T_152, 2, 0)
      io.addrSram0Bank[_T_153] <= addrS3c_3 @[FFTEngine.scala 327:49]
      node _T_154 = or(addrTBankSel3c[3], UInt<3>("h0"))
      node _T_155 = bits(_T_154, 2, 0)
      io.addrSram0Bank[_T_155] <= addrT3c_3 @[FFTEngine.scala 328:49]
      node _T_156 = or(addrSBankSel[3], UInt<3>("h0"))
      node _T_157 = bits(_T_156, 2, 0)
      node _io_addrSram1Bank_T_6 = bits(addrS_3, 3, 0) @[FFTEngine.scala 329:58]
      io.addrSram1Bank[_T_157] <= _io_addrSram1Bank_T_6 @[FFTEngine.scala 329:47]
      node _T_158 = or(addrTBankSel[3], UInt<3>("h0"))
      node _T_159 = bits(_T_158, 2, 0)
      node _io_addrSram1Bank_T_7 = bits(addrT_3, 3, 0) @[FFTEngine.scala 330:58]
      io.addrSram1Bank[_T_159] <= _io_addrSram1Bank_T_7 @[FFTEngine.scala 330:47]
    node _T_160 = or(addrSBankSel3c[3], UInt<3>("h0"))
    node _T_161 = bits(_T_160, 2, 0)
    io.writeDataSram0Bank[_T_161] <= writeDataSPre_3 @[FFTEngine.scala 333:50]
    node _T_162 = or(addrTBankSel3c[3], UInt<3>("h0"))
    node _T_163 = bits(_T_162, 2, 0)
    io.writeDataSram0Bank[_T_163] <= writeDataTPre_3 @[FFTEngine.scala 334:50]
    node _T_164 = or(addrSBankSel3c[3], UInt<3>("h0"))
    node _T_165 = bits(_T_164, 2, 0)
    io.writeDataSram1Bank[_T_165] <= writeDataSPre_3 @[FFTEngine.scala 335:50]
    node _T_166 = or(addrTBankSel3c[3], UInt<3>("h0"))
    node _T_167 = bits(_T_166, 2, 0)
    io.writeDataSram1Bank[_T_167] <= writeDataTPre_3 @[FFTEngine.scala 336:50]
    node donePre = eq(stateReg, UInt<3>("h4")) @[FFTEngine.scala 339:29]
    reg fftDoneReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[FFTEngine.scala 340:29]
    fftDoneReg <= donePre @[FFTEngine.scala 340:29]
    io.fftDone <= fftDoneReg @[FFTEngine.scala 341:16]

