circuit FFTEngine :
  module FFTTwiddle :
    output io : { flip nk : UInt, flip twiLutCaseIndex : UInt, wR : UInt, wI : UInt}

    wire twi_cos_tb1_p10 : UInt<12>[128] @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[0] <= UInt<12>("h400") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[1] <= UInt<12>("h400") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[2] <= UInt<12>("h3ff") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[3] <= UInt<12>("h3fd") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[4] <= UInt<12>("h3fb") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[5] <= UInt<12>("h3f8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[6] <= UInt<12>("h3f5") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[7] <= UInt<12>("h3f1") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[8] <= UInt<12>("h3ec") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[9] <= UInt<12>("h3e7") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[10] <= UInt<12>("h3e1") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[11] <= UInt<12>("h3db") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[12] <= UInt<12>("h3d4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[13] <= UInt<12>("h3cc") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[14] <= UInt<12>("h3c4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[15] <= UInt<12>("h3bb") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[16] <= UInt<12>("h3b2") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[17] <= UInt<12>("h3a8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[18] <= UInt<12>("h39e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[19] <= UInt<12>("h393") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[20] <= UInt<12>("h387") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[21] <= UInt<12>("h37b") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[22] <= UInt<12>("h36e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[23] <= UInt<12>("h361") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[24] <= UInt<12>("h353") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[25] <= UInt<12>("h345") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[26] <= UInt<12>("h336") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[27] <= UInt<12>("h327") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[28] <= UInt<12>("h318") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[29] <= UInt<12>("h307") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[30] <= UInt<12>("h2f7") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[31] <= UInt<12>("h2e6") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[32] <= UInt<12>("h2d4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[33] <= UInt<12>("h2c2") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[34] <= UInt<12>("h2b0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[35] <= UInt<12>("h29d") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[36] <= UInt<12>("h28a") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[37] <= UInt<12>("h276") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[38] <= UInt<12>("h262") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[39] <= UInt<12>("h24e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[40] <= UInt<12>("h239") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[41] <= UInt<12>("h224") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[42] <= UInt<12>("h20e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[43] <= UInt<12>("h1f9") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[44] <= UInt<12>("h1e3") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[45] <= UInt<12>("h1cc") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[46] <= UInt<12>("h1b6") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[47] <= UInt<12>("h19f") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[48] <= UInt<12>("h188") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[49] <= UInt<12>("h171") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[50] <= UInt<12>("h159") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[51] <= UInt<12>("h141") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[52] <= UInt<12>("h129") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[53] <= UInt<12>("h111") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[54] <= UInt<12>("hf9") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[55] <= UInt<12>("he0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[56] <= UInt<12>("hc8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[57] <= UInt<12>("haf") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[58] <= UInt<12>("h96") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[59] <= UInt<12>("h7d") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[60] <= UInt<12>("h64") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[61] <= UInt<12>("h4b") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[62] <= UInt<12>("h32") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[63] <= UInt<12>("h19") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[64] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[65] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[66] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[67] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[68] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[69] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[70] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[71] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[72] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[73] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[74] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[75] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[76] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[77] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[78] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[79] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[80] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[81] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[82] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[83] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[84] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[85] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[86] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[87] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[88] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[89] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[90] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[91] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[92] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[93] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[94] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[95] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[96] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[97] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[98] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[99] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[100] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[101] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[102] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[103] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[104] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[105] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[106] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[107] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[108] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[109] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[110] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[111] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[112] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[113] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[114] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[115] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[116] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[117] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[118] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[119] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[120] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[121] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[122] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[123] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[124] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[125] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[126] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[127] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    wire twi_sin_tb1_p10 : UInt<12>[128] @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[0] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[1] <= UInt<12>("h19") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[2] <= UInt<12>("h32") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[3] <= UInt<12>("h4b") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[4] <= UInt<12>("h64") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[5] <= UInt<12>("h7d") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[6] <= UInt<12>("h96") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[7] <= UInt<12>("haf") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[8] <= UInt<12>("hc8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[9] <= UInt<12>("he0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[10] <= UInt<12>("hf9") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[11] <= UInt<12>("h111") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[12] <= UInt<12>("h129") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[13] <= UInt<12>("h141") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[14] <= UInt<12>("h159") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[15] <= UInt<12>("h171") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[16] <= UInt<12>("h188") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[17] <= UInt<12>("h19f") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[18] <= UInt<12>("h1b6") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[19] <= UInt<12>("h1cc") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[20] <= UInt<12>("h1e3") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[21] <= UInt<12>("h1f9") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[22] <= UInt<12>("h20e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[23] <= UInt<12>("h224") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[24] <= UInt<12>("h239") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[25] <= UInt<12>("h24e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[26] <= UInt<12>("h262") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[27] <= UInt<12>("h276") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[28] <= UInt<12>("h28a") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[29] <= UInt<12>("h29d") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[30] <= UInt<12>("h2b0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[31] <= UInt<12>("h2c2") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[32] <= UInt<12>("h2d4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[33] <= UInt<12>("h2e6") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[34] <= UInt<12>("h2f7") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[35] <= UInt<12>("h307") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[36] <= UInt<12>("h318") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[37] <= UInt<12>("h327") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[38] <= UInt<12>("h336") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[39] <= UInt<12>("h345") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[40] <= UInt<12>("h353") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[41] <= UInt<12>("h361") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[42] <= UInt<12>("h36e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[43] <= UInt<12>("h37b") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[44] <= UInt<12>("h387") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[45] <= UInt<12>("h393") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[46] <= UInt<12>("h39e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[47] <= UInt<12>("h3a8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[48] <= UInt<12>("h3b2") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[49] <= UInt<12>("h3bb") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[50] <= UInt<12>("h3c4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[51] <= UInt<12>("h3cc") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[52] <= UInt<12>("h3d4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[53] <= UInt<12>("h3db") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[54] <= UInt<12>("h3e1") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[55] <= UInt<12>("h3e7") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[56] <= UInt<12>("h3ec") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[57] <= UInt<12>("h3f1") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[58] <= UInt<12>("h3f5") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[59] <= UInt<12>("h3f8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[60] <= UInt<12>("h3fb") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[61] <= UInt<12>("h3fd") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[62] <= UInt<12>("h3ff") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[63] <= UInt<12>("h400") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[64] <= UInt<12>("h400") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[65] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[66] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[67] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[68] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[69] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[70] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[71] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[72] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[73] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[74] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[75] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[76] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[77] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[78] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[79] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[80] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[81] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[82] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[83] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[84] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[85] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[86] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[87] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[88] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[89] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[90] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[91] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[92] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[93] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[94] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[95] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[96] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[97] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[98] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[99] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[100] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[101] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[102] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[103] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[104] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[105] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[106] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[107] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[108] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[109] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[110] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[111] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[112] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[113] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[114] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[115] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[116] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[117] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[118] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[119] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[120] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[121] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[122] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[123] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[124] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[125] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[126] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[127] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    node _idx_r_T = bits(io.nk, 6, 6) @[FFTTwiddle.scala 35:27]
    node _idx_r_T_1 = bits(io.nk, 5, 0) @[FFTTwiddle.scala 35:50]
    node _idx_r_T_2 = orr(_idx_r_T_1) @[FFTTwiddle.scala 35:73]
    node _idx_r_T_3 = and(_idx_r_T, _idx_r_T_2) @[FFTTwiddle.scala 35:43]
    node _idx_r_T_4 = not(io.nk) @[FFTTwiddle.scala 35:80]
    node _idx_r_T_5 = add(_idx_r_T_4, UInt<1>("h1")) @[FFTTwiddle.scala 35:87]
    node _idx_r_T_6 = tail(_idx_r_T_5, 1) @[FFTTwiddle.scala 35:87]
    node idx_r = mux(_idx_r_T_3, _idx_r_T_6, io.nk) @[FFTTwiddle.scala 35:20]
    node _lut_chg_sign_flag_r_T = bits(io.nk, 6, 6) @[FFTTwiddle.scala 37:36]
    node _lut_chg_sign_flag_r_T_1 = bits(io.nk, 5, 0) @[FFTTwiddle.scala 37:60]
    node _lut_chg_sign_flag_r_T_2 = orr(_lut_chg_sign_flag_r_T_1) @[FFTTwiddle.scala 37:83]
    node lut_chg_sign_flag_r = and(_lut_chg_sign_flag_r_T, _lut_chg_sign_flag_r_T_2) @[FFTTwiddle.scala 37:52]
    node _lut_w_r_T = or(idx_r, UInt<7>("h0"))
    node _lut_w_r_T_1 = bits(_lut_w_r_T, 6, 0)
    node idx_i = bits(idx_r, 6, 0) @[FFTTwiddle.scala 41:22]
    node _chg_sign_flag_r_T = eq(io.twiLutCaseIndex, UInt<2>("h2")) @[FFTTwiddle.scala 47:51]
    node _chg_sign_flag_r_T_1 = eq(lut_chg_sign_flag_r, UInt<1>("h0")) @[FFTTwiddle.scala 47:61]
    node chg_sign_flag_r = mux(_chg_sign_flag_r_T, _chg_sign_flag_r_T_1, lut_chg_sign_flag_r) @[FFTTwiddle.scala 47:30]
    node _chg_sign_flag_i_T = eq(io.twiLutCaseIndex, UInt<1>("h1")) @[FFTTwiddle.scala 48:51]
    node _chg_sign_flag_i_T_1 = eq(UInt<1>("h1"), UInt<1>("h0")) @[FFTTwiddle.scala 48:61]
    node chg_sign_flag_i = mux(_chg_sign_flag_i_T, _chg_sign_flag_i_T_1, UInt<1>("h1")) @[FFTTwiddle.scala 48:30]
    node _io_wR_T = not(twi_cos_tb1_p10[_lut_w_r_T_1]) @[FFTTwiddle.scala 50:36]
    node _io_wR_T_1 = add(_io_wR_T, UInt<1>("h1")) @[FFTTwiddle.scala 50:45]
    node _io_wR_T_2 = tail(_io_wR_T_1, 1) @[FFTTwiddle.scala 50:45]
    node _io_wR_T_3 = mux(chg_sign_flag_r, _io_wR_T_2, twi_cos_tb1_p10[_lut_w_r_T_1]) @[FFTTwiddle.scala 50:17]
    io.wR <= _io_wR_T_3 @[FFTTwiddle.scala 50:11]
    node _io_wI_T = not(twi_sin_tb1_p10[idx_i]) @[FFTTwiddle.scala 51:36]
    node _io_wI_T_1 = add(_io_wI_T, UInt<1>("h1")) @[FFTTwiddle.scala 51:45]
    node _io_wI_T_2 = tail(_io_wI_T_1, 1) @[FFTTwiddle.scala 51:45]
    node _io_wI_T_3 = mux(chg_sign_flag_i, _io_wI_T_2, twi_sin_tb1_p10[idx_i]) @[FFTTwiddle.scala 51:17]
    io.wI <= _io_wI_T_3 @[FFTTwiddle.scala 51:11]

  module FFTMultiply :
    output io : { flip a : UInt<18>, flip b : UInt<18>, flip tc : UInt<1>, product : UInt<36>}

    node _temp_a_T = bits(io.a, 17, 17) @[FFTMultiply.scala 14:26]
    node _temp_a_T_1 = not(io.a) @[FFTMultiply.scala 14:51]
    node _temp_a_T_2 = add(_temp_a_T_1, UInt<1>("h1")) @[FFTMultiply.scala 14:57]
    node _temp_a_T_3 = tail(_temp_a_T_2, 1) @[FFTMultiply.scala 14:57]
    node temp_a = mux(_temp_a_T, _temp_a_T_3, io.a) @[FFTMultiply.scala 14:21]
    node _temp_b_T = bits(io.b, 17, 17) @[FFTMultiply.scala 15:26]
    node _temp_b_T_1 = not(io.b) @[FFTMultiply.scala 15:51]
    node _temp_b_T_2 = add(_temp_b_T_1, UInt<1>("h1")) @[FFTMultiply.scala 15:57]
    node _temp_b_T_3 = tail(_temp_b_T_2, 1) @[FFTMultiply.scala 15:57]
    node temp_b = mux(_temp_b_T, _temp_b_T_3, io.b) @[FFTMultiply.scala 15:21]
    node long_temp1 = mul(temp_a, temp_b) @[FFTMultiply.scala 17:29]
    node _long_temp2_T = sub(long_temp1, UInt<1>("h1")) @[FFTMultiply.scala 18:35]
    node _long_temp2_T_1 = tail(_long_temp2_T, 1) @[FFTMultiply.scala 18:35]
    node long_temp2 = not(_long_temp2_T_1) @[FFTMultiply.scala 18:22]
    node _io_product_T = xor(io.a, io.a) @[FFTMultiply.scala 20:31]
    node _io_product_T_1 = xorr(_io_product_T) @[FFTMultiply.scala 20:39]
    node _io_product_T_2 = neq(_io_product_T_1, UInt<1>("h0")) @[FFTMultiply.scala 20:44]
    node _io_product_T_3 = xor(io.b, io.b) @[FFTMultiply.scala 20:67]
    node _io_product_T_4 = xorr(_io_product_T_3) @[FFTMultiply.scala 20:75]
    node _io_product_T_5 = neq(_io_product_T_4, UInt<1>("h0")) @[FFTMultiply.scala 20:80]
    node _io_product_T_6 = or(_io_product_T_2, _io_product_T_5) @[FFTMultiply.scala 20:57]
    node _io_product_T_7 = xor(io.tc, io.tc) @[FFTMultiply.scala 20:104]
    node _io_product_T_8 = xorr(_io_product_T_7) @[FFTMultiply.scala 20:113]
    node _io_product_T_9 = neq(_io_product_T_8, UInt<1>("h0")) @[FFTMultiply.scala 20:118]
    node _io_product_T_10 = or(_io_product_T_6, _io_product_T_9) @[FFTMultiply.scala 20:93]
    node _io_product_T_11 = mux(UInt<1>("h1"), UInt<36>("hfffffffff"), UInt<36>("h0")) @[Bitwise.scala 77:12]
    node _io_product_T_12 = bits(io.a, 17, 17) @[FFTMultiply.scala 20:194]
    node _io_product_T_13 = bits(io.b, 17, 17) @[FFTMultiply.scala 20:223]
    node _io_product_T_14 = xor(_io_product_T_12, _io_product_T_13) @[FFTMultiply.scala 20:217]
    node _io_product_T_15 = orr(long_temp1) @[FFTMultiply.scala 20:262]
    node _io_product_T_16 = and(_io_product_T_14, _io_product_T_15) @[FFTMultiply.scala 20:247]
    node _io_product_T_17 = cat(UInt<1>("h1"), long_temp2) @[Cat.scala 33:92]
    node _io_product_T_18 = cat(UInt<1>("h0"), long_temp1) @[Cat.scala 33:92]
    node _io_product_T_19 = mux(_io_product_T_16, _io_product_T_17, _io_product_T_18) @[FFTMultiply.scala 20:187]
    node _io_product_T_20 = mul(io.a, io.b) @[FFTMultiply.scala 20:329]
    node _io_product_T_21 = mux(io.tc, _io_product_T_19, _io_product_T_20) @[FFTMultiply.scala 20:176]
    node _io_product_T_22 = mux(_io_product_T_10, _io_product_T_11, _io_product_T_21) @[FFTMultiply.scala 20:22]
    io.product <= _io_product_T_22 @[FFTMultiply.scala 20:16]

  module FFT3PipelineCalc :
    input clock : Clock
    input reset : Reset
    output io : { flip dataInSR : UInt, flip dataInSI : UInt, flip dataInTR : UInt, flip dataInTI : UInt, dataOutSR3c : UInt, dataOutSI3c : UInt, dataOutTR3c : UInt, dataOutTI3c : UInt, flip nk : UInt, flip rShiftSym : UInt<1>, flip isFFT : UInt<1>, flip procMode : UInt<1>, flip state1c : UInt<1>, flip state2c : UInt<1>}

    clock is invalid
    reset is invalid
    io is invalid
    node _dataInSRRnd_T = bits(io.dataInSR, 15, 15) @[FFT3PipelineCalc.scala 28:38]
    node _dataInSRRnd_T_1 = bits(io.dataInSR, 15, 1) @[FFT3PipelineCalc.scala 28:69]
    node _dataInSRRnd_T_2 = cat(_dataInSRRnd_T, _dataInSRRnd_T_1) @[Cat.scala 33:92]
    node _dataInSRRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInSRRnd_T_4 = bits(io.dataInSR, 0, 0) @[FFT3PipelineCalc.scala 28:138]
    node _dataInSRRnd_T_5 = cat(_dataInSRRnd_T_3, _dataInSRRnd_T_4) @[Cat.scala 33:92]
    node _dataInSRRnd_T_6 = add(_dataInSRRnd_T_2, _dataInSRRnd_T_5) @[FFT3PipelineCalc.scala 28:92]
    node dataInSRRnd = tail(_dataInSRRnd_T_6, 1) @[FFT3PipelineCalc.scala 28:92]
    node _dataInSIRnd_T = bits(io.dataInSI, 15, 15) @[FFT3PipelineCalc.scala 29:38]
    node _dataInSIRnd_T_1 = bits(io.dataInSI, 15, 1) @[FFT3PipelineCalc.scala 29:69]
    node _dataInSIRnd_T_2 = cat(_dataInSIRnd_T, _dataInSIRnd_T_1) @[Cat.scala 33:92]
    node _dataInSIRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInSIRnd_T_4 = bits(io.dataInSI, 0, 0) @[FFT3PipelineCalc.scala 29:138]
    node _dataInSIRnd_T_5 = cat(_dataInSIRnd_T_3, _dataInSIRnd_T_4) @[Cat.scala 33:92]
    node _dataInSIRnd_T_6 = add(_dataInSIRnd_T_2, _dataInSIRnd_T_5) @[FFT3PipelineCalc.scala 29:92]
    node dataInSIRnd = tail(_dataInSIRnd_T_6, 1) @[FFT3PipelineCalc.scala 29:92]
    node _dataInTRRnd_T = bits(io.dataInTR, 15, 15) @[FFT3PipelineCalc.scala 30:38]
    node _dataInTRRnd_T_1 = bits(io.dataInTR, 15, 1) @[FFT3PipelineCalc.scala 30:69]
    node _dataInTRRnd_T_2 = cat(_dataInTRRnd_T, _dataInTRRnd_T_1) @[Cat.scala 33:92]
    node _dataInTRRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInTRRnd_T_4 = bits(io.dataInTR, 0, 0) @[FFT3PipelineCalc.scala 30:138]
    node _dataInTRRnd_T_5 = cat(_dataInTRRnd_T_3, _dataInTRRnd_T_4) @[Cat.scala 33:92]
    node _dataInTRRnd_T_6 = add(_dataInTRRnd_T_2, _dataInTRRnd_T_5) @[FFT3PipelineCalc.scala 30:92]
    node dataInTRRnd = tail(_dataInTRRnd_T_6, 1) @[FFT3PipelineCalc.scala 30:92]
    node _dataInTIRnd_T = bits(io.dataInTI, 15, 15) @[FFT3PipelineCalc.scala 31:38]
    node _dataInTIRnd_T_1 = bits(io.dataInTI, 15, 1) @[FFT3PipelineCalc.scala 31:69]
    node _dataInTIRnd_T_2 = cat(_dataInTIRnd_T, _dataInTIRnd_T_1) @[Cat.scala 33:92]
    node _dataInTIRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInTIRnd_T_4 = bits(io.dataInTI, 0, 0) @[FFT3PipelineCalc.scala 31:138]
    node _dataInTIRnd_T_5 = cat(_dataInTIRnd_T_3, _dataInTIRnd_T_4) @[Cat.scala 33:92]
    node _dataInTIRnd_T_6 = add(_dataInTIRnd_T_2, _dataInTIRnd_T_5) @[FFT3PipelineCalc.scala 31:92]
    node dataInTIRnd = tail(_dataInTIRnd_T_6, 1) @[FFT3PipelineCalc.scala 31:92]
    node dataInSR1c = mux(io.rShiftSym, dataInSRRnd, io.dataInSR) @[FFT3PipelineCalc.scala 33:25]
    node dataInSI1c = mux(io.rShiftSym, dataInSIRnd, io.dataInSI) @[FFT3PipelineCalc.scala 34:25]
    node dataInTR1c = mux(io.rShiftSym, dataInTRRnd, io.dataInTR) @[FFT3PipelineCalc.scala 35:25]
    node dataInTI1c = mux(io.rShiftSym, dataInTIRnd, io.dataInTI) @[FFT3PipelineCalc.scala 36:25]
    reg nk1c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      nk1c <= io.nk @[Reg.scala 36:22]
    node twiLutCaseIdx1c = mux(io.isFFT, UInt<2>("h0"), UInt<2>("h1")) @[FFT3PipelineCalc.scala 42:30]
    inst fftTwiddle of FFTTwiddle @[FFT3PipelineCalc.scala 44:28]
    fftTwiddle.io.nk <= nk1c @[FFT3PipelineCalc.scala 45:22]
    fftTwiddle.io.twiLutCaseIndex <= twiLutCaseIdx1c @[FFT3PipelineCalc.scala 46:35]
    reg sR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      sR2c <= dataInSR1c @[Reg.scala 36:22]
    reg sI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      sI2c <= dataInSI1c @[Reg.scala 36:22]
    reg tR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      tR2c <= dataInTR1c @[Reg.scala 36:22]
    reg tI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      tI2c <= dataInTI1c @[Reg.scala 36:22]
    node _wR2c_T = mux(UInt<1>("h0"), UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 77:12]
    node _wR2c_T_1 = cat(fftTwiddle.io.wR, _wR2c_T) @[Cat.scala 33:92]
    reg wR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      wR2c <= _wR2c_T_1 @[Reg.scala 36:22]
    node _wI2c_T = mux(UInt<1>("h0"), UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 77:12]
    node _wI2c_T_1 = cat(fftTwiddle.io.wI, _wI2c_T) @[Cat.scala 33:92]
    reg wI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      wI2c <= _wI2c_T_1 @[Reg.scala 36:22]
    node _addTRI_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 57:34]
    node _addTRI_T_1 = bits(_addTRI_T, 0, 0) @[Bitwise.scala 77:15]
    node _addTRI_T_2 = mux(_addTRI_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _addTRI_T_3 = cat(_addTRI_T_2, tR2c) @[Cat.scala 33:92]
    node _addTRI_T_4 = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 57:79]
    node _addTRI_T_5 = bits(_addTRI_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _addTRI_T_6 = mux(_addTRI_T_5, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _addTRI_T_7 = cat(_addTRI_T_6, tI2c) @[Cat.scala 33:92]
    node _addTRI_T_8 = add(_addTRI_T_3, _addTRI_T_7) @[FFT3PipelineCalc.scala 57:61]
    node addTRI = tail(_addTRI_T_8, 1) @[FFT3PipelineCalc.scala 57:61]
    node _addWRI_T = bits(wR2c, 16, 16) @[FFT3PipelineCalc.scala 58:26]
    node _addWRI_T_1 = cat(_addWRI_T, wR2c) @[Cat.scala 33:92]
    node _addWRI_T_2 = bits(wI2c, 16, 16) @[FFT3PipelineCalc.scala 58:62]
    node _addWRI_T_3 = cat(_addWRI_T_2, wI2c) @[Cat.scala 33:92]
    node _addWRI_T_4 = add(_addWRI_T_1, _addWRI_T_3) @[FFT3PipelineCalc.scala 58:52]
    node addWRI = tail(_addWRI_T_4, 1) @[FFT3PipelineCalc.scala 58:52]
    inst fftMultiply of FFTMultiply @[FFT3PipelineCalc.scala 59:29]
    fftMultiply.io.a <= addTRI @[FFT3PipelineCalc.scala 60:22]
    fftMultiply.io.b <= addWRI @[FFT3PipelineCalc.scala 61:22]
    fftMultiply.io.tc <= UInt<1>("h1") @[FFT3PipelineCalc.scala 62:23]
    node _multRPre_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 65:51]
    node _multRPre_T_1 = bits(_multRPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _multRPre_T_2 = mux(_multRPre_T_1, UInt<17>("h1ffff"), UInt<17>("h0")) @[Bitwise.scala 77:12]
    node _multRPre_T_3 = cat(_multRPre_T_2, tR2c) @[Cat.scala 33:92]
    node _multRPre_T_4 = bits(wR2c, 16, 16) @[FFT3PipelineCalc.scala 65:111]
    node _multRPre_T_5 = bits(_multRPre_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _multRPre_T_6 = mux(_multRPre_T_5, UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
    node _multRPre_T_7 = cat(_multRPre_T_6, wR2c) @[Cat.scala 33:92]
    node multRPre = mul(_multRPre_T_3, _multRPre_T_7) @[FFT3PipelineCalc.scala 65:78]
    node multR = bits(multRPre, 32, 0) @[FFT3PipelineCalc.scala 66:25]
    node _multIPre_T = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 68:51]
    node _multIPre_T_1 = bits(_multIPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _multIPre_T_2 = mux(_multIPre_T_1, UInt<17>("h1ffff"), UInt<17>("h0")) @[Bitwise.scala 77:12]
    node _multIPre_T_3 = cat(_multIPre_T_2, tI2c) @[Cat.scala 33:92]
    node _multIPre_T_4 = bits(wI2c, 16, 16) @[FFT3PipelineCalc.scala 68:111]
    node _multIPre_T_5 = bits(_multIPre_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _multIPre_T_6 = mux(_multIPre_T_5, UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
    node _multIPre_T_7 = cat(_multIPre_T_6, wI2c) @[Cat.scala 33:92]
    node multIPre = mul(_multIPre_T_3, _multIPre_T_7) @[FFT3PipelineCalc.scala 68:78]
    node multI = bits(multIPre, 32, 0) @[FFT3PipelineCalc.scala 69:25]
    node _qR2cKernel_T = bits(multR, 32, 32) @[FFT3PipelineCalc.scala 71:31]
    node _qR2cKernel_T_1 = bits(multR, 30, 15) @[FFT3PipelineCalc.scala 71:62]
    node _qR2cKernel_T_2 = cat(_qR2cKernel_T, _qR2cKernel_T_1) @[Cat.scala 33:92]
    node _qR2cKernel_T_3 = bits(multI, 32, 32) @[FFT3PipelineCalc.scala 71:119]
    node _qR2cKernel_T_4 = bits(multI, 30, 15) @[FFT3PipelineCalc.scala 71:150]
    node _qR2cKernel_T_5 = cat(_qR2cKernel_T_3, _qR2cKernel_T_4) @[Cat.scala 33:92]
    node _qR2cKernel_T_6 = sub(_qR2cKernel_T_2, _qR2cKernel_T_5) @[FFT3PipelineCalc.scala 71:108]
    node qR2cKernel = tail(_qR2cKernel_T_6, 1) @[FFT3PipelineCalc.scala 71:108]
    node _qI2cKernel_T = bits(fftMultiply.io.product, 35, 35) @[FFT3PipelineCalc.scala 72:31]
    node _qI2cKernel_T_1 = bits(fftMultiply.io.product, 30, 15) @[FFT3PipelineCalc.scala 72:66]
    node _qI2cKernel_T_2 = cat(_qI2cKernel_T, _qI2cKernel_T_1) @[Cat.scala 33:92]
    node _qI2cKernel_T_3 = bits(multR, 32, 32) @[FFT3PipelineCalc.scala 72:123]
    node _qI2cKernel_T_4 = bits(multR, 30, 15) @[FFT3PipelineCalc.scala 72:154]
    node _qI2cKernel_T_5 = cat(_qI2cKernel_T_3, _qI2cKernel_T_4) @[Cat.scala 33:92]
    node _qI2cKernel_T_6 = sub(_qI2cKernel_T_2, _qI2cKernel_T_5) @[FFT3PipelineCalc.scala 72:112]
    node _qI2cKernel_T_7 = tail(_qI2cKernel_T_6, 1) @[FFT3PipelineCalc.scala 72:112]
    node _qI2cKernel_T_8 = bits(multI, 32, 32) @[FFT3PipelineCalc.scala 72:211]
    node _qI2cKernel_T_9 = bits(multI, 30, 15) @[FFT3PipelineCalc.scala 72:242]
    node _qI2cKernel_T_10 = cat(_qI2cKernel_T_8, _qI2cKernel_T_9) @[Cat.scala 33:92]
    node _qI2cKernel_T_11 = sub(_qI2cKernel_T_7, _qI2cKernel_T_10) @[FFT3PipelineCalc.scala 72:200]
    node qI2cKernel = tail(_qI2cKernel_T_11, 1) @[FFT3PipelineCalc.scala 72:200]
    node _qR2cProc_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 74:28]
    node qR2cProc = cat(_qR2cProc_T, tR2c) @[Cat.scala 33:92]
    node _qI2cProc_T = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 75:29]
    node _qI2cProc_T_1 = cat(_qI2cProc_T, tI2c) @[Cat.scala 33:92]
    node _qI2cProc_T_2 = not(_qI2cProc_T_1) @[FFT3PipelineCalc.scala 75:20]
    node _qI2cProc_T_3 = add(_qI2cProc_T_2, UInt<1>("h1")) @[FFT3PipelineCalc.scala 75:55]
    node qI2cProc = tail(_qI2cProc_T_3, 1) @[FFT3PipelineCalc.scala 75:55]
    node qR2c = mux(io.procMode, qR2cProc, qR2cKernel) @[FFT3PipelineCalc.scala 77:19]
    node qI2c = mux(io.procMode, qI2cProc, qI2cKernel) @[FFT3PipelineCalc.scala 78:19]
    reg sR3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      sR3c <= sR2c @[Reg.scala 36:22]
    reg sI3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      sI3c <= sI2c @[Reg.scala 36:22]
    reg qR3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      qR3c <= qR2c @[Reg.scala 36:22]
    reg qI3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      qI3c <= qI2c @[Reg.scala 36:22]
    node _xR3cPre_T = bits(sR3c, 15, 15) @[FFT3PipelineCalc.scala 86:35]
    node _xR3cPre_T_1 = bits(_xR3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _xR3cPre_T_2 = mux(_xR3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _xR3cPre_T_3 = cat(_xR3cPre_T_2, sR3c) @[Cat.scala 33:92]
    node _xR3cPre_T_4 = bits(qR3c, 16, 16) @[FFT3PipelineCalc.scala 86:72]
    node _xR3cPre_T_5 = cat(_xR3cPre_T_4, qR3c) @[Cat.scala 33:92]
    node _xR3cPre_T_6 = add(_xR3cPre_T_3, _xR3cPre_T_5) @[FFT3PipelineCalc.scala 86:62]
    node xR3cPre = tail(_xR3cPre_T_6, 1) @[FFT3PipelineCalc.scala 86:62]
    node _xI3cPre_T = bits(sI3c, 15, 15) @[FFT3PipelineCalc.scala 87:35]
    node _xI3cPre_T_1 = bits(_xI3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _xI3cPre_T_2 = mux(_xI3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _xI3cPre_T_3 = cat(_xI3cPre_T_2, sI3c) @[Cat.scala 33:92]
    node _xI3cPre_T_4 = bits(qI3c, 16, 16) @[FFT3PipelineCalc.scala 87:72]
    node _xI3cPre_T_5 = cat(_xI3cPre_T_4, qI3c) @[Cat.scala 33:92]
    node _xI3cPre_T_6 = add(_xI3cPre_T_3, _xI3cPre_T_5) @[FFT3PipelineCalc.scala 87:62]
    node xI3cPre = tail(_xI3cPre_T_6, 1) @[FFT3PipelineCalc.scala 87:62]
    node _xR3c_T = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:28]
    node _xR3c_T_1 = bits(xR3cPre, 16, 16) @[FFT3PipelineCalc.scala 89:56]
    node _xR3c_T_2 = xor(_xR3c_T, _xR3c_T_1) @[FFT3PipelineCalc.scala 89:47]
    node _xR3c_T_3 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:88]
    node _xR3c_T_4 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:139]
    node _xR3c_T_5 = bits(_xR3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _xR3c_T_6 = mux(_xR3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xR3c_T_7 = not(_xR3c_T_6) @[FFT3PipelineCalc.scala 89:108]
    node _xR3c_T_8 = cat(_xR3c_T_3, _xR3c_T_7) @[Cat.scala 33:92]
    node _xR3c_T_9 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:173]
    node _xR3c_T_10 = bits(xR3cPre, 15, 15) @[FFT3PipelineCalc.scala 89:201]
    node _xR3c_T_11 = xor(_xR3c_T_9, _xR3c_T_10) @[FFT3PipelineCalc.scala 89:192]
    node _xR3c_T_12 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:233]
    node _xR3c_T_13 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:284]
    node _xR3c_T_14 = bits(_xR3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _xR3c_T_15 = mux(_xR3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xR3c_T_16 = not(_xR3c_T_15) @[FFT3PipelineCalc.scala 89:253]
    node _xR3c_T_17 = cat(_xR3c_T_12, _xR3c_T_16) @[Cat.scala 33:92]
    node _xR3c_T_18 = bits(xR3cPre, 15, 0) @[FFT3PipelineCalc.scala 89:313]
    node _xR3c_T_19 = mux(_xR3c_T_11, _xR3c_T_17, _xR3c_T_18) @[FFT3PipelineCalc.scala 89:164]
    node xR3c = mux(_xR3c_T_2, _xR3c_T_8, _xR3c_T_19) @[FFT3PipelineCalc.scala 89:19]
    node _xI3c_T = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:28]
    node _xI3c_T_1 = bits(xI3cPre, 16, 16) @[FFT3PipelineCalc.scala 90:56]
    node _xI3c_T_2 = xor(_xI3c_T, _xI3c_T_1) @[FFT3PipelineCalc.scala 90:47]
    node _xI3c_T_3 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:88]
    node _xI3c_T_4 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:139]
    node _xI3c_T_5 = bits(_xI3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _xI3c_T_6 = mux(_xI3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xI3c_T_7 = not(_xI3c_T_6) @[FFT3PipelineCalc.scala 90:108]
    node _xI3c_T_8 = cat(_xI3c_T_3, _xI3c_T_7) @[Cat.scala 33:92]
    node _xI3c_T_9 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:173]
    node _xI3c_T_10 = bits(xI3cPre, 15, 15) @[FFT3PipelineCalc.scala 90:201]
    node _xI3c_T_11 = xor(_xI3c_T_9, _xI3c_T_10) @[FFT3PipelineCalc.scala 90:192]
    node _xI3c_T_12 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:233]
    node _xI3c_T_13 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:284]
    node _xI3c_T_14 = bits(_xI3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _xI3c_T_15 = mux(_xI3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xI3c_T_16 = not(_xI3c_T_15) @[FFT3PipelineCalc.scala 90:253]
    node _xI3c_T_17 = cat(_xI3c_T_12, _xI3c_T_16) @[Cat.scala 33:92]
    node _xI3c_T_18 = bits(xI3cPre, 15, 0) @[FFT3PipelineCalc.scala 90:313]
    node _xI3c_T_19 = mux(_xI3c_T_11, _xI3c_T_17, _xI3c_T_18) @[FFT3PipelineCalc.scala 90:164]
    node xI3c = mux(_xI3c_T_2, _xI3c_T_8, _xI3c_T_19) @[FFT3PipelineCalc.scala 90:19]
    io.dataOutSR3c <= xR3c @[FFT3PipelineCalc.scala 92:20]
    io.dataOutSI3c <= xI3c @[FFT3PipelineCalc.scala 93:20]
    node _yR3cPre_T = bits(sR3c, 15, 15) @[FFT3PipelineCalc.scala 95:35]
    node _yR3cPre_T_1 = bits(_yR3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _yR3cPre_T_2 = mux(_yR3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _yR3cPre_T_3 = cat(_yR3cPre_T_2, sR3c) @[Cat.scala 33:92]
    node _yR3cPre_T_4 = bits(qR3c, 16, 16) @[FFT3PipelineCalc.scala 95:72]
    node _yR3cPre_T_5 = cat(_yR3cPre_T_4, qR3c) @[Cat.scala 33:92]
    node _yR3cPre_T_6 = sub(_yR3cPre_T_3, _yR3cPre_T_5) @[FFT3PipelineCalc.scala 95:62]
    node yR3cPre = tail(_yR3cPre_T_6, 1) @[FFT3PipelineCalc.scala 95:62]
    node _yI3cPre_T = bits(sI3c, 15, 15) @[FFT3PipelineCalc.scala 96:35]
    node _yI3cPre_T_1 = bits(_yI3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _yI3cPre_T_2 = mux(_yI3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _yI3cPre_T_3 = cat(_yI3cPre_T_2, sI3c) @[Cat.scala 33:92]
    node _yI3cPre_T_4 = bits(qI3c, 16, 16) @[FFT3PipelineCalc.scala 96:72]
    node _yI3cPre_T_5 = cat(_yI3cPre_T_4, qI3c) @[Cat.scala 33:92]
    node _yI3cPre_T_6 = sub(_yI3cPre_T_3, _yI3cPre_T_5) @[FFT3PipelineCalc.scala 96:62]
    node yI3cPre = tail(_yI3cPre_T_6, 1) @[FFT3PipelineCalc.scala 96:62]
    node _yR3c_T = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:28]
    node _yR3c_T_1 = bits(yR3cPre, 16, 16) @[FFT3PipelineCalc.scala 98:56]
    node _yR3c_T_2 = xor(_yR3c_T, _yR3c_T_1) @[FFT3PipelineCalc.scala 98:47]
    node _yR3c_T_3 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:88]
    node _yR3c_T_4 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:139]
    node _yR3c_T_5 = bits(_yR3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _yR3c_T_6 = mux(_yR3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yR3c_T_7 = not(_yR3c_T_6) @[FFT3PipelineCalc.scala 98:108]
    node _yR3c_T_8 = cat(_yR3c_T_3, _yR3c_T_7) @[Cat.scala 33:92]
    node _yR3c_T_9 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:173]
    node _yR3c_T_10 = bits(yR3cPre, 15, 15) @[FFT3PipelineCalc.scala 98:201]
    node _yR3c_T_11 = xor(_yR3c_T_9, _yR3c_T_10) @[FFT3PipelineCalc.scala 98:192]
    node _yR3c_T_12 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:233]
    node _yR3c_T_13 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:284]
    node _yR3c_T_14 = bits(_yR3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _yR3c_T_15 = mux(_yR3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yR3c_T_16 = not(_yR3c_T_15) @[FFT3PipelineCalc.scala 98:253]
    node _yR3c_T_17 = cat(_yR3c_T_12, _yR3c_T_16) @[Cat.scala 33:92]
    node _yR3c_T_18 = bits(yR3cPre, 15, 0) @[FFT3PipelineCalc.scala 98:313]
    node _yR3c_T_19 = mux(_yR3c_T_11, _yR3c_T_17, _yR3c_T_18) @[FFT3PipelineCalc.scala 98:164]
    node yR3c = mux(_yR3c_T_2, _yR3c_T_8, _yR3c_T_19) @[FFT3PipelineCalc.scala 98:19]
    node _yI3c_T = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:28]
    node _yI3c_T_1 = bits(yI3cPre, 16, 16) @[FFT3PipelineCalc.scala 99:56]
    node _yI3c_T_2 = xor(_yI3c_T, _yI3c_T_1) @[FFT3PipelineCalc.scala 99:47]
    node _yI3c_T_3 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:88]
    node _yI3c_T_4 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:139]
    node _yI3c_T_5 = bits(_yI3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _yI3c_T_6 = mux(_yI3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yI3c_T_7 = not(_yI3c_T_6) @[FFT3PipelineCalc.scala 99:108]
    node _yI3c_T_8 = cat(_yI3c_T_3, _yI3c_T_7) @[Cat.scala 33:92]
    node _yI3c_T_9 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:173]
    node _yI3c_T_10 = bits(yI3cPre, 15, 15) @[FFT3PipelineCalc.scala 99:201]
    node _yI3c_T_11 = xor(_yI3c_T_9, _yI3c_T_10) @[FFT3PipelineCalc.scala 99:192]
    node _yI3c_T_12 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:233]
    node _yI3c_T_13 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:284]
    node _yI3c_T_14 = bits(_yI3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _yI3c_T_15 = mux(_yI3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yI3c_T_16 = not(_yI3c_T_15) @[FFT3PipelineCalc.scala 99:253]
    node _yI3c_T_17 = cat(_yI3c_T_12, _yI3c_T_16) @[Cat.scala 33:92]
    node _yI3c_T_18 = bits(yI3cPre, 15, 0) @[FFT3PipelineCalc.scala 99:313]
    node _yI3c_T_19 = mux(_yI3c_T_11, _yI3c_T_17, _yI3c_T_18) @[FFT3PipelineCalc.scala 99:164]
    node yI3c = mux(_yI3c_T_2, _yI3c_T_8, _yI3c_T_19) @[FFT3PipelineCalc.scala 99:19]
    io.dataOutTR3c <= yR3c @[FFT3PipelineCalc.scala 101:20]
    io.dataOutTI3c <= yI3c @[FFT3PipelineCalc.scala 102:20]

  module FFTTwiddle_1 :
    output io : { flip nk : UInt, flip twiLutCaseIndex : UInt, wR : UInt, wI : UInt}

    wire twi_cos_tb1_p10 : UInt<12>[128] @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[0] <= UInt<12>("h400") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[1] <= UInt<12>("h400") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[2] <= UInt<12>("h3ff") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[3] <= UInt<12>("h3fd") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[4] <= UInt<12>("h3fb") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[5] <= UInt<12>("h3f8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[6] <= UInt<12>("h3f5") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[7] <= UInt<12>("h3f1") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[8] <= UInt<12>("h3ec") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[9] <= UInt<12>("h3e7") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[10] <= UInt<12>("h3e1") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[11] <= UInt<12>("h3db") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[12] <= UInt<12>("h3d4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[13] <= UInt<12>("h3cc") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[14] <= UInt<12>("h3c4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[15] <= UInt<12>("h3bb") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[16] <= UInt<12>("h3b2") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[17] <= UInt<12>("h3a8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[18] <= UInt<12>("h39e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[19] <= UInt<12>("h393") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[20] <= UInt<12>("h387") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[21] <= UInt<12>("h37b") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[22] <= UInt<12>("h36e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[23] <= UInt<12>("h361") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[24] <= UInt<12>("h353") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[25] <= UInt<12>("h345") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[26] <= UInt<12>("h336") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[27] <= UInt<12>("h327") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[28] <= UInt<12>("h318") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[29] <= UInt<12>("h307") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[30] <= UInt<12>("h2f7") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[31] <= UInt<12>("h2e6") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[32] <= UInt<12>("h2d4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[33] <= UInt<12>("h2c2") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[34] <= UInt<12>("h2b0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[35] <= UInt<12>("h29d") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[36] <= UInt<12>("h28a") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[37] <= UInt<12>("h276") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[38] <= UInt<12>("h262") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[39] <= UInt<12>("h24e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[40] <= UInt<12>("h239") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[41] <= UInt<12>("h224") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[42] <= UInt<12>("h20e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[43] <= UInt<12>("h1f9") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[44] <= UInt<12>("h1e3") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[45] <= UInt<12>("h1cc") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[46] <= UInt<12>("h1b6") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[47] <= UInt<12>("h19f") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[48] <= UInt<12>("h188") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[49] <= UInt<12>("h171") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[50] <= UInt<12>("h159") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[51] <= UInt<12>("h141") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[52] <= UInt<12>("h129") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[53] <= UInt<12>("h111") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[54] <= UInt<12>("hf9") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[55] <= UInt<12>("he0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[56] <= UInt<12>("hc8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[57] <= UInt<12>("haf") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[58] <= UInt<12>("h96") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[59] <= UInt<12>("h7d") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[60] <= UInt<12>("h64") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[61] <= UInt<12>("h4b") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[62] <= UInt<12>("h32") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[63] <= UInt<12>("h19") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[64] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[65] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[66] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[67] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[68] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[69] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[70] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[71] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[72] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[73] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[74] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[75] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[76] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[77] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[78] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[79] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[80] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[81] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[82] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[83] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[84] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[85] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[86] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[87] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[88] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[89] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[90] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[91] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[92] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[93] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[94] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[95] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[96] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[97] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[98] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[99] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[100] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[101] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[102] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[103] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[104] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[105] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[106] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[107] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[108] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[109] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[110] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[111] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[112] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[113] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[114] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[115] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[116] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[117] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[118] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[119] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[120] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[121] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[122] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[123] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[124] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[125] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[126] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[127] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    wire twi_sin_tb1_p10 : UInt<12>[128] @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[0] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[1] <= UInt<12>("h19") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[2] <= UInt<12>("h32") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[3] <= UInt<12>("h4b") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[4] <= UInt<12>("h64") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[5] <= UInt<12>("h7d") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[6] <= UInt<12>("h96") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[7] <= UInt<12>("haf") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[8] <= UInt<12>("hc8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[9] <= UInt<12>("he0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[10] <= UInt<12>("hf9") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[11] <= UInt<12>("h111") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[12] <= UInt<12>("h129") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[13] <= UInt<12>("h141") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[14] <= UInt<12>("h159") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[15] <= UInt<12>("h171") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[16] <= UInt<12>("h188") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[17] <= UInt<12>("h19f") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[18] <= UInt<12>("h1b6") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[19] <= UInt<12>("h1cc") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[20] <= UInt<12>("h1e3") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[21] <= UInt<12>("h1f9") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[22] <= UInt<12>("h20e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[23] <= UInt<12>("h224") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[24] <= UInt<12>("h239") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[25] <= UInt<12>("h24e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[26] <= UInt<12>("h262") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[27] <= UInt<12>("h276") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[28] <= UInt<12>("h28a") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[29] <= UInt<12>("h29d") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[30] <= UInt<12>("h2b0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[31] <= UInt<12>("h2c2") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[32] <= UInt<12>("h2d4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[33] <= UInt<12>("h2e6") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[34] <= UInt<12>("h2f7") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[35] <= UInt<12>("h307") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[36] <= UInt<12>("h318") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[37] <= UInt<12>("h327") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[38] <= UInt<12>("h336") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[39] <= UInt<12>("h345") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[40] <= UInt<12>("h353") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[41] <= UInt<12>("h361") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[42] <= UInt<12>("h36e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[43] <= UInt<12>("h37b") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[44] <= UInt<12>("h387") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[45] <= UInt<12>("h393") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[46] <= UInt<12>("h39e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[47] <= UInt<12>("h3a8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[48] <= UInt<12>("h3b2") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[49] <= UInt<12>("h3bb") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[50] <= UInt<12>("h3c4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[51] <= UInt<12>("h3cc") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[52] <= UInt<12>("h3d4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[53] <= UInt<12>("h3db") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[54] <= UInt<12>("h3e1") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[55] <= UInt<12>("h3e7") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[56] <= UInt<12>("h3ec") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[57] <= UInt<12>("h3f1") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[58] <= UInt<12>("h3f5") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[59] <= UInt<12>("h3f8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[60] <= UInt<12>("h3fb") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[61] <= UInt<12>("h3fd") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[62] <= UInt<12>("h3ff") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[63] <= UInt<12>("h400") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[64] <= UInt<12>("h400") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[65] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[66] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[67] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[68] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[69] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[70] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[71] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[72] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[73] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[74] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[75] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[76] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[77] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[78] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[79] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[80] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[81] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[82] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[83] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[84] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[85] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[86] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[87] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[88] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[89] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[90] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[91] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[92] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[93] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[94] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[95] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[96] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[97] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[98] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[99] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[100] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[101] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[102] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[103] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[104] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[105] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[106] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[107] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[108] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[109] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[110] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[111] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[112] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[113] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[114] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[115] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[116] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[117] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[118] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[119] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[120] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[121] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[122] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[123] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[124] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[125] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[126] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[127] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    node _idx_r_T = bits(io.nk, 6, 6) @[FFTTwiddle.scala 35:27]
    node _idx_r_T_1 = bits(io.nk, 5, 0) @[FFTTwiddle.scala 35:50]
    node _idx_r_T_2 = orr(_idx_r_T_1) @[FFTTwiddle.scala 35:73]
    node _idx_r_T_3 = and(_idx_r_T, _idx_r_T_2) @[FFTTwiddle.scala 35:43]
    node _idx_r_T_4 = not(io.nk) @[FFTTwiddle.scala 35:80]
    node _idx_r_T_5 = add(_idx_r_T_4, UInt<1>("h1")) @[FFTTwiddle.scala 35:87]
    node _idx_r_T_6 = tail(_idx_r_T_5, 1) @[FFTTwiddle.scala 35:87]
    node idx_r = mux(_idx_r_T_3, _idx_r_T_6, io.nk) @[FFTTwiddle.scala 35:20]
    node _lut_chg_sign_flag_r_T = bits(io.nk, 6, 6) @[FFTTwiddle.scala 37:36]
    node _lut_chg_sign_flag_r_T_1 = bits(io.nk, 5, 0) @[FFTTwiddle.scala 37:60]
    node _lut_chg_sign_flag_r_T_2 = orr(_lut_chg_sign_flag_r_T_1) @[FFTTwiddle.scala 37:83]
    node lut_chg_sign_flag_r = and(_lut_chg_sign_flag_r_T, _lut_chg_sign_flag_r_T_2) @[FFTTwiddle.scala 37:52]
    node _lut_w_r_T = or(idx_r, UInt<7>("h0"))
    node _lut_w_r_T_1 = bits(_lut_w_r_T, 6, 0)
    node idx_i = bits(idx_r, 6, 0) @[FFTTwiddle.scala 41:22]
    node _chg_sign_flag_r_T = eq(io.twiLutCaseIndex, UInt<2>("h2")) @[FFTTwiddle.scala 47:51]
    node _chg_sign_flag_r_T_1 = eq(lut_chg_sign_flag_r, UInt<1>("h0")) @[FFTTwiddle.scala 47:61]
    node chg_sign_flag_r = mux(_chg_sign_flag_r_T, _chg_sign_flag_r_T_1, lut_chg_sign_flag_r) @[FFTTwiddle.scala 47:30]
    node _chg_sign_flag_i_T = eq(io.twiLutCaseIndex, UInt<1>("h1")) @[FFTTwiddle.scala 48:51]
    node _chg_sign_flag_i_T_1 = eq(UInt<1>("h1"), UInt<1>("h0")) @[FFTTwiddle.scala 48:61]
    node chg_sign_flag_i = mux(_chg_sign_flag_i_T, _chg_sign_flag_i_T_1, UInt<1>("h1")) @[FFTTwiddle.scala 48:30]
    node _io_wR_T = not(twi_cos_tb1_p10[_lut_w_r_T_1]) @[FFTTwiddle.scala 50:36]
    node _io_wR_T_1 = add(_io_wR_T, UInt<1>("h1")) @[FFTTwiddle.scala 50:45]
    node _io_wR_T_2 = tail(_io_wR_T_1, 1) @[FFTTwiddle.scala 50:45]
    node _io_wR_T_3 = mux(chg_sign_flag_r, _io_wR_T_2, twi_cos_tb1_p10[_lut_w_r_T_1]) @[FFTTwiddle.scala 50:17]
    io.wR <= _io_wR_T_3 @[FFTTwiddle.scala 50:11]
    node _io_wI_T = not(twi_sin_tb1_p10[idx_i]) @[FFTTwiddle.scala 51:36]
    node _io_wI_T_1 = add(_io_wI_T, UInt<1>("h1")) @[FFTTwiddle.scala 51:45]
    node _io_wI_T_2 = tail(_io_wI_T_1, 1) @[FFTTwiddle.scala 51:45]
    node _io_wI_T_3 = mux(chg_sign_flag_i, _io_wI_T_2, twi_sin_tb1_p10[idx_i]) @[FFTTwiddle.scala 51:17]
    io.wI <= _io_wI_T_3 @[FFTTwiddle.scala 51:11]

  module FFTMultiply_1 :
    output io : { flip a : UInt<18>, flip b : UInt<18>, flip tc : UInt<1>, product : UInt<36>}

    node _temp_a_T = bits(io.a, 17, 17) @[FFTMultiply.scala 14:26]
    node _temp_a_T_1 = not(io.a) @[FFTMultiply.scala 14:51]
    node _temp_a_T_2 = add(_temp_a_T_1, UInt<1>("h1")) @[FFTMultiply.scala 14:57]
    node _temp_a_T_3 = tail(_temp_a_T_2, 1) @[FFTMultiply.scala 14:57]
    node temp_a = mux(_temp_a_T, _temp_a_T_3, io.a) @[FFTMultiply.scala 14:21]
    node _temp_b_T = bits(io.b, 17, 17) @[FFTMultiply.scala 15:26]
    node _temp_b_T_1 = not(io.b) @[FFTMultiply.scala 15:51]
    node _temp_b_T_2 = add(_temp_b_T_1, UInt<1>("h1")) @[FFTMultiply.scala 15:57]
    node _temp_b_T_3 = tail(_temp_b_T_2, 1) @[FFTMultiply.scala 15:57]
    node temp_b = mux(_temp_b_T, _temp_b_T_3, io.b) @[FFTMultiply.scala 15:21]
    node long_temp1 = mul(temp_a, temp_b) @[FFTMultiply.scala 17:29]
    node _long_temp2_T = sub(long_temp1, UInt<1>("h1")) @[FFTMultiply.scala 18:35]
    node _long_temp2_T_1 = tail(_long_temp2_T, 1) @[FFTMultiply.scala 18:35]
    node long_temp2 = not(_long_temp2_T_1) @[FFTMultiply.scala 18:22]
    node _io_product_T = xor(io.a, io.a) @[FFTMultiply.scala 20:31]
    node _io_product_T_1 = xorr(_io_product_T) @[FFTMultiply.scala 20:39]
    node _io_product_T_2 = neq(_io_product_T_1, UInt<1>("h0")) @[FFTMultiply.scala 20:44]
    node _io_product_T_3 = xor(io.b, io.b) @[FFTMultiply.scala 20:67]
    node _io_product_T_4 = xorr(_io_product_T_3) @[FFTMultiply.scala 20:75]
    node _io_product_T_5 = neq(_io_product_T_4, UInt<1>("h0")) @[FFTMultiply.scala 20:80]
    node _io_product_T_6 = or(_io_product_T_2, _io_product_T_5) @[FFTMultiply.scala 20:57]
    node _io_product_T_7 = xor(io.tc, io.tc) @[FFTMultiply.scala 20:104]
    node _io_product_T_8 = xorr(_io_product_T_7) @[FFTMultiply.scala 20:113]
    node _io_product_T_9 = neq(_io_product_T_8, UInt<1>("h0")) @[FFTMultiply.scala 20:118]
    node _io_product_T_10 = or(_io_product_T_6, _io_product_T_9) @[FFTMultiply.scala 20:93]
    node _io_product_T_11 = mux(UInt<1>("h1"), UInt<36>("hfffffffff"), UInt<36>("h0")) @[Bitwise.scala 77:12]
    node _io_product_T_12 = bits(io.a, 17, 17) @[FFTMultiply.scala 20:194]
    node _io_product_T_13 = bits(io.b, 17, 17) @[FFTMultiply.scala 20:223]
    node _io_product_T_14 = xor(_io_product_T_12, _io_product_T_13) @[FFTMultiply.scala 20:217]
    node _io_product_T_15 = orr(long_temp1) @[FFTMultiply.scala 20:262]
    node _io_product_T_16 = and(_io_product_T_14, _io_product_T_15) @[FFTMultiply.scala 20:247]
    node _io_product_T_17 = cat(UInt<1>("h1"), long_temp2) @[Cat.scala 33:92]
    node _io_product_T_18 = cat(UInt<1>("h0"), long_temp1) @[Cat.scala 33:92]
    node _io_product_T_19 = mux(_io_product_T_16, _io_product_T_17, _io_product_T_18) @[FFTMultiply.scala 20:187]
    node _io_product_T_20 = mul(io.a, io.b) @[FFTMultiply.scala 20:329]
    node _io_product_T_21 = mux(io.tc, _io_product_T_19, _io_product_T_20) @[FFTMultiply.scala 20:176]
    node _io_product_T_22 = mux(_io_product_T_10, _io_product_T_11, _io_product_T_21) @[FFTMultiply.scala 20:22]
    io.product <= _io_product_T_22 @[FFTMultiply.scala 20:16]

  module FFT3PipelineCalc_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip dataInSR : UInt, flip dataInSI : UInt, flip dataInTR : UInt, flip dataInTI : UInt, dataOutSR3c : UInt, dataOutSI3c : UInt, dataOutTR3c : UInt, dataOutTI3c : UInt, flip nk : UInt, flip rShiftSym : UInt<1>, flip isFFT : UInt<1>, flip procMode : UInt<1>, flip state1c : UInt<1>, flip state2c : UInt<1>}

    clock is invalid
    reset is invalid
    io is invalid
    node _dataInSRRnd_T = bits(io.dataInSR, 15, 15) @[FFT3PipelineCalc.scala 28:38]
    node _dataInSRRnd_T_1 = bits(io.dataInSR, 15, 1) @[FFT3PipelineCalc.scala 28:69]
    node _dataInSRRnd_T_2 = cat(_dataInSRRnd_T, _dataInSRRnd_T_1) @[Cat.scala 33:92]
    node _dataInSRRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInSRRnd_T_4 = bits(io.dataInSR, 0, 0) @[FFT3PipelineCalc.scala 28:138]
    node _dataInSRRnd_T_5 = cat(_dataInSRRnd_T_3, _dataInSRRnd_T_4) @[Cat.scala 33:92]
    node _dataInSRRnd_T_6 = add(_dataInSRRnd_T_2, _dataInSRRnd_T_5) @[FFT3PipelineCalc.scala 28:92]
    node dataInSRRnd = tail(_dataInSRRnd_T_6, 1) @[FFT3PipelineCalc.scala 28:92]
    node _dataInSIRnd_T = bits(io.dataInSI, 15, 15) @[FFT3PipelineCalc.scala 29:38]
    node _dataInSIRnd_T_1 = bits(io.dataInSI, 15, 1) @[FFT3PipelineCalc.scala 29:69]
    node _dataInSIRnd_T_2 = cat(_dataInSIRnd_T, _dataInSIRnd_T_1) @[Cat.scala 33:92]
    node _dataInSIRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInSIRnd_T_4 = bits(io.dataInSI, 0, 0) @[FFT3PipelineCalc.scala 29:138]
    node _dataInSIRnd_T_5 = cat(_dataInSIRnd_T_3, _dataInSIRnd_T_4) @[Cat.scala 33:92]
    node _dataInSIRnd_T_6 = add(_dataInSIRnd_T_2, _dataInSIRnd_T_5) @[FFT3PipelineCalc.scala 29:92]
    node dataInSIRnd = tail(_dataInSIRnd_T_6, 1) @[FFT3PipelineCalc.scala 29:92]
    node _dataInTRRnd_T = bits(io.dataInTR, 15, 15) @[FFT3PipelineCalc.scala 30:38]
    node _dataInTRRnd_T_1 = bits(io.dataInTR, 15, 1) @[FFT3PipelineCalc.scala 30:69]
    node _dataInTRRnd_T_2 = cat(_dataInTRRnd_T, _dataInTRRnd_T_1) @[Cat.scala 33:92]
    node _dataInTRRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInTRRnd_T_4 = bits(io.dataInTR, 0, 0) @[FFT3PipelineCalc.scala 30:138]
    node _dataInTRRnd_T_5 = cat(_dataInTRRnd_T_3, _dataInTRRnd_T_4) @[Cat.scala 33:92]
    node _dataInTRRnd_T_6 = add(_dataInTRRnd_T_2, _dataInTRRnd_T_5) @[FFT3PipelineCalc.scala 30:92]
    node dataInTRRnd = tail(_dataInTRRnd_T_6, 1) @[FFT3PipelineCalc.scala 30:92]
    node _dataInTIRnd_T = bits(io.dataInTI, 15, 15) @[FFT3PipelineCalc.scala 31:38]
    node _dataInTIRnd_T_1 = bits(io.dataInTI, 15, 1) @[FFT3PipelineCalc.scala 31:69]
    node _dataInTIRnd_T_2 = cat(_dataInTIRnd_T, _dataInTIRnd_T_1) @[Cat.scala 33:92]
    node _dataInTIRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInTIRnd_T_4 = bits(io.dataInTI, 0, 0) @[FFT3PipelineCalc.scala 31:138]
    node _dataInTIRnd_T_5 = cat(_dataInTIRnd_T_3, _dataInTIRnd_T_4) @[Cat.scala 33:92]
    node _dataInTIRnd_T_6 = add(_dataInTIRnd_T_2, _dataInTIRnd_T_5) @[FFT3PipelineCalc.scala 31:92]
    node dataInTIRnd = tail(_dataInTIRnd_T_6, 1) @[FFT3PipelineCalc.scala 31:92]
    node dataInSR1c = mux(io.rShiftSym, dataInSRRnd, io.dataInSR) @[FFT3PipelineCalc.scala 33:25]
    node dataInSI1c = mux(io.rShiftSym, dataInSIRnd, io.dataInSI) @[FFT3PipelineCalc.scala 34:25]
    node dataInTR1c = mux(io.rShiftSym, dataInTRRnd, io.dataInTR) @[FFT3PipelineCalc.scala 35:25]
    node dataInTI1c = mux(io.rShiftSym, dataInTIRnd, io.dataInTI) @[FFT3PipelineCalc.scala 36:25]
    reg nk1c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      nk1c <= io.nk @[Reg.scala 36:22]
    node twiLutCaseIdx1c = mux(io.isFFT, UInt<2>("h0"), UInt<2>("h1")) @[FFT3PipelineCalc.scala 42:30]
    inst fftTwiddle of FFTTwiddle_1 @[FFT3PipelineCalc.scala 44:28]
    fftTwiddle.io.nk <= nk1c @[FFT3PipelineCalc.scala 45:22]
    fftTwiddle.io.twiLutCaseIndex <= twiLutCaseIdx1c @[FFT3PipelineCalc.scala 46:35]
    reg sR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      sR2c <= dataInSR1c @[Reg.scala 36:22]
    reg sI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      sI2c <= dataInSI1c @[Reg.scala 36:22]
    reg tR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      tR2c <= dataInTR1c @[Reg.scala 36:22]
    reg tI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      tI2c <= dataInTI1c @[Reg.scala 36:22]
    node _wR2c_T = mux(UInt<1>("h0"), UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 77:12]
    node _wR2c_T_1 = cat(fftTwiddle.io.wR, _wR2c_T) @[Cat.scala 33:92]
    reg wR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      wR2c <= _wR2c_T_1 @[Reg.scala 36:22]
    node _wI2c_T = mux(UInt<1>("h0"), UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 77:12]
    node _wI2c_T_1 = cat(fftTwiddle.io.wI, _wI2c_T) @[Cat.scala 33:92]
    reg wI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      wI2c <= _wI2c_T_1 @[Reg.scala 36:22]
    node _addTRI_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 57:34]
    node _addTRI_T_1 = bits(_addTRI_T, 0, 0) @[Bitwise.scala 77:15]
    node _addTRI_T_2 = mux(_addTRI_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _addTRI_T_3 = cat(_addTRI_T_2, tR2c) @[Cat.scala 33:92]
    node _addTRI_T_4 = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 57:79]
    node _addTRI_T_5 = bits(_addTRI_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _addTRI_T_6 = mux(_addTRI_T_5, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _addTRI_T_7 = cat(_addTRI_T_6, tI2c) @[Cat.scala 33:92]
    node _addTRI_T_8 = add(_addTRI_T_3, _addTRI_T_7) @[FFT3PipelineCalc.scala 57:61]
    node addTRI = tail(_addTRI_T_8, 1) @[FFT3PipelineCalc.scala 57:61]
    node _addWRI_T = bits(wR2c, 16, 16) @[FFT3PipelineCalc.scala 58:26]
    node _addWRI_T_1 = cat(_addWRI_T, wR2c) @[Cat.scala 33:92]
    node _addWRI_T_2 = bits(wI2c, 16, 16) @[FFT3PipelineCalc.scala 58:62]
    node _addWRI_T_3 = cat(_addWRI_T_2, wI2c) @[Cat.scala 33:92]
    node _addWRI_T_4 = add(_addWRI_T_1, _addWRI_T_3) @[FFT3PipelineCalc.scala 58:52]
    node addWRI = tail(_addWRI_T_4, 1) @[FFT3PipelineCalc.scala 58:52]
    inst fftMultiply of FFTMultiply_1 @[FFT3PipelineCalc.scala 59:29]
    fftMultiply.io.a <= addTRI @[FFT3PipelineCalc.scala 60:22]
    fftMultiply.io.b <= addWRI @[FFT3PipelineCalc.scala 61:22]
    fftMultiply.io.tc <= UInt<1>("h1") @[FFT3PipelineCalc.scala 62:23]
    node _multRPre_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 65:51]
    node _multRPre_T_1 = bits(_multRPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _multRPre_T_2 = mux(_multRPre_T_1, UInt<17>("h1ffff"), UInt<17>("h0")) @[Bitwise.scala 77:12]
    node _multRPre_T_3 = cat(_multRPre_T_2, tR2c) @[Cat.scala 33:92]
    node _multRPre_T_4 = bits(wR2c, 16, 16) @[FFT3PipelineCalc.scala 65:111]
    node _multRPre_T_5 = bits(_multRPre_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _multRPre_T_6 = mux(_multRPre_T_5, UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
    node _multRPre_T_7 = cat(_multRPre_T_6, wR2c) @[Cat.scala 33:92]
    node multRPre = mul(_multRPre_T_3, _multRPre_T_7) @[FFT3PipelineCalc.scala 65:78]
    node multR = bits(multRPre, 32, 0) @[FFT3PipelineCalc.scala 66:25]
    node _multIPre_T = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 68:51]
    node _multIPre_T_1 = bits(_multIPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _multIPre_T_2 = mux(_multIPre_T_1, UInt<17>("h1ffff"), UInt<17>("h0")) @[Bitwise.scala 77:12]
    node _multIPre_T_3 = cat(_multIPre_T_2, tI2c) @[Cat.scala 33:92]
    node _multIPre_T_4 = bits(wI2c, 16, 16) @[FFT3PipelineCalc.scala 68:111]
    node _multIPre_T_5 = bits(_multIPre_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _multIPre_T_6 = mux(_multIPre_T_5, UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
    node _multIPre_T_7 = cat(_multIPre_T_6, wI2c) @[Cat.scala 33:92]
    node multIPre = mul(_multIPre_T_3, _multIPre_T_7) @[FFT3PipelineCalc.scala 68:78]
    node multI = bits(multIPre, 32, 0) @[FFT3PipelineCalc.scala 69:25]
    node _qR2cKernel_T = bits(multR, 32, 32) @[FFT3PipelineCalc.scala 71:31]
    node _qR2cKernel_T_1 = bits(multR, 30, 15) @[FFT3PipelineCalc.scala 71:62]
    node _qR2cKernel_T_2 = cat(_qR2cKernel_T, _qR2cKernel_T_1) @[Cat.scala 33:92]
    node _qR2cKernel_T_3 = bits(multI, 32, 32) @[FFT3PipelineCalc.scala 71:119]
    node _qR2cKernel_T_4 = bits(multI, 30, 15) @[FFT3PipelineCalc.scala 71:150]
    node _qR2cKernel_T_5 = cat(_qR2cKernel_T_3, _qR2cKernel_T_4) @[Cat.scala 33:92]
    node _qR2cKernel_T_6 = sub(_qR2cKernel_T_2, _qR2cKernel_T_5) @[FFT3PipelineCalc.scala 71:108]
    node qR2cKernel = tail(_qR2cKernel_T_6, 1) @[FFT3PipelineCalc.scala 71:108]
    node _qI2cKernel_T = bits(fftMultiply.io.product, 35, 35) @[FFT3PipelineCalc.scala 72:31]
    node _qI2cKernel_T_1 = bits(fftMultiply.io.product, 30, 15) @[FFT3PipelineCalc.scala 72:66]
    node _qI2cKernel_T_2 = cat(_qI2cKernel_T, _qI2cKernel_T_1) @[Cat.scala 33:92]
    node _qI2cKernel_T_3 = bits(multR, 32, 32) @[FFT3PipelineCalc.scala 72:123]
    node _qI2cKernel_T_4 = bits(multR, 30, 15) @[FFT3PipelineCalc.scala 72:154]
    node _qI2cKernel_T_5 = cat(_qI2cKernel_T_3, _qI2cKernel_T_4) @[Cat.scala 33:92]
    node _qI2cKernel_T_6 = sub(_qI2cKernel_T_2, _qI2cKernel_T_5) @[FFT3PipelineCalc.scala 72:112]
    node _qI2cKernel_T_7 = tail(_qI2cKernel_T_6, 1) @[FFT3PipelineCalc.scala 72:112]
    node _qI2cKernel_T_8 = bits(multI, 32, 32) @[FFT3PipelineCalc.scala 72:211]
    node _qI2cKernel_T_9 = bits(multI, 30, 15) @[FFT3PipelineCalc.scala 72:242]
    node _qI2cKernel_T_10 = cat(_qI2cKernel_T_8, _qI2cKernel_T_9) @[Cat.scala 33:92]
    node _qI2cKernel_T_11 = sub(_qI2cKernel_T_7, _qI2cKernel_T_10) @[FFT3PipelineCalc.scala 72:200]
    node qI2cKernel = tail(_qI2cKernel_T_11, 1) @[FFT3PipelineCalc.scala 72:200]
    node _qR2cProc_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 74:28]
    node qR2cProc = cat(_qR2cProc_T, tR2c) @[Cat.scala 33:92]
    node _qI2cProc_T = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 75:29]
    node _qI2cProc_T_1 = cat(_qI2cProc_T, tI2c) @[Cat.scala 33:92]
    node _qI2cProc_T_2 = not(_qI2cProc_T_1) @[FFT3PipelineCalc.scala 75:20]
    node _qI2cProc_T_3 = add(_qI2cProc_T_2, UInt<1>("h1")) @[FFT3PipelineCalc.scala 75:55]
    node qI2cProc = tail(_qI2cProc_T_3, 1) @[FFT3PipelineCalc.scala 75:55]
    node qR2c = mux(io.procMode, qR2cProc, qR2cKernel) @[FFT3PipelineCalc.scala 77:19]
    node qI2c = mux(io.procMode, qI2cProc, qI2cKernel) @[FFT3PipelineCalc.scala 78:19]
    reg sR3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      sR3c <= sR2c @[Reg.scala 36:22]
    reg sI3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      sI3c <= sI2c @[Reg.scala 36:22]
    reg qR3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      qR3c <= qR2c @[Reg.scala 36:22]
    reg qI3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      qI3c <= qI2c @[Reg.scala 36:22]
    node _xR3cPre_T = bits(sR3c, 15, 15) @[FFT3PipelineCalc.scala 86:35]
    node _xR3cPre_T_1 = bits(_xR3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _xR3cPre_T_2 = mux(_xR3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _xR3cPre_T_3 = cat(_xR3cPre_T_2, sR3c) @[Cat.scala 33:92]
    node _xR3cPre_T_4 = bits(qR3c, 16, 16) @[FFT3PipelineCalc.scala 86:72]
    node _xR3cPre_T_5 = cat(_xR3cPre_T_4, qR3c) @[Cat.scala 33:92]
    node _xR3cPre_T_6 = add(_xR3cPre_T_3, _xR3cPre_T_5) @[FFT3PipelineCalc.scala 86:62]
    node xR3cPre = tail(_xR3cPre_T_6, 1) @[FFT3PipelineCalc.scala 86:62]
    node _xI3cPre_T = bits(sI3c, 15, 15) @[FFT3PipelineCalc.scala 87:35]
    node _xI3cPre_T_1 = bits(_xI3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _xI3cPre_T_2 = mux(_xI3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _xI3cPre_T_3 = cat(_xI3cPre_T_2, sI3c) @[Cat.scala 33:92]
    node _xI3cPre_T_4 = bits(qI3c, 16, 16) @[FFT3PipelineCalc.scala 87:72]
    node _xI3cPre_T_5 = cat(_xI3cPre_T_4, qI3c) @[Cat.scala 33:92]
    node _xI3cPre_T_6 = add(_xI3cPre_T_3, _xI3cPre_T_5) @[FFT3PipelineCalc.scala 87:62]
    node xI3cPre = tail(_xI3cPre_T_6, 1) @[FFT3PipelineCalc.scala 87:62]
    node _xR3c_T = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:28]
    node _xR3c_T_1 = bits(xR3cPre, 16, 16) @[FFT3PipelineCalc.scala 89:56]
    node _xR3c_T_2 = xor(_xR3c_T, _xR3c_T_1) @[FFT3PipelineCalc.scala 89:47]
    node _xR3c_T_3 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:88]
    node _xR3c_T_4 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:139]
    node _xR3c_T_5 = bits(_xR3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _xR3c_T_6 = mux(_xR3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xR3c_T_7 = not(_xR3c_T_6) @[FFT3PipelineCalc.scala 89:108]
    node _xR3c_T_8 = cat(_xR3c_T_3, _xR3c_T_7) @[Cat.scala 33:92]
    node _xR3c_T_9 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:173]
    node _xR3c_T_10 = bits(xR3cPre, 15, 15) @[FFT3PipelineCalc.scala 89:201]
    node _xR3c_T_11 = xor(_xR3c_T_9, _xR3c_T_10) @[FFT3PipelineCalc.scala 89:192]
    node _xR3c_T_12 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:233]
    node _xR3c_T_13 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:284]
    node _xR3c_T_14 = bits(_xR3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _xR3c_T_15 = mux(_xR3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xR3c_T_16 = not(_xR3c_T_15) @[FFT3PipelineCalc.scala 89:253]
    node _xR3c_T_17 = cat(_xR3c_T_12, _xR3c_T_16) @[Cat.scala 33:92]
    node _xR3c_T_18 = bits(xR3cPre, 15, 0) @[FFT3PipelineCalc.scala 89:313]
    node _xR3c_T_19 = mux(_xR3c_T_11, _xR3c_T_17, _xR3c_T_18) @[FFT3PipelineCalc.scala 89:164]
    node xR3c = mux(_xR3c_T_2, _xR3c_T_8, _xR3c_T_19) @[FFT3PipelineCalc.scala 89:19]
    node _xI3c_T = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:28]
    node _xI3c_T_1 = bits(xI3cPre, 16, 16) @[FFT3PipelineCalc.scala 90:56]
    node _xI3c_T_2 = xor(_xI3c_T, _xI3c_T_1) @[FFT3PipelineCalc.scala 90:47]
    node _xI3c_T_3 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:88]
    node _xI3c_T_4 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:139]
    node _xI3c_T_5 = bits(_xI3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _xI3c_T_6 = mux(_xI3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xI3c_T_7 = not(_xI3c_T_6) @[FFT3PipelineCalc.scala 90:108]
    node _xI3c_T_8 = cat(_xI3c_T_3, _xI3c_T_7) @[Cat.scala 33:92]
    node _xI3c_T_9 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:173]
    node _xI3c_T_10 = bits(xI3cPre, 15, 15) @[FFT3PipelineCalc.scala 90:201]
    node _xI3c_T_11 = xor(_xI3c_T_9, _xI3c_T_10) @[FFT3PipelineCalc.scala 90:192]
    node _xI3c_T_12 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:233]
    node _xI3c_T_13 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:284]
    node _xI3c_T_14 = bits(_xI3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _xI3c_T_15 = mux(_xI3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xI3c_T_16 = not(_xI3c_T_15) @[FFT3PipelineCalc.scala 90:253]
    node _xI3c_T_17 = cat(_xI3c_T_12, _xI3c_T_16) @[Cat.scala 33:92]
    node _xI3c_T_18 = bits(xI3cPre, 15, 0) @[FFT3PipelineCalc.scala 90:313]
    node _xI3c_T_19 = mux(_xI3c_T_11, _xI3c_T_17, _xI3c_T_18) @[FFT3PipelineCalc.scala 90:164]
    node xI3c = mux(_xI3c_T_2, _xI3c_T_8, _xI3c_T_19) @[FFT3PipelineCalc.scala 90:19]
    io.dataOutSR3c <= xR3c @[FFT3PipelineCalc.scala 92:20]
    io.dataOutSI3c <= xI3c @[FFT3PipelineCalc.scala 93:20]
    node _yR3cPre_T = bits(sR3c, 15, 15) @[FFT3PipelineCalc.scala 95:35]
    node _yR3cPre_T_1 = bits(_yR3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _yR3cPre_T_2 = mux(_yR3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _yR3cPre_T_3 = cat(_yR3cPre_T_2, sR3c) @[Cat.scala 33:92]
    node _yR3cPre_T_4 = bits(qR3c, 16, 16) @[FFT3PipelineCalc.scala 95:72]
    node _yR3cPre_T_5 = cat(_yR3cPre_T_4, qR3c) @[Cat.scala 33:92]
    node _yR3cPre_T_6 = sub(_yR3cPre_T_3, _yR3cPre_T_5) @[FFT3PipelineCalc.scala 95:62]
    node yR3cPre = tail(_yR3cPre_T_6, 1) @[FFT3PipelineCalc.scala 95:62]
    node _yI3cPre_T = bits(sI3c, 15, 15) @[FFT3PipelineCalc.scala 96:35]
    node _yI3cPre_T_1 = bits(_yI3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _yI3cPre_T_2 = mux(_yI3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _yI3cPre_T_3 = cat(_yI3cPre_T_2, sI3c) @[Cat.scala 33:92]
    node _yI3cPre_T_4 = bits(qI3c, 16, 16) @[FFT3PipelineCalc.scala 96:72]
    node _yI3cPre_T_5 = cat(_yI3cPre_T_4, qI3c) @[Cat.scala 33:92]
    node _yI3cPre_T_6 = sub(_yI3cPre_T_3, _yI3cPre_T_5) @[FFT3PipelineCalc.scala 96:62]
    node yI3cPre = tail(_yI3cPre_T_6, 1) @[FFT3PipelineCalc.scala 96:62]
    node _yR3c_T = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:28]
    node _yR3c_T_1 = bits(yR3cPre, 16, 16) @[FFT3PipelineCalc.scala 98:56]
    node _yR3c_T_2 = xor(_yR3c_T, _yR3c_T_1) @[FFT3PipelineCalc.scala 98:47]
    node _yR3c_T_3 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:88]
    node _yR3c_T_4 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:139]
    node _yR3c_T_5 = bits(_yR3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _yR3c_T_6 = mux(_yR3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yR3c_T_7 = not(_yR3c_T_6) @[FFT3PipelineCalc.scala 98:108]
    node _yR3c_T_8 = cat(_yR3c_T_3, _yR3c_T_7) @[Cat.scala 33:92]
    node _yR3c_T_9 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:173]
    node _yR3c_T_10 = bits(yR3cPre, 15, 15) @[FFT3PipelineCalc.scala 98:201]
    node _yR3c_T_11 = xor(_yR3c_T_9, _yR3c_T_10) @[FFT3PipelineCalc.scala 98:192]
    node _yR3c_T_12 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:233]
    node _yR3c_T_13 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:284]
    node _yR3c_T_14 = bits(_yR3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _yR3c_T_15 = mux(_yR3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yR3c_T_16 = not(_yR3c_T_15) @[FFT3PipelineCalc.scala 98:253]
    node _yR3c_T_17 = cat(_yR3c_T_12, _yR3c_T_16) @[Cat.scala 33:92]
    node _yR3c_T_18 = bits(yR3cPre, 15, 0) @[FFT3PipelineCalc.scala 98:313]
    node _yR3c_T_19 = mux(_yR3c_T_11, _yR3c_T_17, _yR3c_T_18) @[FFT3PipelineCalc.scala 98:164]
    node yR3c = mux(_yR3c_T_2, _yR3c_T_8, _yR3c_T_19) @[FFT3PipelineCalc.scala 98:19]
    node _yI3c_T = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:28]
    node _yI3c_T_1 = bits(yI3cPre, 16, 16) @[FFT3PipelineCalc.scala 99:56]
    node _yI3c_T_2 = xor(_yI3c_T, _yI3c_T_1) @[FFT3PipelineCalc.scala 99:47]
    node _yI3c_T_3 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:88]
    node _yI3c_T_4 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:139]
    node _yI3c_T_5 = bits(_yI3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _yI3c_T_6 = mux(_yI3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yI3c_T_7 = not(_yI3c_T_6) @[FFT3PipelineCalc.scala 99:108]
    node _yI3c_T_8 = cat(_yI3c_T_3, _yI3c_T_7) @[Cat.scala 33:92]
    node _yI3c_T_9 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:173]
    node _yI3c_T_10 = bits(yI3cPre, 15, 15) @[FFT3PipelineCalc.scala 99:201]
    node _yI3c_T_11 = xor(_yI3c_T_9, _yI3c_T_10) @[FFT3PipelineCalc.scala 99:192]
    node _yI3c_T_12 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:233]
    node _yI3c_T_13 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:284]
    node _yI3c_T_14 = bits(_yI3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _yI3c_T_15 = mux(_yI3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yI3c_T_16 = not(_yI3c_T_15) @[FFT3PipelineCalc.scala 99:253]
    node _yI3c_T_17 = cat(_yI3c_T_12, _yI3c_T_16) @[Cat.scala 33:92]
    node _yI3c_T_18 = bits(yI3cPre, 15, 0) @[FFT3PipelineCalc.scala 99:313]
    node _yI3c_T_19 = mux(_yI3c_T_11, _yI3c_T_17, _yI3c_T_18) @[FFT3PipelineCalc.scala 99:164]
    node yI3c = mux(_yI3c_T_2, _yI3c_T_8, _yI3c_T_19) @[FFT3PipelineCalc.scala 99:19]
    io.dataOutTR3c <= yR3c @[FFT3PipelineCalc.scala 101:20]
    io.dataOutTI3c <= yI3c @[FFT3PipelineCalc.scala 102:20]

  module FFTTwiddle_2 :
    output io : { flip nk : UInt, flip twiLutCaseIndex : UInt, wR : UInt, wI : UInt}

    wire twi_cos_tb1_p10 : UInt<12>[128] @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[0] <= UInt<12>("h400") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[1] <= UInt<12>("h400") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[2] <= UInt<12>("h3ff") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[3] <= UInt<12>("h3fd") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[4] <= UInt<12>("h3fb") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[5] <= UInt<12>("h3f8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[6] <= UInt<12>("h3f5") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[7] <= UInt<12>("h3f1") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[8] <= UInt<12>("h3ec") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[9] <= UInt<12>("h3e7") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[10] <= UInt<12>("h3e1") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[11] <= UInt<12>("h3db") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[12] <= UInt<12>("h3d4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[13] <= UInt<12>("h3cc") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[14] <= UInt<12>("h3c4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[15] <= UInt<12>("h3bb") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[16] <= UInt<12>("h3b2") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[17] <= UInt<12>("h3a8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[18] <= UInt<12>("h39e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[19] <= UInt<12>("h393") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[20] <= UInt<12>("h387") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[21] <= UInt<12>("h37b") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[22] <= UInt<12>("h36e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[23] <= UInt<12>("h361") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[24] <= UInt<12>("h353") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[25] <= UInt<12>("h345") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[26] <= UInt<12>("h336") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[27] <= UInt<12>("h327") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[28] <= UInt<12>("h318") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[29] <= UInt<12>("h307") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[30] <= UInt<12>("h2f7") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[31] <= UInt<12>("h2e6") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[32] <= UInt<12>("h2d4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[33] <= UInt<12>("h2c2") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[34] <= UInt<12>("h2b0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[35] <= UInt<12>("h29d") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[36] <= UInt<12>("h28a") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[37] <= UInt<12>("h276") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[38] <= UInt<12>("h262") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[39] <= UInt<12>("h24e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[40] <= UInt<12>("h239") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[41] <= UInt<12>("h224") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[42] <= UInt<12>("h20e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[43] <= UInt<12>("h1f9") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[44] <= UInt<12>("h1e3") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[45] <= UInt<12>("h1cc") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[46] <= UInt<12>("h1b6") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[47] <= UInt<12>("h19f") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[48] <= UInt<12>("h188") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[49] <= UInt<12>("h171") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[50] <= UInt<12>("h159") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[51] <= UInt<12>("h141") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[52] <= UInt<12>("h129") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[53] <= UInt<12>("h111") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[54] <= UInt<12>("hf9") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[55] <= UInt<12>("he0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[56] <= UInt<12>("hc8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[57] <= UInt<12>("haf") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[58] <= UInt<12>("h96") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[59] <= UInt<12>("h7d") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[60] <= UInt<12>("h64") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[61] <= UInt<12>("h4b") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[62] <= UInt<12>("h32") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[63] <= UInt<12>("h19") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[64] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[65] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[66] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[67] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[68] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[69] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[70] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[71] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[72] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[73] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[74] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[75] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[76] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[77] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[78] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[79] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[80] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[81] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[82] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[83] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[84] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[85] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[86] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[87] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[88] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[89] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[90] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[91] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[92] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[93] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[94] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[95] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[96] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[97] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[98] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[99] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[100] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[101] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[102] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[103] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[104] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[105] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[106] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[107] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[108] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[109] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[110] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[111] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[112] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[113] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[114] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[115] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[116] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[117] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[118] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[119] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[120] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[121] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[122] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[123] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[124] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[125] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[126] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[127] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    wire twi_sin_tb1_p10 : UInt<12>[128] @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[0] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[1] <= UInt<12>("h19") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[2] <= UInt<12>("h32") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[3] <= UInt<12>("h4b") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[4] <= UInt<12>("h64") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[5] <= UInt<12>("h7d") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[6] <= UInt<12>("h96") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[7] <= UInt<12>("haf") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[8] <= UInt<12>("hc8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[9] <= UInt<12>("he0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[10] <= UInt<12>("hf9") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[11] <= UInt<12>("h111") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[12] <= UInt<12>("h129") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[13] <= UInt<12>("h141") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[14] <= UInt<12>("h159") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[15] <= UInt<12>("h171") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[16] <= UInt<12>("h188") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[17] <= UInt<12>("h19f") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[18] <= UInt<12>("h1b6") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[19] <= UInt<12>("h1cc") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[20] <= UInt<12>("h1e3") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[21] <= UInt<12>("h1f9") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[22] <= UInt<12>("h20e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[23] <= UInt<12>("h224") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[24] <= UInt<12>("h239") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[25] <= UInt<12>("h24e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[26] <= UInt<12>("h262") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[27] <= UInt<12>("h276") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[28] <= UInt<12>("h28a") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[29] <= UInt<12>("h29d") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[30] <= UInt<12>("h2b0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[31] <= UInt<12>("h2c2") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[32] <= UInt<12>("h2d4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[33] <= UInt<12>("h2e6") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[34] <= UInt<12>("h2f7") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[35] <= UInt<12>("h307") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[36] <= UInt<12>("h318") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[37] <= UInt<12>("h327") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[38] <= UInt<12>("h336") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[39] <= UInt<12>("h345") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[40] <= UInt<12>("h353") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[41] <= UInt<12>("h361") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[42] <= UInt<12>("h36e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[43] <= UInt<12>("h37b") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[44] <= UInt<12>("h387") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[45] <= UInt<12>("h393") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[46] <= UInt<12>("h39e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[47] <= UInt<12>("h3a8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[48] <= UInt<12>("h3b2") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[49] <= UInt<12>("h3bb") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[50] <= UInt<12>("h3c4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[51] <= UInt<12>("h3cc") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[52] <= UInt<12>("h3d4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[53] <= UInt<12>("h3db") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[54] <= UInt<12>("h3e1") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[55] <= UInt<12>("h3e7") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[56] <= UInt<12>("h3ec") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[57] <= UInt<12>("h3f1") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[58] <= UInt<12>("h3f5") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[59] <= UInt<12>("h3f8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[60] <= UInt<12>("h3fb") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[61] <= UInt<12>("h3fd") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[62] <= UInt<12>("h3ff") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[63] <= UInt<12>("h400") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[64] <= UInt<12>("h400") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[65] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[66] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[67] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[68] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[69] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[70] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[71] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[72] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[73] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[74] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[75] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[76] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[77] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[78] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[79] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[80] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[81] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[82] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[83] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[84] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[85] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[86] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[87] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[88] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[89] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[90] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[91] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[92] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[93] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[94] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[95] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[96] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[97] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[98] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[99] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[100] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[101] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[102] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[103] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[104] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[105] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[106] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[107] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[108] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[109] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[110] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[111] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[112] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[113] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[114] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[115] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[116] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[117] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[118] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[119] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[120] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[121] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[122] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[123] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[124] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[125] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[126] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[127] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    node _idx_r_T = bits(io.nk, 6, 6) @[FFTTwiddle.scala 35:27]
    node _idx_r_T_1 = bits(io.nk, 5, 0) @[FFTTwiddle.scala 35:50]
    node _idx_r_T_2 = orr(_idx_r_T_1) @[FFTTwiddle.scala 35:73]
    node _idx_r_T_3 = and(_idx_r_T, _idx_r_T_2) @[FFTTwiddle.scala 35:43]
    node _idx_r_T_4 = not(io.nk) @[FFTTwiddle.scala 35:80]
    node _idx_r_T_5 = add(_idx_r_T_4, UInt<1>("h1")) @[FFTTwiddle.scala 35:87]
    node _idx_r_T_6 = tail(_idx_r_T_5, 1) @[FFTTwiddle.scala 35:87]
    node idx_r = mux(_idx_r_T_3, _idx_r_T_6, io.nk) @[FFTTwiddle.scala 35:20]
    node _lut_chg_sign_flag_r_T = bits(io.nk, 6, 6) @[FFTTwiddle.scala 37:36]
    node _lut_chg_sign_flag_r_T_1 = bits(io.nk, 5, 0) @[FFTTwiddle.scala 37:60]
    node _lut_chg_sign_flag_r_T_2 = orr(_lut_chg_sign_flag_r_T_1) @[FFTTwiddle.scala 37:83]
    node lut_chg_sign_flag_r = and(_lut_chg_sign_flag_r_T, _lut_chg_sign_flag_r_T_2) @[FFTTwiddle.scala 37:52]
    node _lut_w_r_T = or(idx_r, UInt<7>("h0"))
    node _lut_w_r_T_1 = bits(_lut_w_r_T, 6, 0)
    node idx_i = bits(idx_r, 6, 0) @[FFTTwiddle.scala 41:22]
    node _chg_sign_flag_r_T = eq(io.twiLutCaseIndex, UInt<2>("h2")) @[FFTTwiddle.scala 47:51]
    node _chg_sign_flag_r_T_1 = eq(lut_chg_sign_flag_r, UInt<1>("h0")) @[FFTTwiddle.scala 47:61]
    node chg_sign_flag_r = mux(_chg_sign_flag_r_T, _chg_sign_flag_r_T_1, lut_chg_sign_flag_r) @[FFTTwiddle.scala 47:30]
    node _chg_sign_flag_i_T = eq(io.twiLutCaseIndex, UInt<1>("h1")) @[FFTTwiddle.scala 48:51]
    node _chg_sign_flag_i_T_1 = eq(UInt<1>("h1"), UInt<1>("h0")) @[FFTTwiddle.scala 48:61]
    node chg_sign_flag_i = mux(_chg_sign_flag_i_T, _chg_sign_flag_i_T_1, UInt<1>("h1")) @[FFTTwiddle.scala 48:30]
    node _io_wR_T = not(twi_cos_tb1_p10[_lut_w_r_T_1]) @[FFTTwiddle.scala 50:36]
    node _io_wR_T_1 = add(_io_wR_T, UInt<1>("h1")) @[FFTTwiddle.scala 50:45]
    node _io_wR_T_2 = tail(_io_wR_T_1, 1) @[FFTTwiddle.scala 50:45]
    node _io_wR_T_3 = mux(chg_sign_flag_r, _io_wR_T_2, twi_cos_tb1_p10[_lut_w_r_T_1]) @[FFTTwiddle.scala 50:17]
    io.wR <= _io_wR_T_3 @[FFTTwiddle.scala 50:11]
    node _io_wI_T = not(twi_sin_tb1_p10[idx_i]) @[FFTTwiddle.scala 51:36]
    node _io_wI_T_1 = add(_io_wI_T, UInt<1>("h1")) @[FFTTwiddle.scala 51:45]
    node _io_wI_T_2 = tail(_io_wI_T_1, 1) @[FFTTwiddle.scala 51:45]
    node _io_wI_T_3 = mux(chg_sign_flag_i, _io_wI_T_2, twi_sin_tb1_p10[idx_i]) @[FFTTwiddle.scala 51:17]
    io.wI <= _io_wI_T_3 @[FFTTwiddle.scala 51:11]

  module FFTMultiply_2 :
    output io : { flip a : UInt<18>, flip b : UInt<18>, flip tc : UInt<1>, product : UInt<36>}

    node _temp_a_T = bits(io.a, 17, 17) @[FFTMultiply.scala 14:26]
    node _temp_a_T_1 = not(io.a) @[FFTMultiply.scala 14:51]
    node _temp_a_T_2 = add(_temp_a_T_1, UInt<1>("h1")) @[FFTMultiply.scala 14:57]
    node _temp_a_T_3 = tail(_temp_a_T_2, 1) @[FFTMultiply.scala 14:57]
    node temp_a = mux(_temp_a_T, _temp_a_T_3, io.a) @[FFTMultiply.scala 14:21]
    node _temp_b_T = bits(io.b, 17, 17) @[FFTMultiply.scala 15:26]
    node _temp_b_T_1 = not(io.b) @[FFTMultiply.scala 15:51]
    node _temp_b_T_2 = add(_temp_b_T_1, UInt<1>("h1")) @[FFTMultiply.scala 15:57]
    node _temp_b_T_3 = tail(_temp_b_T_2, 1) @[FFTMultiply.scala 15:57]
    node temp_b = mux(_temp_b_T, _temp_b_T_3, io.b) @[FFTMultiply.scala 15:21]
    node long_temp1 = mul(temp_a, temp_b) @[FFTMultiply.scala 17:29]
    node _long_temp2_T = sub(long_temp1, UInt<1>("h1")) @[FFTMultiply.scala 18:35]
    node _long_temp2_T_1 = tail(_long_temp2_T, 1) @[FFTMultiply.scala 18:35]
    node long_temp2 = not(_long_temp2_T_1) @[FFTMultiply.scala 18:22]
    node _io_product_T = xor(io.a, io.a) @[FFTMultiply.scala 20:31]
    node _io_product_T_1 = xorr(_io_product_T) @[FFTMultiply.scala 20:39]
    node _io_product_T_2 = neq(_io_product_T_1, UInt<1>("h0")) @[FFTMultiply.scala 20:44]
    node _io_product_T_3 = xor(io.b, io.b) @[FFTMultiply.scala 20:67]
    node _io_product_T_4 = xorr(_io_product_T_3) @[FFTMultiply.scala 20:75]
    node _io_product_T_5 = neq(_io_product_T_4, UInt<1>("h0")) @[FFTMultiply.scala 20:80]
    node _io_product_T_6 = or(_io_product_T_2, _io_product_T_5) @[FFTMultiply.scala 20:57]
    node _io_product_T_7 = xor(io.tc, io.tc) @[FFTMultiply.scala 20:104]
    node _io_product_T_8 = xorr(_io_product_T_7) @[FFTMultiply.scala 20:113]
    node _io_product_T_9 = neq(_io_product_T_8, UInt<1>("h0")) @[FFTMultiply.scala 20:118]
    node _io_product_T_10 = or(_io_product_T_6, _io_product_T_9) @[FFTMultiply.scala 20:93]
    node _io_product_T_11 = mux(UInt<1>("h1"), UInt<36>("hfffffffff"), UInt<36>("h0")) @[Bitwise.scala 77:12]
    node _io_product_T_12 = bits(io.a, 17, 17) @[FFTMultiply.scala 20:194]
    node _io_product_T_13 = bits(io.b, 17, 17) @[FFTMultiply.scala 20:223]
    node _io_product_T_14 = xor(_io_product_T_12, _io_product_T_13) @[FFTMultiply.scala 20:217]
    node _io_product_T_15 = orr(long_temp1) @[FFTMultiply.scala 20:262]
    node _io_product_T_16 = and(_io_product_T_14, _io_product_T_15) @[FFTMultiply.scala 20:247]
    node _io_product_T_17 = cat(UInt<1>("h1"), long_temp2) @[Cat.scala 33:92]
    node _io_product_T_18 = cat(UInt<1>("h0"), long_temp1) @[Cat.scala 33:92]
    node _io_product_T_19 = mux(_io_product_T_16, _io_product_T_17, _io_product_T_18) @[FFTMultiply.scala 20:187]
    node _io_product_T_20 = mul(io.a, io.b) @[FFTMultiply.scala 20:329]
    node _io_product_T_21 = mux(io.tc, _io_product_T_19, _io_product_T_20) @[FFTMultiply.scala 20:176]
    node _io_product_T_22 = mux(_io_product_T_10, _io_product_T_11, _io_product_T_21) @[FFTMultiply.scala 20:22]
    io.product <= _io_product_T_22 @[FFTMultiply.scala 20:16]

  module FFT3PipelineCalc_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip dataInSR : UInt, flip dataInSI : UInt, flip dataInTR : UInt, flip dataInTI : UInt, dataOutSR3c : UInt, dataOutSI3c : UInt, dataOutTR3c : UInt, dataOutTI3c : UInt, flip nk : UInt, flip rShiftSym : UInt<1>, flip isFFT : UInt<1>, flip procMode : UInt<1>, flip state1c : UInt<1>, flip state2c : UInt<1>}

    clock is invalid
    reset is invalid
    io is invalid
    node _dataInSRRnd_T = bits(io.dataInSR, 15, 15) @[FFT3PipelineCalc.scala 28:38]
    node _dataInSRRnd_T_1 = bits(io.dataInSR, 15, 1) @[FFT3PipelineCalc.scala 28:69]
    node _dataInSRRnd_T_2 = cat(_dataInSRRnd_T, _dataInSRRnd_T_1) @[Cat.scala 33:92]
    node _dataInSRRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInSRRnd_T_4 = bits(io.dataInSR, 0, 0) @[FFT3PipelineCalc.scala 28:138]
    node _dataInSRRnd_T_5 = cat(_dataInSRRnd_T_3, _dataInSRRnd_T_4) @[Cat.scala 33:92]
    node _dataInSRRnd_T_6 = add(_dataInSRRnd_T_2, _dataInSRRnd_T_5) @[FFT3PipelineCalc.scala 28:92]
    node dataInSRRnd = tail(_dataInSRRnd_T_6, 1) @[FFT3PipelineCalc.scala 28:92]
    node _dataInSIRnd_T = bits(io.dataInSI, 15, 15) @[FFT3PipelineCalc.scala 29:38]
    node _dataInSIRnd_T_1 = bits(io.dataInSI, 15, 1) @[FFT3PipelineCalc.scala 29:69]
    node _dataInSIRnd_T_2 = cat(_dataInSIRnd_T, _dataInSIRnd_T_1) @[Cat.scala 33:92]
    node _dataInSIRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInSIRnd_T_4 = bits(io.dataInSI, 0, 0) @[FFT3PipelineCalc.scala 29:138]
    node _dataInSIRnd_T_5 = cat(_dataInSIRnd_T_3, _dataInSIRnd_T_4) @[Cat.scala 33:92]
    node _dataInSIRnd_T_6 = add(_dataInSIRnd_T_2, _dataInSIRnd_T_5) @[FFT3PipelineCalc.scala 29:92]
    node dataInSIRnd = tail(_dataInSIRnd_T_6, 1) @[FFT3PipelineCalc.scala 29:92]
    node _dataInTRRnd_T = bits(io.dataInTR, 15, 15) @[FFT3PipelineCalc.scala 30:38]
    node _dataInTRRnd_T_1 = bits(io.dataInTR, 15, 1) @[FFT3PipelineCalc.scala 30:69]
    node _dataInTRRnd_T_2 = cat(_dataInTRRnd_T, _dataInTRRnd_T_1) @[Cat.scala 33:92]
    node _dataInTRRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInTRRnd_T_4 = bits(io.dataInTR, 0, 0) @[FFT3PipelineCalc.scala 30:138]
    node _dataInTRRnd_T_5 = cat(_dataInTRRnd_T_3, _dataInTRRnd_T_4) @[Cat.scala 33:92]
    node _dataInTRRnd_T_6 = add(_dataInTRRnd_T_2, _dataInTRRnd_T_5) @[FFT3PipelineCalc.scala 30:92]
    node dataInTRRnd = tail(_dataInTRRnd_T_6, 1) @[FFT3PipelineCalc.scala 30:92]
    node _dataInTIRnd_T = bits(io.dataInTI, 15, 15) @[FFT3PipelineCalc.scala 31:38]
    node _dataInTIRnd_T_1 = bits(io.dataInTI, 15, 1) @[FFT3PipelineCalc.scala 31:69]
    node _dataInTIRnd_T_2 = cat(_dataInTIRnd_T, _dataInTIRnd_T_1) @[Cat.scala 33:92]
    node _dataInTIRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInTIRnd_T_4 = bits(io.dataInTI, 0, 0) @[FFT3PipelineCalc.scala 31:138]
    node _dataInTIRnd_T_5 = cat(_dataInTIRnd_T_3, _dataInTIRnd_T_4) @[Cat.scala 33:92]
    node _dataInTIRnd_T_6 = add(_dataInTIRnd_T_2, _dataInTIRnd_T_5) @[FFT3PipelineCalc.scala 31:92]
    node dataInTIRnd = tail(_dataInTIRnd_T_6, 1) @[FFT3PipelineCalc.scala 31:92]
    node dataInSR1c = mux(io.rShiftSym, dataInSRRnd, io.dataInSR) @[FFT3PipelineCalc.scala 33:25]
    node dataInSI1c = mux(io.rShiftSym, dataInSIRnd, io.dataInSI) @[FFT3PipelineCalc.scala 34:25]
    node dataInTR1c = mux(io.rShiftSym, dataInTRRnd, io.dataInTR) @[FFT3PipelineCalc.scala 35:25]
    node dataInTI1c = mux(io.rShiftSym, dataInTIRnd, io.dataInTI) @[FFT3PipelineCalc.scala 36:25]
    reg nk1c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      nk1c <= io.nk @[Reg.scala 36:22]
    node twiLutCaseIdx1c = mux(io.isFFT, UInt<2>("h0"), UInt<2>("h1")) @[FFT3PipelineCalc.scala 42:30]
    inst fftTwiddle of FFTTwiddle_2 @[FFT3PipelineCalc.scala 44:28]
    fftTwiddle.io.nk <= nk1c @[FFT3PipelineCalc.scala 45:22]
    fftTwiddle.io.twiLutCaseIndex <= twiLutCaseIdx1c @[FFT3PipelineCalc.scala 46:35]
    reg sR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      sR2c <= dataInSR1c @[Reg.scala 36:22]
    reg sI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      sI2c <= dataInSI1c @[Reg.scala 36:22]
    reg tR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      tR2c <= dataInTR1c @[Reg.scala 36:22]
    reg tI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      tI2c <= dataInTI1c @[Reg.scala 36:22]
    node _wR2c_T = mux(UInt<1>("h0"), UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 77:12]
    node _wR2c_T_1 = cat(fftTwiddle.io.wR, _wR2c_T) @[Cat.scala 33:92]
    reg wR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      wR2c <= _wR2c_T_1 @[Reg.scala 36:22]
    node _wI2c_T = mux(UInt<1>("h0"), UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 77:12]
    node _wI2c_T_1 = cat(fftTwiddle.io.wI, _wI2c_T) @[Cat.scala 33:92]
    reg wI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      wI2c <= _wI2c_T_1 @[Reg.scala 36:22]
    node _addTRI_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 57:34]
    node _addTRI_T_1 = bits(_addTRI_T, 0, 0) @[Bitwise.scala 77:15]
    node _addTRI_T_2 = mux(_addTRI_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _addTRI_T_3 = cat(_addTRI_T_2, tR2c) @[Cat.scala 33:92]
    node _addTRI_T_4 = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 57:79]
    node _addTRI_T_5 = bits(_addTRI_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _addTRI_T_6 = mux(_addTRI_T_5, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _addTRI_T_7 = cat(_addTRI_T_6, tI2c) @[Cat.scala 33:92]
    node _addTRI_T_8 = add(_addTRI_T_3, _addTRI_T_7) @[FFT3PipelineCalc.scala 57:61]
    node addTRI = tail(_addTRI_T_8, 1) @[FFT3PipelineCalc.scala 57:61]
    node _addWRI_T = bits(wR2c, 16, 16) @[FFT3PipelineCalc.scala 58:26]
    node _addWRI_T_1 = cat(_addWRI_T, wR2c) @[Cat.scala 33:92]
    node _addWRI_T_2 = bits(wI2c, 16, 16) @[FFT3PipelineCalc.scala 58:62]
    node _addWRI_T_3 = cat(_addWRI_T_2, wI2c) @[Cat.scala 33:92]
    node _addWRI_T_4 = add(_addWRI_T_1, _addWRI_T_3) @[FFT3PipelineCalc.scala 58:52]
    node addWRI = tail(_addWRI_T_4, 1) @[FFT3PipelineCalc.scala 58:52]
    inst fftMultiply of FFTMultiply_2 @[FFT3PipelineCalc.scala 59:29]
    fftMultiply.io.a <= addTRI @[FFT3PipelineCalc.scala 60:22]
    fftMultiply.io.b <= addWRI @[FFT3PipelineCalc.scala 61:22]
    fftMultiply.io.tc <= UInt<1>("h1") @[FFT3PipelineCalc.scala 62:23]
    node _multRPre_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 65:51]
    node _multRPre_T_1 = bits(_multRPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _multRPre_T_2 = mux(_multRPre_T_1, UInt<17>("h1ffff"), UInt<17>("h0")) @[Bitwise.scala 77:12]
    node _multRPre_T_3 = cat(_multRPre_T_2, tR2c) @[Cat.scala 33:92]
    node _multRPre_T_4 = bits(wR2c, 16, 16) @[FFT3PipelineCalc.scala 65:111]
    node _multRPre_T_5 = bits(_multRPre_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _multRPre_T_6 = mux(_multRPre_T_5, UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
    node _multRPre_T_7 = cat(_multRPre_T_6, wR2c) @[Cat.scala 33:92]
    node multRPre = mul(_multRPre_T_3, _multRPre_T_7) @[FFT3PipelineCalc.scala 65:78]
    node multR = bits(multRPre, 32, 0) @[FFT3PipelineCalc.scala 66:25]
    node _multIPre_T = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 68:51]
    node _multIPre_T_1 = bits(_multIPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _multIPre_T_2 = mux(_multIPre_T_1, UInt<17>("h1ffff"), UInt<17>("h0")) @[Bitwise.scala 77:12]
    node _multIPre_T_3 = cat(_multIPre_T_2, tI2c) @[Cat.scala 33:92]
    node _multIPre_T_4 = bits(wI2c, 16, 16) @[FFT3PipelineCalc.scala 68:111]
    node _multIPre_T_5 = bits(_multIPre_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _multIPre_T_6 = mux(_multIPre_T_5, UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
    node _multIPre_T_7 = cat(_multIPre_T_6, wI2c) @[Cat.scala 33:92]
    node multIPre = mul(_multIPre_T_3, _multIPre_T_7) @[FFT3PipelineCalc.scala 68:78]
    node multI = bits(multIPre, 32, 0) @[FFT3PipelineCalc.scala 69:25]
    node _qR2cKernel_T = bits(multR, 32, 32) @[FFT3PipelineCalc.scala 71:31]
    node _qR2cKernel_T_1 = bits(multR, 30, 15) @[FFT3PipelineCalc.scala 71:62]
    node _qR2cKernel_T_2 = cat(_qR2cKernel_T, _qR2cKernel_T_1) @[Cat.scala 33:92]
    node _qR2cKernel_T_3 = bits(multI, 32, 32) @[FFT3PipelineCalc.scala 71:119]
    node _qR2cKernel_T_4 = bits(multI, 30, 15) @[FFT3PipelineCalc.scala 71:150]
    node _qR2cKernel_T_5 = cat(_qR2cKernel_T_3, _qR2cKernel_T_4) @[Cat.scala 33:92]
    node _qR2cKernel_T_6 = sub(_qR2cKernel_T_2, _qR2cKernel_T_5) @[FFT3PipelineCalc.scala 71:108]
    node qR2cKernel = tail(_qR2cKernel_T_6, 1) @[FFT3PipelineCalc.scala 71:108]
    node _qI2cKernel_T = bits(fftMultiply.io.product, 35, 35) @[FFT3PipelineCalc.scala 72:31]
    node _qI2cKernel_T_1 = bits(fftMultiply.io.product, 30, 15) @[FFT3PipelineCalc.scala 72:66]
    node _qI2cKernel_T_2 = cat(_qI2cKernel_T, _qI2cKernel_T_1) @[Cat.scala 33:92]
    node _qI2cKernel_T_3 = bits(multR, 32, 32) @[FFT3PipelineCalc.scala 72:123]
    node _qI2cKernel_T_4 = bits(multR, 30, 15) @[FFT3PipelineCalc.scala 72:154]
    node _qI2cKernel_T_5 = cat(_qI2cKernel_T_3, _qI2cKernel_T_4) @[Cat.scala 33:92]
    node _qI2cKernel_T_6 = sub(_qI2cKernel_T_2, _qI2cKernel_T_5) @[FFT3PipelineCalc.scala 72:112]
    node _qI2cKernel_T_7 = tail(_qI2cKernel_T_6, 1) @[FFT3PipelineCalc.scala 72:112]
    node _qI2cKernel_T_8 = bits(multI, 32, 32) @[FFT3PipelineCalc.scala 72:211]
    node _qI2cKernel_T_9 = bits(multI, 30, 15) @[FFT3PipelineCalc.scala 72:242]
    node _qI2cKernel_T_10 = cat(_qI2cKernel_T_8, _qI2cKernel_T_9) @[Cat.scala 33:92]
    node _qI2cKernel_T_11 = sub(_qI2cKernel_T_7, _qI2cKernel_T_10) @[FFT3PipelineCalc.scala 72:200]
    node qI2cKernel = tail(_qI2cKernel_T_11, 1) @[FFT3PipelineCalc.scala 72:200]
    node _qR2cProc_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 74:28]
    node qR2cProc = cat(_qR2cProc_T, tR2c) @[Cat.scala 33:92]
    node _qI2cProc_T = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 75:29]
    node _qI2cProc_T_1 = cat(_qI2cProc_T, tI2c) @[Cat.scala 33:92]
    node _qI2cProc_T_2 = not(_qI2cProc_T_1) @[FFT3PipelineCalc.scala 75:20]
    node _qI2cProc_T_3 = add(_qI2cProc_T_2, UInt<1>("h1")) @[FFT3PipelineCalc.scala 75:55]
    node qI2cProc = tail(_qI2cProc_T_3, 1) @[FFT3PipelineCalc.scala 75:55]
    node qR2c = mux(io.procMode, qR2cProc, qR2cKernel) @[FFT3PipelineCalc.scala 77:19]
    node qI2c = mux(io.procMode, qI2cProc, qI2cKernel) @[FFT3PipelineCalc.scala 78:19]
    reg sR3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      sR3c <= sR2c @[Reg.scala 36:22]
    reg sI3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      sI3c <= sI2c @[Reg.scala 36:22]
    reg qR3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      qR3c <= qR2c @[Reg.scala 36:22]
    reg qI3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      qI3c <= qI2c @[Reg.scala 36:22]
    node _xR3cPre_T = bits(sR3c, 15, 15) @[FFT3PipelineCalc.scala 86:35]
    node _xR3cPre_T_1 = bits(_xR3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _xR3cPre_T_2 = mux(_xR3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _xR3cPre_T_3 = cat(_xR3cPre_T_2, sR3c) @[Cat.scala 33:92]
    node _xR3cPre_T_4 = bits(qR3c, 16, 16) @[FFT3PipelineCalc.scala 86:72]
    node _xR3cPre_T_5 = cat(_xR3cPre_T_4, qR3c) @[Cat.scala 33:92]
    node _xR3cPre_T_6 = add(_xR3cPre_T_3, _xR3cPre_T_5) @[FFT3PipelineCalc.scala 86:62]
    node xR3cPre = tail(_xR3cPre_T_6, 1) @[FFT3PipelineCalc.scala 86:62]
    node _xI3cPre_T = bits(sI3c, 15, 15) @[FFT3PipelineCalc.scala 87:35]
    node _xI3cPre_T_1 = bits(_xI3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _xI3cPre_T_2 = mux(_xI3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _xI3cPre_T_3 = cat(_xI3cPre_T_2, sI3c) @[Cat.scala 33:92]
    node _xI3cPre_T_4 = bits(qI3c, 16, 16) @[FFT3PipelineCalc.scala 87:72]
    node _xI3cPre_T_5 = cat(_xI3cPre_T_4, qI3c) @[Cat.scala 33:92]
    node _xI3cPre_T_6 = add(_xI3cPre_T_3, _xI3cPre_T_5) @[FFT3PipelineCalc.scala 87:62]
    node xI3cPre = tail(_xI3cPre_T_6, 1) @[FFT3PipelineCalc.scala 87:62]
    node _xR3c_T = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:28]
    node _xR3c_T_1 = bits(xR3cPre, 16, 16) @[FFT3PipelineCalc.scala 89:56]
    node _xR3c_T_2 = xor(_xR3c_T, _xR3c_T_1) @[FFT3PipelineCalc.scala 89:47]
    node _xR3c_T_3 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:88]
    node _xR3c_T_4 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:139]
    node _xR3c_T_5 = bits(_xR3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _xR3c_T_6 = mux(_xR3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xR3c_T_7 = not(_xR3c_T_6) @[FFT3PipelineCalc.scala 89:108]
    node _xR3c_T_8 = cat(_xR3c_T_3, _xR3c_T_7) @[Cat.scala 33:92]
    node _xR3c_T_9 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:173]
    node _xR3c_T_10 = bits(xR3cPre, 15, 15) @[FFT3PipelineCalc.scala 89:201]
    node _xR3c_T_11 = xor(_xR3c_T_9, _xR3c_T_10) @[FFT3PipelineCalc.scala 89:192]
    node _xR3c_T_12 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:233]
    node _xR3c_T_13 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:284]
    node _xR3c_T_14 = bits(_xR3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _xR3c_T_15 = mux(_xR3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xR3c_T_16 = not(_xR3c_T_15) @[FFT3PipelineCalc.scala 89:253]
    node _xR3c_T_17 = cat(_xR3c_T_12, _xR3c_T_16) @[Cat.scala 33:92]
    node _xR3c_T_18 = bits(xR3cPre, 15, 0) @[FFT3PipelineCalc.scala 89:313]
    node _xR3c_T_19 = mux(_xR3c_T_11, _xR3c_T_17, _xR3c_T_18) @[FFT3PipelineCalc.scala 89:164]
    node xR3c = mux(_xR3c_T_2, _xR3c_T_8, _xR3c_T_19) @[FFT3PipelineCalc.scala 89:19]
    node _xI3c_T = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:28]
    node _xI3c_T_1 = bits(xI3cPre, 16, 16) @[FFT3PipelineCalc.scala 90:56]
    node _xI3c_T_2 = xor(_xI3c_T, _xI3c_T_1) @[FFT3PipelineCalc.scala 90:47]
    node _xI3c_T_3 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:88]
    node _xI3c_T_4 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:139]
    node _xI3c_T_5 = bits(_xI3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _xI3c_T_6 = mux(_xI3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xI3c_T_7 = not(_xI3c_T_6) @[FFT3PipelineCalc.scala 90:108]
    node _xI3c_T_8 = cat(_xI3c_T_3, _xI3c_T_7) @[Cat.scala 33:92]
    node _xI3c_T_9 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:173]
    node _xI3c_T_10 = bits(xI3cPre, 15, 15) @[FFT3PipelineCalc.scala 90:201]
    node _xI3c_T_11 = xor(_xI3c_T_9, _xI3c_T_10) @[FFT3PipelineCalc.scala 90:192]
    node _xI3c_T_12 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:233]
    node _xI3c_T_13 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:284]
    node _xI3c_T_14 = bits(_xI3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _xI3c_T_15 = mux(_xI3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xI3c_T_16 = not(_xI3c_T_15) @[FFT3PipelineCalc.scala 90:253]
    node _xI3c_T_17 = cat(_xI3c_T_12, _xI3c_T_16) @[Cat.scala 33:92]
    node _xI3c_T_18 = bits(xI3cPre, 15, 0) @[FFT3PipelineCalc.scala 90:313]
    node _xI3c_T_19 = mux(_xI3c_T_11, _xI3c_T_17, _xI3c_T_18) @[FFT3PipelineCalc.scala 90:164]
    node xI3c = mux(_xI3c_T_2, _xI3c_T_8, _xI3c_T_19) @[FFT3PipelineCalc.scala 90:19]
    io.dataOutSR3c <= xR3c @[FFT3PipelineCalc.scala 92:20]
    io.dataOutSI3c <= xI3c @[FFT3PipelineCalc.scala 93:20]
    node _yR3cPre_T = bits(sR3c, 15, 15) @[FFT3PipelineCalc.scala 95:35]
    node _yR3cPre_T_1 = bits(_yR3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _yR3cPre_T_2 = mux(_yR3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _yR3cPre_T_3 = cat(_yR3cPre_T_2, sR3c) @[Cat.scala 33:92]
    node _yR3cPre_T_4 = bits(qR3c, 16, 16) @[FFT3PipelineCalc.scala 95:72]
    node _yR3cPre_T_5 = cat(_yR3cPre_T_4, qR3c) @[Cat.scala 33:92]
    node _yR3cPre_T_6 = sub(_yR3cPre_T_3, _yR3cPre_T_5) @[FFT3PipelineCalc.scala 95:62]
    node yR3cPre = tail(_yR3cPre_T_6, 1) @[FFT3PipelineCalc.scala 95:62]
    node _yI3cPre_T = bits(sI3c, 15, 15) @[FFT3PipelineCalc.scala 96:35]
    node _yI3cPre_T_1 = bits(_yI3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _yI3cPre_T_2 = mux(_yI3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _yI3cPre_T_3 = cat(_yI3cPre_T_2, sI3c) @[Cat.scala 33:92]
    node _yI3cPre_T_4 = bits(qI3c, 16, 16) @[FFT3PipelineCalc.scala 96:72]
    node _yI3cPre_T_5 = cat(_yI3cPre_T_4, qI3c) @[Cat.scala 33:92]
    node _yI3cPre_T_6 = sub(_yI3cPre_T_3, _yI3cPre_T_5) @[FFT3PipelineCalc.scala 96:62]
    node yI3cPre = tail(_yI3cPre_T_6, 1) @[FFT3PipelineCalc.scala 96:62]
    node _yR3c_T = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:28]
    node _yR3c_T_1 = bits(yR3cPre, 16, 16) @[FFT3PipelineCalc.scala 98:56]
    node _yR3c_T_2 = xor(_yR3c_T, _yR3c_T_1) @[FFT3PipelineCalc.scala 98:47]
    node _yR3c_T_3 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:88]
    node _yR3c_T_4 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:139]
    node _yR3c_T_5 = bits(_yR3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _yR3c_T_6 = mux(_yR3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yR3c_T_7 = not(_yR3c_T_6) @[FFT3PipelineCalc.scala 98:108]
    node _yR3c_T_8 = cat(_yR3c_T_3, _yR3c_T_7) @[Cat.scala 33:92]
    node _yR3c_T_9 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:173]
    node _yR3c_T_10 = bits(yR3cPre, 15, 15) @[FFT3PipelineCalc.scala 98:201]
    node _yR3c_T_11 = xor(_yR3c_T_9, _yR3c_T_10) @[FFT3PipelineCalc.scala 98:192]
    node _yR3c_T_12 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:233]
    node _yR3c_T_13 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:284]
    node _yR3c_T_14 = bits(_yR3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _yR3c_T_15 = mux(_yR3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yR3c_T_16 = not(_yR3c_T_15) @[FFT3PipelineCalc.scala 98:253]
    node _yR3c_T_17 = cat(_yR3c_T_12, _yR3c_T_16) @[Cat.scala 33:92]
    node _yR3c_T_18 = bits(yR3cPre, 15, 0) @[FFT3PipelineCalc.scala 98:313]
    node _yR3c_T_19 = mux(_yR3c_T_11, _yR3c_T_17, _yR3c_T_18) @[FFT3PipelineCalc.scala 98:164]
    node yR3c = mux(_yR3c_T_2, _yR3c_T_8, _yR3c_T_19) @[FFT3PipelineCalc.scala 98:19]
    node _yI3c_T = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:28]
    node _yI3c_T_1 = bits(yI3cPre, 16, 16) @[FFT3PipelineCalc.scala 99:56]
    node _yI3c_T_2 = xor(_yI3c_T, _yI3c_T_1) @[FFT3PipelineCalc.scala 99:47]
    node _yI3c_T_3 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:88]
    node _yI3c_T_4 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:139]
    node _yI3c_T_5 = bits(_yI3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _yI3c_T_6 = mux(_yI3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yI3c_T_7 = not(_yI3c_T_6) @[FFT3PipelineCalc.scala 99:108]
    node _yI3c_T_8 = cat(_yI3c_T_3, _yI3c_T_7) @[Cat.scala 33:92]
    node _yI3c_T_9 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:173]
    node _yI3c_T_10 = bits(yI3cPre, 15, 15) @[FFT3PipelineCalc.scala 99:201]
    node _yI3c_T_11 = xor(_yI3c_T_9, _yI3c_T_10) @[FFT3PipelineCalc.scala 99:192]
    node _yI3c_T_12 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:233]
    node _yI3c_T_13 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:284]
    node _yI3c_T_14 = bits(_yI3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _yI3c_T_15 = mux(_yI3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yI3c_T_16 = not(_yI3c_T_15) @[FFT3PipelineCalc.scala 99:253]
    node _yI3c_T_17 = cat(_yI3c_T_12, _yI3c_T_16) @[Cat.scala 33:92]
    node _yI3c_T_18 = bits(yI3cPre, 15, 0) @[FFT3PipelineCalc.scala 99:313]
    node _yI3c_T_19 = mux(_yI3c_T_11, _yI3c_T_17, _yI3c_T_18) @[FFT3PipelineCalc.scala 99:164]
    node yI3c = mux(_yI3c_T_2, _yI3c_T_8, _yI3c_T_19) @[FFT3PipelineCalc.scala 99:19]
    io.dataOutTR3c <= yR3c @[FFT3PipelineCalc.scala 101:20]
    io.dataOutTI3c <= yI3c @[FFT3PipelineCalc.scala 102:20]

  module FFTTwiddle_3 :
    output io : { flip nk : UInt, flip twiLutCaseIndex : UInt, wR : UInt, wI : UInt}

    wire twi_cos_tb1_p10 : UInt<12>[128] @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[0] <= UInt<12>("h400") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[1] <= UInt<12>("h400") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[2] <= UInt<12>("h3ff") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[3] <= UInt<12>("h3fd") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[4] <= UInt<12>("h3fb") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[5] <= UInt<12>("h3f8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[6] <= UInt<12>("h3f5") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[7] <= UInt<12>("h3f1") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[8] <= UInt<12>("h3ec") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[9] <= UInt<12>("h3e7") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[10] <= UInt<12>("h3e1") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[11] <= UInt<12>("h3db") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[12] <= UInt<12>("h3d4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[13] <= UInt<12>("h3cc") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[14] <= UInt<12>("h3c4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[15] <= UInt<12>("h3bb") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[16] <= UInt<12>("h3b2") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[17] <= UInt<12>("h3a8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[18] <= UInt<12>("h39e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[19] <= UInt<12>("h393") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[20] <= UInt<12>("h387") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[21] <= UInt<12>("h37b") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[22] <= UInt<12>("h36e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[23] <= UInt<12>("h361") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[24] <= UInt<12>("h353") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[25] <= UInt<12>("h345") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[26] <= UInt<12>("h336") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[27] <= UInt<12>("h327") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[28] <= UInt<12>("h318") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[29] <= UInt<12>("h307") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[30] <= UInt<12>("h2f7") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[31] <= UInt<12>("h2e6") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[32] <= UInt<12>("h2d4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[33] <= UInt<12>("h2c2") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[34] <= UInt<12>("h2b0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[35] <= UInt<12>("h29d") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[36] <= UInt<12>("h28a") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[37] <= UInt<12>("h276") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[38] <= UInt<12>("h262") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[39] <= UInt<12>("h24e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[40] <= UInt<12>("h239") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[41] <= UInt<12>("h224") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[42] <= UInt<12>("h20e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[43] <= UInt<12>("h1f9") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[44] <= UInt<12>("h1e3") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[45] <= UInt<12>("h1cc") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[46] <= UInt<12>("h1b6") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[47] <= UInt<12>("h19f") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[48] <= UInt<12>("h188") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[49] <= UInt<12>("h171") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[50] <= UInt<12>("h159") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[51] <= UInt<12>("h141") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[52] <= UInt<12>("h129") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[53] <= UInt<12>("h111") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[54] <= UInt<12>("hf9") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[55] <= UInt<12>("he0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[56] <= UInt<12>("hc8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[57] <= UInt<12>("haf") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[58] <= UInt<12>("h96") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[59] <= UInt<12>("h7d") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[60] <= UInt<12>("h64") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[61] <= UInt<12>("h4b") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[62] <= UInt<12>("h32") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[63] <= UInt<12>("h19") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[64] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[65] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[66] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[67] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[68] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[69] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[70] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[71] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[72] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[73] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[74] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[75] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[76] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[77] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[78] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[79] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[80] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[81] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[82] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[83] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[84] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[85] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[86] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[87] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[88] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[89] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[90] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[91] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[92] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[93] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[94] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[95] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[96] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[97] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[98] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[99] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[100] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[101] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[102] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[103] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[104] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[105] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[106] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[107] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[108] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[109] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[110] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[111] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[112] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[113] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[114] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[115] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[116] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[117] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[118] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[119] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[120] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[121] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[122] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[123] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[124] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[125] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[126] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[127] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    wire twi_sin_tb1_p10 : UInt<12>[128] @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[0] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[1] <= UInt<12>("h19") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[2] <= UInt<12>("h32") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[3] <= UInt<12>("h4b") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[4] <= UInt<12>("h64") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[5] <= UInt<12>("h7d") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[6] <= UInt<12>("h96") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[7] <= UInt<12>("haf") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[8] <= UInt<12>("hc8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[9] <= UInt<12>("he0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[10] <= UInt<12>("hf9") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[11] <= UInt<12>("h111") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[12] <= UInt<12>("h129") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[13] <= UInt<12>("h141") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[14] <= UInt<12>("h159") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[15] <= UInt<12>("h171") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[16] <= UInt<12>("h188") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[17] <= UInt<12>("h19f") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[18] <= UInt<12>("h1b6") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[19] <= UInt<12>("h1cc") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[20] <= UInt<12>("h1e3") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[21] <= UInt<12>("h1f9") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[22] <= UInt<12>("h20e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[23] <= UInt<12>("h224") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[24] <= UInt<12>("h239") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[25] <= UInt<12>("h24e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[26] <= UInt<12>("h262") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[27] <= UInt<12>("h276") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[28] <= UInt<12>("h28a") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[29] <= UInt<12>("h29d") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[30] <= UInt<12>("h2b0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[31] <= UInt<12>("h2c2") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[32] <= UInt<12>("h2d4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[33] <= UInt<12>("h2e6") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[34] <= UInt<12>("h2f7") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[35] <= UInt<12>("h307") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[36] <= UInt<12>("h318") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[37] <= UInt<12>("h327") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[38] <= UInt<12>("h336") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[39] <= UInt<12>("h345") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[40] <= UInt<12>("h353") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[41] <= UInt<12>("h361") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[42] <= UInt<12>("h36e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[43] <= UInt<12>("h37b") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[44] <= UInt<12>("h387") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[45] <= UInt<12>("h393") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[46] <= UInt<12>("h39e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[47] <= UInt<12>("h3a8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[48] <= UInt<12>("h3b2") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[49] <= UInt<12>("h3bb") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[50] <= UInt<12>("h3c4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[51] <= UInt<12>("h3cc") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[52] <= UInt<12>("h3d4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[53] <= UInt<12>("h3db") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[54] <= UInt<12>("h3e1") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[55] <= UInt<12>("h3e7") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[56] <= UInt<12>("h3ec") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[57] <= UInt<12>("h3f1") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[58] <= UInt<12>("h3f5") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[59] <= UInt<12>("h3f8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[60] <= UInt<12>("h3fb") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[61] <= UInt<12>("h3fd") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[62] <= UInt<12>("h3ff") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[63] <= UInt<12>("h400") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[64] <= UInt<12>("h400") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[65] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[66] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[67] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[68] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[69] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[70] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[71] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[72] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[73] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[74] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[75] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[76] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[77] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[78] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[79] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[80] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[81] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[82] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[83] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[84] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[85] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[86] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[87] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[88] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[89] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[90] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[91] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[92] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[93] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[94] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[95] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[96] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[97] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[98] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[99] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[100] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[101] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[102] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[103] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[104] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[105] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[106] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[107] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[108] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[109] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[110] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[111] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[112] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[113] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[114] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[115] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[116] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[117] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[118] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[119] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[120] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[121] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[122] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[123] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[124] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[125] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[126] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[127] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    node _idx_r_T = bits(io.nk, 6, 6) @[FFTTwiddle.scala 35:27]
    node _idx_r_T_1 = bits(io.nk, 5, 0) @[FFTTwiddle.scala 35:50]
    node _idx_r_T_2 = orr(_idx_r_T_1) @[FFTTwiddle.scala 35:73]
    node _idx_r_T_3 = and(_idx_r_T, _idx_r_T_2) @[FFTTwiddle.scala 35:43]
    node _idx_r_T_4 = not(io.nk) @[FFTTwiddle.scala 35:80]
    node _idx_r_T_5 = add(_idx_r_T_4, UInt<1>("h1")) @[FFTTwiddle.scala 35:87]
    node _idx_r_T_6 = tail(_idx_r_T_5, 1) @[FFTTwiddle.scala 35:87]
    node idx_r = mux(_idx_r_T_3, _idx_r_T_6, io.nk) @[FFTTwiddle.scala 35:20]
    node _lut_chg_sign_flag_r_T = bits(io.nk, 6, 6) @[FFTTwiddle.scala 37:36]
    node _lut_chg_sign_flag_r_T_1 = bits(io.nk, 5, 0) @[FFTTwiddle.scala 37:60]
    node _lut_chg_sign_flag_r_T_2 = orr(_lut_chg_sign_flag_r_T_1) @[FFTTwiddle.scala 37:83]
    node lut_chg_sign_flag_r = and(_lut_chg_sign_flag_r_T, _lut_chg_sign_flag_r_T_2) @[FFTTwiddle.scala 37:52]
    node _lut_w_r_T = or(idx_r, UInt<7>("h0"))
    node _lut_w_r_T_1 = bits(_lut_w_r_T, 6, 0)
    node idx_i = bits(idx_r, 6, 0) @[FFTTwiddle.scala 41:22]
    node _chg_sign_flag_r_T = eq(io.twiLutCaseIndex, UInt<2>("h2")) @[FFTTwiddle.scala 47:51]
    node _chg_sign_flag_r_T_1 = eq(lut_chg_sign_flag_r, UInt<1>("h0")) @[FFTTwiddle.scala 47:61]
    node chg_sign_flag_r = mux(_chg_sign_flag_r_T, _chg_sign_flag_r_T_1, lut_chg_sign_flag_r) @[FFTTwiddle.scala 47:30]
    node _chg_sign_flag_i_T = eq(io.twiLutCaseIndex, UInt<1>("h1")) @[FFTTwiddle.scala 48:51]
    node _chg_sign_flag_i_T_1 = eq(UInt<1>("h1"), UInt<1>("h0")) @[FFTTwiddle.scala 48:61]
    node chg_sign_flag_i = mux(_chg_sign_flag_i_T, _chg_sign_flag_i_T_1, UInt<1>("h1")) @[FFTTwiddle.scala 48:30]
    node _io_wR_T = not(twi_cos_tb1_p10[_lut_w_r_T_1]) @[FFTTwiddle.scala 50:36]
    node _io_wR_T_1 = add(_io_wR_T, UInt<1>("h1")) @[FFTTwiddle.scala 50:45]
    node _io_wR_T_2 = tail(_io_wR_T_1, 1) @[FFTTwiddle.scala 50:45]
    node _io_wR_T_3 = mux(chg_sign_flag_r, _io_wR_T_2, twi_cos_tb1_p10[_lut_w_r_T_1]) @[FFTTwiddle.scala 50:17]
    io.wR <= _io_wR_T_3 @[FFTTwiddle.scala 50:11]
    node _io_wI_T = not(twi_sin_tb1_p10[idx_i]) @[FFTTwiddle.scala 51:36]
    node _io_wI_T_1 = add(_io_wI_T, UInt<1>("h1")) @[FFTTwiddle.scala 51:45]
    node _io_wI_T_2 = tail(_io_wI_T_1, 1) @[FFTTwiddle.scala 51:45]
    node _io_wI_T_3 = mux(chg_sign_flag_i, _io_wI_T_2, twi_sin_tb1_p10[idx_i]) @[FFTTwiddle.scala 51:17]
    io.wI <= _io_wI_T_3 @[FFTTwiddle.scala 51:11]

  module FFTMultiply_3 :
    output io : { flip a : UInt<18>, flip b : UInt<18>, flip tc : UInt<1>, product : UInt<36>}

    node _temp_a_T = bits(io.a, 17, 17) @[FFTMultiply.scala 14:26]
    node _temp_a_T_1 = not(io.a) @[FFTMultiply.scala 14:51]
    node _temp_a_T_2 = add(_temp_a_T_1, UInt<1>("h1")) @[FFTMultiply.scala 14:57]
    node _temp_a_T_3 = tail(_temp_a_T_2, 1) @[FFTMultiply.scala 14:57]
    node temp_a = mux(_temp_a_T, _temp_a_T_3, io.a) @[FFTMultiply.scala 14:21]
    node _temp_b_T = bits(io.b, 17, 17) @[FFTMultiply.scala 15:26]
    node _temp_b_T_1 = not(io.b) @[FFTMultiply.scala 15:51]
    node _temp_b_T_2 = add(_temp_b_T_1, UInt<1>("h1")) @[FFTMultiply.scala 15:57]
    node _temp_b_T_3 = tail(_temp_b_T_2, 1) @[FFTMultiply.scala 15:57]
    node temp_b = mux(_temp_b_T, _temp_b_T_3, io.b) @[FFTMultiply.scala 15:21]
    node long_temp1 = mul(temp_a, temp_b) @[FFTMultiply.scala 17:29]
    node _long_temp2_T = sub(long_temp1, UInt<1>("h1")) @[FFTMultiply.scala 18:35]
    node _long_temp2_T_1 = tail(_long_temp2_T, 1) @[FFTMultiply.scala 18:35]
    node long_temp2 = not(_long_temp2_T_1) @[FFTMultiply.scala 18:22]
    node _io_product_T = xor(io.a, io.a) @[FFTMultiply.scala 20:31]
    node _io_product_T_1 = xorr(_io_product_T) @[FFTMultiply.scala 20:39]
    node _io_product_T_2 = neq(_io_product_T_1, UInt<1>("h0")) @[FFTMultiply.scala 20:44]
    node _io_product_T_3 = xor(io.b, io.b) @[FFTMultiply.scala 20:67]
    node _io_product_T_4 = xorr(_io_product_T_3) @[FFTMultiply.scala 20:75]
    node _io_product_T_5 = neq(_io_product_T_4, UInt<1>("h0")) @[FFTMultiply.scala 20:80]
    node _io_product_T_6 = or(_io_product_T_2, _io_product_T_5) @[FFTMultiply.scala 20:57]
    node _io_product_T_7 = xor(io.tc, io.tc) @[FFTMultiply.scala 20:104]
    node _io_product_T_8 = xorr(_io_product_T_7) @[FFTMultiply.scala 20:113]
    node _io_product_T_9 = neq(_io_product_T_8, UInt<1>("h0")) @[FFTMultiply.scala 20:118]
    node _io_product_T_10 = or(_io_product_T_6, _io_product_T_9) @[FFTMultiply.scala 20:93]
    node _io_product_T_11 = mux(UInt<1>("h1"), UInt<36>("hfffffffff"), UInt<36>("h0")) @[Bitwise.scala 77:12]
    node _io_product_T_12 = bits(io.a, 17, 17) @[FFTMultiply.scala 20:194]
    node _io_product_T_13 = bits(io.b, 17, 17) @[FFTMultiply.scala 20:223]
    node _io_product_T_14 = xor(_io_product_T_12, _io_product_T_13) @[FFTMultiply.scala 20:217]
    node _io_product_T_15 = orr(long_temp1) @[FFTMultiply.scala 20:262]
    node _io_product_T_16 = and(_io_product_T_14, _io_product_T_15) @[FFTMultiply.scala 20:247]
    node _io_product_T_17 = cat(UInt<1>("h1"), long_temp2) @[Cat.scala 33:92]
    node _io_product_T_18 = cat(UInt<1>("h0"), long_temp1) @[Cat.scala 33:92]
    node _io_product_T_19 = mux(_io_product_T_16, _io_product_T_17, _io_product_T_18) @[FFTMultiply.scala 20:187]
    node _io_product_T_20 = mul(io.a, io.b) @[FFTMultiply.scala 20:329]
    node _io_product_T_21 = mux(io.tc, _io_product_T_19, _io_product_T_20) @[FFTMultiply.scala 20:176]
    node _io_product_T_22 = mux(_io_product_T_10, _io_product_T_11, _io_product_T_21) @[FFTMultiply.scala 20:22]
    io.product <= _io_product_T_22 @[FFTMultiply.scala 20:16]

  module FFT3PipelineCalc_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip dataInSR : UInt, flip dataInSI : UInt, flip dataInTR : UInt, flip dataInTI : UInt, dataOutSR3c : UInt, dataOutSI3c : UInt, dataOutTR3c : UInt, dataOutTI3c : UInt, flip nk : UInt, flip rShiftSym : UInt<1>, flip isFFT : UInt<1>, flip procMode : UInt<1>, flip state1c : UInt<1>, flip state2c : UInt<1>}

    clock is invalid
    reset is invalid
    io is invalid
    node _dataInSRRnd_T = bits(io.dataInSR, 15, 15) @[FFT3PipelineCalc.scala 28:38]
    node _dataInSRRnd_T_1 = bits(io.dataInSR, 15, 1) @[FFT3PipelineCalc.scala 28:69]
    node _dataInSRRnd_T_2 = cat(_dataInSRRnd_T, _dataInSRRnd_T_1) @[Cat.scala 33:92]
    node _dataInSRRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInSRRnd_T_4 = bits(io.dataInSR, 0, 0) @[FFT3PipelineCalc.scala 28:138]
    node _dataInSRRnd_T_5 = cat(_dataInSRRnd_T_3, _dataInSRRnd_T_4) @[Cat.scala 33:92]
    node _dataInSRRnd_T_6 = add(_dataInSRRnd_T_2, _dataInSRRnd_T_5) @[FFT3PipelineCalc.scala 28:92]
    node dataInSRRnd = tail(_dataInSRRnd_T_6, 1) @[FFT3PipelineCalc.scala 28:92]
    node _dataInSIRnd_T = bits(io.dataInSI, 15, 15) @[FFT3PipelineCalc.scala 29:38]
    node _dataInSIRnd_T_1 = bits(io.dataInSI, 15, 1) @[FFT3PipelineCalc.scala 29:69]
    node _dataInSIRnd_T_2 = cat(_dataInSIRnd_T, _dataInSIRnd_T_1) @[Cat.scala 33:92]
    node _dataInSIRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInSIRnd_T_4 = bits(io.dataInSI, 0, 0) @[FFT3PipelineCalc.scala 29:138]
    node _dataInSIRnd_T_5 = cat(_dataInSIRnd_T_3, _dataInSIRnd_T_4) @[Cat.scala 33:92]
    node _dataInSIRnd_T_6 = add(_dataInSIRnd_T_2, _dataInSIRnd_T_5) @[FFT3PipelineCalc.scala 29:92]
    node dataInSIRnd = tail(_dataInSIRnd_T_6, 1) @[FFT3PipelineCalc.scala 29:92]
    node _dataInTRRnd_T = bits(io.dataInTR, 15, 15) @[FFT3PipelineCalc.scala 30:38]
    node _dataInTRRnd_T_1 = bits(io.dataInTR, 15, 1) @[FFT3PipelineCalc.scala 30:69]
    node _dataInTRRnd_T_2 = cat(_dataInTRRnd_T, _dataInTRRnd_T_1) @[Cat.scala 33:92]
    node _dataInTRRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInTRRnd_T_4 = bits(io.dataInTR, 0, 0) @[FFT3PipelineCalc.scala 30:138]
    node _dataInTRRnd_T_5 = cat(_dataInTRRnd_T_3, _dataInTRRnd_T_4) @[Cat.scala 33:92]
    node _dataInTRRnd_T_6 = add(_dataInTRRnd_T_2, _dataInTRRnd_T_5) @[FFT3PipelineCalc.scala 30:92]
    node dataInTRRnd = tail(_dataInTRRnd_T_6, 1) @[FFT3PipelineCalc.scala 30:92]
    node _dataInTIRnd_T = bits(io.dataInTI, 15, 15) @[FFT3PipelineCalc.scala 31:38]
    node _dataInTIRnd_T_1 = bits(io.dataInTI, 15, 1) @[FFT3PipelineCalc.scala 31:69]
    node _dataInTIRnd_T_2 = cat(_dataInTIRnd_T, _dataInTIRnd_T_1) @[Cat.scala 33:92]
    node _dataInTIRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInTIRnd_T_4 = bits(io.dataInTI, 0, 0) @[FFT3PipelineCalc.scala 31:138]
    node _dataInTIRnd_T_5 = cat(_dataInTIRnd_T_3, _dataInTIRnd_T_4) @[Cat.scala 33:92]
    node _dataInTIRnd_T_6 = add(_dataInTIRnd_T_2, _dataInTIRnd_T_5) @[FFT3PipelineCalc.scala 31:92]
    node dataInTIRnd = tail(_dataInTIRnd_T_6, 1) @[FFT3PipelineCalc.scala 31:92]
    node dataInSR1c = mux(io.rShiftSym, dataInSRRnd, io.dataInSR) @[FFT3PipelineCalc.scala 33:25]
    node dataInSI1c = mux(io.rShiftSym, dataInSIRnd, io.dataInSI) @[FFT3PipelineCalc.scala 34:25]
    node dataInTR1c = mux(io.rShiftSym, dataInTRRnd, io.dataInTR) @[FFT3PipelineCalc.scala 35:25]
    node dataInTI1c = mux(io.rShiftSym, dataInTIRnd, io.dataInTI) @[FFT3PipelineCalc.scala 36:25]
    reg nk1c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      nk1c <= io.nk @[Reg.scala 36:22]
    node twiLutCaseIdx1c = mux(io.isFFT, UInt<2>("h0"), UInt<2>("h1")) @[FFT3PipelineCalc.scala 42:30]
    inst fftTwiddle of FFTTwiddle_3 @[FFT3PipelineCalc.scala 44:28]
    fftTwiddle.io.nk <= nk1c @[FFT3PipelineCalc.scala 45:22]
    fftTwiddle.io.twiLutCaseIndex <= twiLutCaseIdx1c @[FFT3PipelineCalc.scala 46:35]
    reg sR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      sR2c <= dataInSR1c @[Reg.scala 36:22]
    reg sI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      sI2c <= dataInSI1c @[Reg.scala 36:22]
    reg tR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      tR2c <= dataInTR1c @[Reg.scala 36:22]
    reg tI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      tI2c <= dataInTI1c @[Reg.scala 36:22]
    node _wR2c_T = mux(UInt<1>("h0"), UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 77:12]
    node _wR2c_T_1 = cat(fftTwiddle.io.wR, _wR2c_T) @[Cat.scala 33:92]
    reg wR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      wR2c <= _wR2c_T_1 @[Reg.scala 36:22]
    node _wI2c_T = mux(UInt<1>("h0"), UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 77:12]
    node _wI2c_T_1 = cat(fftTwiddle.io.wI, _wI2c_T) @[Cat.scala 33:92]
    reg wI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      wI2c <= _wI2c_T_1 @[Reg.scala 36:22]
    node _addTRI_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 57:34]
    node _addTRI_T_1 = bits(_addTRI_T, 0, 0) @[Bitwise.scala 77:15]
    node _addTRI_T_2 = mux(_addTRI_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _addTRI_T_3 = cat(_addTRI_T_2, tR2c) @[Cat.scala 33:92]
    node _addTRI_T_4 = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 57:79]
    node _addTRI_T_5 = bits(_addTRI_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _addTRI_T_6 = mux(_addTRI_T_5, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _addTRI_T_7 = cat(_addTRI_T_6, tI2c) @[Cat.scala 33:92]
    node _addTRI_T_8 = add(_addTRI_T_3, _addTRI_T_7) @[FFT3PipelineCalc.scala 57:61]
    node addTRI = tail(_addTRI_T_8, 1) @[FFT3PipelineCalc.scala 57:61]
    node _addWRI_T = bits(wR2c, 16, 16) @[FFT3PipelineCalc.scala 58:26]
    node _addWRI_T_1 = cat(_addWRI_T, wR2c) @[Cat.scala 33:92]
    node _addWRI_T_2 = bits(wI2c, 16, 16) @[FFT3PipelineCalc.scala 58:62]
    node _addWRI_T_3 = cat(_addWRI_T_2, wI2c) @[Cat.scala 33:92]
    node _addWRI_T_4 = add(_addWRI_T_1, _addWRI_T_3) @[FFT3PipelineCalc.scala 58:52]
    node addWRI = tail(_addWRI_T_4, 1) @[FFT3PipelineCalc.scala 58:52]
    inst fftMultiply of FFTMultiply_3 @[FFT3PipelineCalc.scala 59:29]
    fftMultiply.io.a <= addTRI @[FFT3PipelineCalc.scala 60:22]
    fftMultiply.io.b <= addWRI @[FFT3PipelineCalc.scala 61:22]
    fftMultiply.io.tc <= UInt<1>("h1") @[FFT3PipelineCalc.scala 62:23]
    node _multRPre_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 65:51]
    node _multRPre_T_1 = bits(_multRPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _multRPre_T_2 = mux(_multRPre_T_1, UInt<17>("h1ffff"), UInt<17>("h0")) @[Bitwise.scala 77:12]
    node _multRPre_T_3 = cat(_multRPre_T_2, tR2c) @[Cat.scala 33:92]
    node _multRPre_T_4 = bits(wR2c, 16, 16) @[FFT3PipelineCalc.scala 65:111]
    node _multRPre_T_5 = bits(_multRPre_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _multRPre_T_6 = mux(_multRPre_T_5, UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
    node _multRPre_T_7 = cat(_multRPre_T_6, wR2c) @[Cat.scala 33:92]
    node multRPre = mul(_multRPre_T_3, _multRPre_T_7) @[FFT3PipelineCalc.scala 65:78]
    node multR = bits(multRPre, 32, 0) @[FFT3PipelineCalc.scala 66:25]
    node _multIPre_T = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 68:51]
    node _multIPre_T_1 = bits(_multIPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _multIPre_T_2 = mux(_multIPre_T_1, UInt<17>("h1ffff"), UInt<17>("h0")) @[Bitwise.scala 77:12]
    node _multIPre_T_3 = cat(_multIPre_T_2, tI2c) @[Cat.scala 33:92]
    node _multIPre_T_4 = bits(wI2c, 16, 16) @[FFT3PipelineCalc.scala 68:111]
    node _multIPre_T_5 = bits(_multIPre_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _multIPre_T_6 = mux(_multIPre_T_5, UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
    node _multIPre_T_7 = cat(_multIPre_T_6, wI2c) @[Cat.scala 33:92]
    node multIPre = mul(_multIPre_T_3, _multIPre_T_7) @[FFT3PipelineCalc.scala 68:78]
    node multI = bits(multIPre, 32, 0) @[FFT3PipelineCalc.scala 69:25]
    node _qR2cKernel_T = bits(multR, 32, 32) @[FFT3PipelineCalc.scala 71:31]
    node _qR2cKernel_T_1 = bits(multR, 30, 15) @[FFT3PipelineCalc.scala 71:62]
    node _qR2cKernel_T_2 = cat(_qR2cKernel_T, _qR2cKernel_T_1) @[Cat.scala 33:92]
    node _qR2cKernel_T_3 = bits(multI, 32, 32) @[FFT3PipelineCalc.scala 71:119]
    node _qR2cKernel_T_4 = bits(multI, 30, 15) @[FFT3PipelineCalc.scala 71:150]
    node _qR2cKernel_T_5 = cat(_qR2cKernel_T_3, _qR2cKernel_T_4) @[Cat.scala 33:92]
    node _qR2cKernel_T_6 = sub(_qR2cKernel_T_2, _qR2cKernel_T_5) @[FFT3PipelineCalc.scala 71:108]
    node qR2cKernel = tail(_qR2cKernel_T_6, 1) @[FFT3PipelineCalc.scala 71:108]
    node _qI2cKernel_T = bits(fftMultiply.io.product, 35, 35) @[FFT3PipelineCalc.scala 72:31]
    node _qI2cKernel_T_1 = bits(fftMultiply.io.product, 30, 15) @[FFT3PipelineCalc.scala 72:66]
    node _qI2cKernel_T_2 = cat(_qI2cKernel_T, _qI2cKernel_T_1) @[Cat.scala 33:92]
    node _qI2cKernel_T_3 = bits(multR, 32, 32) @[FFT3PipelineCalc.scala 72:123]
    node _qI2cKernel_T_4 = bits(multR, 30, 15) @[FFT3PipelineCalc.scala 72:154]
    node _qI2cKernel_T_5 = cat(_qI2cKernel_T_3, _qI2cKernel_T_4) @[Cat.scala 33:92]
    node _qI2cKernel_T_6 = sub(_qI2cKernel_T_2, _qI2cKernel_T_5) @[FFT3PipelineCalc.scala 72:112]
    node _qI2cKernel_T_7 = tail(_qI2cKernel_T_6, 1) @[FFT3PipelineCalc.scala 72:112]
    node _qI2cKernel_T_8 = bits(multI, 32, 32) @[FFT3PipelineCalc.scala 72:211]
    node _qI2cKernel_T_9 = bits(multI, 30, 15) @[FFT3PipelineCalc.scala 72:242]
    node _qI2cKernel_T_10 = cat(_qI2cKernel_T_8, _qI2cKernel_T_9) @[Cat.scala 33:92]
    node _qI2cKernel_T_11 = sub(_qI2cKernel_T_7, _qI2cKernel_T_10) @[FFT3PipelineCalc.scala 72:200]
    node qI2cKernel = tail(_qI2cKernel_T_11, 1) @[FFT3PipelineCalc.scala 72:200]
    node _qR2cProc_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 74:28]
    node qR2cProc = cat(_qR2cProc_T, tR2c) @[Cat.scala 33:92]
    node _qI2cProc_T = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 75:29]
    node _qI2cProc_T_1 = cat(_qI2cProc_T, tI2c) @[Cat.scala 33:92]
    node _qI2cProc_T_2 = not(_qI2cProc_T_1) @[FFT3PipelineCalc.scala 75:20]
    node _qI2cProc_T_3 = add(_qI2cProc_T_2, UInt<1>("h1")) @[FFT3PipelineCalc.scala 75:55]
    node qI2cProc = tail(_qI2cProc_T_3, 1) @[FFT3PipelineCalc.scala 75:55]
    node qR2c = mux(io.procMode, qR2cProc, qR2cKernel) @[FFT3PipelineCalc.scala 77:19]
    node qI2c = mux(io.procMode, qI2cProc, qI2cKernel) @[FFT3PipelineCalc.scala 78:19]
    reg sR3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      sR3c <= sR2c @[Reg.scala 36:22]
    reg sI3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      sI3c <= sI2c @[Reg.scala 36:22]
    reg qR3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      qR3c <= qR2c @[Reg.scala 36:22]
    reg qI3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      qI3c <= qI2c @[Reg.scala 36:22]
    node _xR3cPre_T = bits(sR3c, 15, 15) @[FFT3PipelineCalc.scala 86:35]
    node _xR3cPre_T_1 = bits(_xR3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _xR3cPre_T_2 = mux(_xR3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _xR3cPre_T_3 = cat(_xR3cPre_T_2, sR3c) @[Cat.scala 33:92]
    node _xR3cPre_T_4 = bits(qR3c, 16, 16) @[FFT3PipelineCalc.scala 86:72]
    node _xR3cPre_T_5 = cat(_xR3cPre_T_4, qR3c) @[Cat.scala 33:92]
    node _xR3cPre_T_6 = add(_xR3cPre_T_3, _xR3cPre_T_5) @[FFT3PipelineCalc.scala 86:62]
    node xR3cPre = tail(_xR3cPre_T_6, 1) @[FFT3PipelineCalc.scala 86:62]
    node _xI3cPre_T = bits(sI3c, 15, 15) @[FFT3PipelineCalc.scala 87:35]
    node _xI3cPre_T_1 = bits(_xI3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _xI3cPre_T_2 = mux(_xI3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _xI3cPre_T_3 = cat(_xI3cPre_T_2, sI3c) @[Cat.scala 33:92]
    node _xI3cPre_T_4 = bits(qI3c, 16, 16) @[FFT3PipelineCalc.scala 87:72]
    node _xI3cPre_T_5 = cat(_xI3cPre_T_4, qI3c) @[Cat.scala 33:92]
    node _xI3cPre_T_6 = add(_xI3cPre_T_3, _xI3cPre_T_5) @[FFT3PipelineCalc.scala 87:62]
    node xI3cPre = tail(_xI3cPre_T_6, 1) @[FFT3PipelineCalc.scala 87:62]
    node _xR3c_T = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:28]
    node _xR3c_T_1 = bits(xR3cPre, 16, 16) @[FFT3PipelineCalc.scala 89:56]
    node _xR3c_T_2 = xor(_xR3c_T, _xR3c_T_1) @[FFT3PipelineCalc.scala 89:47]
    node _xR3c_T_3 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:88]
    node _xR3c_T_4 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:139]
    node _xR3c_T_5 = bits(_xR3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _xR3c_T_6 = mux(_xR3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xR3c_T_7 = not(_xR3c_T_6) @[FFT3PipelineCalc.scala 89:108]
    node _xR3c_T_8 = cat(_xR3c_T_3, _xR3c_T_7) @[Cat.scala 33:92]
    node _xR3c_T_9 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:173]
    node _xR3c_T_10 = bits(xR3cPre, 15, 15) @[FFT3PipelineCalc.scala 89:201]
    node _xR3c_T_11 = xor(_xR3c_T_9, _xR3c_T_10) @[FFT3PipelineCalc.scala 89:192]
    node _xR3c_T_12 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:233]
    node _xR3c_T_13 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:284]
    node _xR3c_T_14 = bits(_xR3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _xR3c_T_15 = mux(_xR3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xR3c_T_16 = not(_xR3c_T_15) @[FFT3PipelineCalc.scala 89:253]
    node _xR3c_T_17 = cat(_xR3c_T_12, _xR3c_T_16) @[Cat.scala 33:92]
    node _xR3c_T_18 = bits(xR3cPre, 15, 0) @[FFT3PipelineCalc.scala 89:313]
    node _xR3c_T_19 = mux(_xR3c_T_11, _xR3c_T_17, _xR3c_T_18) @[FFT3PipelineCalc.scala 89:164]
    node xR3c = mux(_xR3c_T_2, _xR3c_T_8, _xR3c_T_19) @[FFT3PipelineCalc.scala 89:19]
    node _xI3c_T = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:28]
    node _xI3c_T_1 = bits(xI3cPre, 16, 16) @[FFT3PipelineCalc.scala 90:56]
    node _xI3c_T_2 = xor(_xI3c_T, _xI3c_T_1) @[FFT3PipelineCalc.scala 90:47]
    node _xI3c_T_3 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:88]
    node _xI3c_T_4 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:139]
    node _xI3c_T_5 = bits(_xI3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _xI3c_T_6 = mux(_xI3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xI3c_T_7 = not(_xI3c_T_6) @[FFT3PipelineCalc.scala 90:108]
    node _xI3c_T_8 = cat(_xI3c_T_3, _xI3c_T_7) @[Cat.scala 33:92]
    node _xI3c_T_9 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:173]
    node _xI3c_T_10 = bits(xI3cPre, 15, 15) @[FFT3PipelineCalc.scala 90:201]
    node _xI3c_T_11 = xor(_xI3c_T_9, _xI3c_T_10) @[FFT3PipelineCalc.scala 90:192]
    node _xI3c_T_12 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:233]
    node _xI3c_T_13 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:284]
    node _xI3c_T_14 = bits(_xI3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _xI3c_T_15 = mux(_xI3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xI3c_T_16 = not(_xI3c_T_15) @[FFT3PipelineCalc.scala 90:253]
    node _xI3c_T_17 = cat(_xI3c_T_12, _xI3c_T_16) @[Cat.scala 33:92]
    node _xI3c_T_18 = bits(xI3cPre, 15, 0) @[FFT3PipelineCalc.scala 90:313]
    node _xI3c_T_19 = mux(_xI3c_T_11, _xI3c_T_17, _xI3c_T_18) @[FFT3PipelineCalc.scala 90:164]
    node xI3c = mux(_xI3c_T_2, _xI3c_T_8, _xI3c_T_19) @[FFT3PipelineCalc.scala 90:19]
    io.dataOutSR3c <= xR3c @[FFT3PipelineCalc.scala 92:20]
    io.dataOutSI3c <= xI3c @[FFT3PipelineCalc.scala 93:20]
    node _yR3cPre_T = bits(sR3c, 15, 15) @[FFT3PipelineCalc.scala 95:35]
    node _yR3cPre_T_1 = bits(_yR3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _yR3cPre_T_2 = mux(_yR3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _yR3cPre_T_3 = cat(_yR3cPre_T_2, sR3c) @[Cat.scala 33:92]
    node _yR3cPre_T_4 = bits(qR3c, 16, 16) @[FFT3PipelineCalc.scala 95:72]
    node _yR3cPre_T_5 = cat(_yR3cPre_T_4, qR3c) @[Cat.scala 33:92]
    node _yR3cPre_T_6 = sub(_yR3cPre_T_3, _yR3cPre_T_5) @[FFT3PipelineCalc.scala 95:62]
    node yR3cPre = tail(_yR3cPre_T_6, 1) @[FFT3PipelineCalc.scala 95:62]
    node _yI3cPre_T = bits(sI3c, 15, 15) @[FFT3PipelineCalc.scala 96:35]
    node _yI3cPre_T_1 = bits(_yI3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _yI3cPre_T_2 = mux(_yI3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _yI3cPre_T_3 = cat(_yI3cPre_T_2, sI3c) @[Cat.scala 33:92]
    node _yI3cPre_T_4 = bits(qI3c, 16, 16) @[FFT3PipelineCalc.scala 96:72]
    node _yI3cPre_T_5 = cat(_yI3cPre_T_4, qI3c) @[Cat.scala 33:92]
    node _yI3cPre_T_6 = sub(_yI3cPre_T_3, _yI3cPre_T_5) @[FFT3PipelineCalc.scala 96:62]
    node yI3cPre = tail(_yI3cPre_T_6, 1) @[FFT3PipelineCalc.scala 96:62]
    node _yR3c_T = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:28]
    node _yR3c_T_1 = bits(yR3cPre, 16, 16) @[FFT3PipelineCalc.scala 98:56]
    node _yR3c_T_2 = xor(_yR3c_T, _yR3c_T_1) @[FFT3PipelineCalc.scala 98:47]
    node _yR3c_T_3 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:88]
    node _yR3c_T_4 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:139]
    node _yR3c_T_5 = bits(_yR3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _yR3c_T_6 = mux(_yR3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yR3c_T_7 = not(_yR3c_T_6) @[FFT3PipelineCalc.scala 98:108]
    node _yR3c_T_8 = cat(_yR3c_T_3, _yR3c_T_7) @[Cat.scala 33:92]
    node _yR3c_T_9 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:173]
    node _yR3c_T_10 = bits(yR3cPre, 15, 15) @[FFT3PipelineCalc.scala 98:201]
    node _yR3c_T_11 = xor(_yR3c_T_9, _yR3c_T_10) @[FFT3PipelineCalc.scala 98:192]
    node _yR3c_T_12 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:233]
    node _yR3c_T_13 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:284]
    node _yR3c_T_14 = bits(_yR3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _yR3c_T_15 = mux(_yR3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yR3c_T_16 = not(_yR3c_T_15) @[FFT3PipelineCalc.scala 98:253]
    node _yR3c_T_17 = cat(_yR3c_T_12, _yR3c_T_16) @[Cat.scala 33:92]
    node _yR3c_T_18 = bits(yR3cPre, 15, 0) @[FFT3PipelineCalc.scala 98:313]
    node _yR3c_T_19 = mux(_yR3c_T_11, _yR3c_T_17, _yR3c_T_18) @[FFT3PipelineCalc.scala 98:164]
    node yR3c = mux(_yR3c_T_2, _yR3c_T_8, _yR3c_T_19) @[FFT3PipelineCalc.scala 98:19]
    node _yI3c_T = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:28]
    node _yI3c_T_1 = bits(yI3cPre, 16, 16) @[FFT3PipelineCalc.scala 99:56]
    node _yI3c_T_2 = xor(_yI3c_T, _yI3c_T_1) @[FFT3PipelineCalc.scala 99:47]
    node _yI3c_T_3 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:88]
    node _yI3c_T_4 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:139]
    node _yI3c_T_5 = bits(_yI3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _yI3c_T_6 = mux(_yI3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yI3c_T_7 = not(_yI3c_T_6) @[FFT3PipelineCalc.scala 99:108]
    node _yI3c_T_8 = cat(_yI3c_T_3, _yI3c_T_7) @[Cat.scala 33:92]
    node _yI3c_T_9 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:173]
    node _yI3c_T_10 = bits(yI3cPre, 15, 15) @[FFT3PipelineCalc.scala 99:201]
    node _yI3c_T_11 = xor(_yI3c_T_9, _yI3c_T_10) @[FFT3PipelineCalc.scala 99:192]
    node _yI3c_T_12 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:233]
    node _yI3c_T_13 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:284]
    node _yI3c_T_14 = bits(_yI3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _yI3c_T_15 = mux(_yI3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yI3c_T_16 = not(_yI3c_T_15) @[FFT3PipelineCalc.scala 99:253]
    node _yI3c_T_17 = cat(_yI3c_T_12, _yI3c_T_16) @[Cat.scala 33:92]
    node _yI3c_T_18 = bits(yI3cPre, 15, 0) @[FFT3PipelineCalc.scala 99:313]
    node _yI3c_T_19 = mux(_yI3c_T_11, _yI3c_T_17, _yI3c_T_18) @[FFT3PipelineCalc.scala 99:164]
    node yI3c = mux(_yI3c_T_2, _yI3c_T_8, _yI3c_T_19) @[FFT3PipelineCalc.scala 99:19]
    io.dataOutTR3c <= yR3c @[FFT3PipelineCalc.scala 101:20]
    io.dataOutTI3c <= yI3c @[FFT3PipelineCalc.scala 102:20]

  module FFTEngine :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip readDataSram0Bank : UInt<32>[8], flip readDataSram1Bank : UInt<32>[8], readEnableSram0Bank : UInt<1>[8], readEnableSram1Bank : UInt<1>[8], writeDataSram0Bank : UInt<32>[8], writeDataSram1Bank : UInt<32>[8], writeEnableSram0Bank : UInt<1>[8], writeEnableSram1Bank : UInt<1>[8], addrSram0Bank : UInt<4>[8], addrSram1Bank : UInt<4>[8], fftDone : UInt<1>, flip fftEngineKick : UInt<1>, flip fftMode : UInt<1>, flip fftRShiftP0 : UInt<1>[7]}

    clock is invalid
    reset is invalid
    io is invalid
    node isFFT = eq(io.fftMode, UInt<1>("h0")) @[FFTEngine.scala 43:17]
    reg stateReg : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[FFTEngine.scala 45:27]
    reg addrSProc : UInt<7>, clock with :
      reset => (reset, UInt<7>("h0")) @[FFTEngine.scala 47:29]
    reg phaseCount : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[FFTEngine.scala 49:29]
    node _T = eq(UInt<3>("h0"), stateReg) @[FFTEngine.scala 51:22]
    when _T : @[FFTEngine.scala 51:22]
      when io.fftEngineKick : @[FFTEngine.scala 53:36]
        node _stateReg_T = mux(isFFT, UInt<3>("h1"), UInt<3>("h4")) @[FFTEngine.scala 54:32]
        stateReg <= _stateReg_T @[FFTEngine.scala 54:26]
      else :
        stateReg <= stateReg @[FFTEngine.scala 56:26]
    else :
      node _T_1 = eq(UInt<3>("h1"), stateReg) @[FFTEngine.scala 51:22]
      when _T_1 : @[FFTEngine.scala 51:22]
        node _T_2 = eq(addrSProc, UInt<4>("hf")) @[FFTEngine.scala 60:29]
        when _T_2 : @[FFTEngine.scala 60:46]
          stateReg <= UInt<3>("h2") @[FFTEngine.scala 61:26]
        else :
          stateReg <= stateReg @[FFTEngine.scala 63:26]
      else :
        node _T_3 = eq(UInt<3>("h2"), stateReg) @[FFTEngine.scala 51:22]
        when _T_3 : @[FFTEngine.scala 51:22]
          node _T_4 = eq(addrSProc, UInt<2>("h3")) @[FFTEngine.scala 67:29]
          when _T_4 : @[FFTEngine.scala 67:45]
            stateReg <= UInt<3>("h3") @[FFTEngine.scala 68:26]
          else :
            stateReg <= stateReg @[FFTEngine.scala 70:26]
        else :
          node _T_5 = eq(UInt<3>("h3"), stateReg) @[FFTEngine.scala 51:22]
          when _T_5 : @[FFTEngine.scala 51:22]
            node _T_6 = eq(phaseCount, UInt<3>("h6")) @[FFTEngine.scala 74:29]
            when _T_6 : @[FFTEngine.scala 74:46]
              node _stateReg_T_1 = mux(isFFT, UInt<3>("h4"), UInt<3>("h7")) @[FFTEngine.scala 75:32]
              stateReg <= _stateReg_T_1 @[FFTEngine.scala 75:26]
            else :
              stateReg <= UInt<3>("h1") @[FFTEngine.scala 77:26]
          else :
            node _T_7 = eq(UInt<3>("h4"), stateReg) @[FFTEngine.scala 51:22]
            when _T_7 : @[FFTEngine.scala 51:22]
              node _T_8 = eq(addrSProc, UInt<6>("h3f")) @[FFTEngine.scala 81:29]
              when _T_8 : @[FFTEngine.scala 81:47]
                stateReg <= UInt<3>("h5") @[FFTEngine.scala 82:26]
              else :
                stateReg <= stateReg @[FFTEngine.scala 84:26]
            else :
              node _T_9 = eq(UInt<3>("h5"), stateReg) @[FFTEngine.scala 51:22]
              when _T_9 : @[FFTEngine.scala 51:22]
                node _T_10 = eq(addrSProc, UInt<2>("h3")) @[FFTEngine.scala 88:29]
                when _T_10 : @[FFTEngine.scala 88:46]
                  stateReg <= UInt<3>("h6") @[FFTEngine.scala 89:26]
                else :
                  stateReg <= stateReg @[FFTEngine.scala 91:26]
              else :
                node _T_11 = eq(UInt<3>("h6"), stateReg) @[FFTEngine.scala 51:22]
                when _T_11 : @[FFTEngine.scala 51:22]
                  node _T_12 = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 95:29]
                  when _T_12 : @[FFTEngine.scala 95:47]
                    node _stateReg_T_2 = mux(isFFT, UInt<3>("h7"), UInt<3>("h1")) @[FFTEngine.scala 96:32]
                    stateReg <= _stateReg_T_2 @[FFTEngine.scala 96:26]
                  else :
                    stateReg <= UInt<3>("h4") @[FFTEngine.scala 98:26]
                else :
                  node _T_13 = eq(UInt<3>("h7"), stateReg) @[FFTEngine.scala 51:22]
                  when _T_13 : @[FFTEngine.scala 51:22]
                    stateReg <= UInt<3>("h0") @[FFTEngine.scala 102:22]
    node _radixInit_T = eq(stateReg, UInt<3>("h0")) @[FFTEngine.scala 106:31]
    node _radixInit_T_1 = eq(stateReg, UInt<3>("h1")) @[FFTEngine.scala 107:16]
    node _radixInit_T_2 = eq(addrSProc, UInt<4>("hf")) @[FFTEngine.scala 107:45]
    node _radixInit_T_3 = and(_radixInit_T_1, _radixInit_T_2) @[FFTEngine.scala 107:30]
    node _radixInit_T_4 = or(_radixInit_T, _radixInit_T_3) @[FFTEngine.scala 106:45]
    node _radixInit_T_5 = eq(stateReg, UInt<3>("h2")) @[FFTEngine.scala 108:16]
    node _radixInit_T_6 = eq(addrSProc, UInt<2>("h3")) @[FFTEngine.scala 108:46]
    node _radixInit_T_7 = and(_radixInit_T_5, _radixInit_T_6) @[FFTEngine.scala 108:31]
    node _radixInit_T_8 = or(_radixInit_T_4, _radixInit_T_7) @[FFTEngine.scala 107:63]
    node _radixInit_T_9 = eq(stateReg, UInt<3>("h3")) @[FFTEngine.scala 109:15]
    node _radixInit_T_10 = or(_radixInit_T_8, _radixInit_T_9) @[FFTEngine.scala 108:63]
    node _radixInit_T_11 = eq(stateReg, UInt<3>("h4")) @[FFTEngine.scala 110:16]
    node _radixInit_T_12 = eq(addrSProc, UInt<6>("h3f")) @[FFTEngine.scala 110:43]
    node _radixInit_T_13 = and(_radixInit_T_11, _radixInit_T_12) @[FFTEngine.scala 110:28]
    node _radixInit_T_14 = or(_radixInit_T_10, _radixInit_T_13) @[FFTEngine.scala 109:32]
    node _radixInit_T_15 = eq(stateReg, UInt<3>("h5")) @[FFTEngine.scala 111:16]
    node _radixInit_T_16 = eq(addrSProc, UInt<2>("h3")) @[FFTEngine.scala 111:44]
    node _radixInit_T_17 = and(_radixInit_T_15, _radixInit_T_16) @[FFTEngine.scala 111:29]
    node _radixInit_T_18 = or(_radixInit_T_14, _radixInit_T_17) @[FFTEngine.scala 110:62]
    node _radixInit_T_19 = eq(stateReg, UInt<3>("h6")) @[FFTEngine.scala 112:15]
    node _radixInit_T_20 = or(_radixInit_T_18, _radixInit_T_19) @[FFTEngine.scala 111:62]
    node _radixInit_T_21 = eq(stateReg, UInt<3>("h7")) @[FFTEngine.scala 113:15]
    node radixInit = or(_radixInit_T_20, _radixInit_T_21) @[FFTEngine.scala 112:30]
    node _radixUp_T = eq(stateReg, UInt<3>("h1")) @[FFTEngine.scala 115:29]
    node _radixUp_T_1 = eq(stateReg, UInt<3>("h2")) @[FFTEngine.scala 115:55]
    node _radixUp_T_2 = or(_radixUp_T, _radixUp_T_1) @[FFTEngine.scala 115:43]
    node _radixUp_T_3 = eq(stateReg, UInt<3>("h4")) @[FFTEngine.scala 116:15]
    node _radixUp_T_4 = or(_radixUp_T_2, _radixUp_T_3) @[FFTEngine.scala 115:70]
    node _radixUp_T_5 = eq(stateReg, UInt<3>("h5")) @[FFTEngine.scala 116:39]
    node radixUp = or(_radixUp_T_4, _radixUp_T_5) @[FFTEngine.scala 116:27]
    when radixInit : @[FFTEngine.scala 119:21]
      addrSProc <= UInt<1>("h0") @[FFTEngine.scala 120:20]
    else :
      when radixUp : @[FFTEngine.scala 121:26]
        node _radixCount_T = add(addrSProc, UInt<1>("h1")) @[FFTEngine.scala 122:34]
        node _radixCount_T_1 = tail(_radixCount_T, 1) @[FFTEngine.scala 122:34]
        addrSProc <= _radixCount_T_1 @[FFTEngine.scala 122:20]
      else :
        addrSProc <= addrSProc @[FFTEngine.scala 124:20]
    node _phaseInit_T = eq(stateReg, UInt<3>("h0")) @[FFTEngine.scala 127:31]
    node _phaseInit_T_1 = eq(stateReg, UInt<3>("h3")) @[FFTEngine.scala 128:16]
    node _phaseInit_T_2 = eq(phaseCount, UInt<3>("h6")) @[FFTEngine.scala 128:47]
    node _phaseInit_T_3 = and(_phaseInit_T_1, _phaseInit_T_2) @[FFTEngine.scala 128:33]
    node _phaseInit_T_4 = or(_phaseInit_T, _phaseInit_T_3) @[FFTEngine.scala 127:45]
    node _phaseInit_T_5 = eq(stateReg, UInt<3>("h6")) @[FFTEngine.scala 129:16]
    node _phaseInit_T_6 = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 129:45]
    node _phaseInit_T_7 = and(_phaseInit_T_5, _phaseInit_T_6) @[FFTEngine.scala 129:31]
    node _phaseInit_T_8 = or(_phaseInit_T_4, _phaseInit_T_7) @[FFTEngine.scala 128:65]
    node _phaseInit_T_9 = eq(stateReg, UInt<3>("h7")) @[FFTEngine.scala 130:15]
    node phaseInit = or(_phaseInit_T_8, _phaseInit_T_9) @[FFTEngine.scala 129:64]
    node _phaseUp_T = eq(stateReg, UInt<3>("h3")) @[FFTEngine.scala 132:29]
    node _phaseUp_T_1 = eq(stateReg, UInt<3>("h6")) @[FFTEngine.scala 132:58]
    node phaseUp = or(_phaseUp_T, _phaseUp_T_1) @[FFTEngine.scala 132:46]
    when phaseInit : @[FFTEngine.scala 134:21]
      phaseCount <= UInt<1>("h0") @[FFTEngine.scala 135:20]
    else :
      when phaseUp : @[FFTEngine.scala 136:26]
        node _phaseCount_T = add(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 137:34]
        node _phaseCount_T_1 = tail(_phaseCount_T, 1) @[FFTEngine.scala 137:34]
        phaseCount <= _phaseCount_T_1 @[FFTEngine.scala 137:20]
      else :
        phaseCount <= phaseCount @[FFTEngine.scala 139:20]
    reg srcBuffer : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[FFTEngine.scala 142:28]
    node _srcBufferNext_T = eq(stateReg, UInt<3>("h3")) @[FFTEngine.scala 144:35]
    node _srcBufferNext_T_1 = eq(stateReg, UInt<3>("h6")) @[FFTEngine.scala 144:62]
    node _srcBufferNext_T_2 = or(_srcBufferNext_T, _srcBufferNext_T_1) @[FFTEngine.scala 144:51]
    node _srcBufferNext_T_3 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 144:79]
    node srcBufferNext = and(_srcBufferNext_T_2, _srcBufferNext_T_3) @[FFTEngine.scala 144:77]
    node _srcUp_T = eq(stateReg, UInt<3>("h0")) @[FFTEngine.scala 146:27]
    node _srcUp_T_1 = eq(stateReg, UInt<3>("h3")) @[FFTEngine.scala 146:53]
    node _srcUp_T_2 = or(_srcUp_T, _srcUp_T_1) @[FFTEngine.scala 146:41]
    node _srcUp_T_3 = eq(stateReg, UInt<3>("h6")) @[FFTEngine.scala 146:82]
    node srcUp = or(_srcUp_T_2, _srcUp_T_3) @[FFTEngine.scala 146:70]
    when srcUp : @[FFTEngine.scala 148:17]
      srcBuffer <= srcBufferNext @[FFTEngine.scala 149:19]
    else :
      srcBuffer <= srcBuffer @[FFTEngine.scala 151:19]
    node kernelState = eq(stateReg, UInt<3>("h1")) @[FFTEngine.scala 154:33]
    node procState = eq(stateReg, UInt<3>("h4")) @[FFTEngine.scala 155:31]
    node readEnable = or(kernelState, procState) @[FFTEngine.scala 157:34]
    node radixCountTemp = bits(addrSProc, 3, 0) @[FFTEngine.scala 159:36]
    wire nk : UInt[4] @[FFTEngine.scala 167:18]
    node _T_14 = eq(phaseCount, UInt<3>("h6")) @[FFTEngine.scala 182:25]
    when _T_14 : @[FFTEngine.scala 182:42]
      node _nk_0_T = bits(addrSProc, 3, 0) @[FFTEngine.scala 184:45]
      node _nk_0_T_1 = cat(UInt<1>("h0"), _nk_0_T) @[Cat.scala 33:92]
      nk[0] <= _nk_0_T_1 @[FFTEngine.scala 184:23]
      node _nk_1_T = bits(addrSProc, 3, 0) @[FFTEngine.scala 184:45]
      node _nk_1_T_1 = cat(UInt<1>("h1"), _nk_1_T) @[Cat.scala 33:92]
      nk[1] <= _nk_1_T_1 @[FFTEngine.scala 184:23]
      node _nk_2_T = bits(addrSProc, 3, 0) @[FFTEngine.scala 184:45]
      node _nk_2_T_1 = cat(UInt<2>("h2"), _nk_2_T) @[Cat.scala 33:92]
      nk[2] <= _nk_2_T_1 @[FFTEngine.scala 184:23]
      node _nk_3_T = bits(addrSProc, 3, 0) @[FFTEngine.scala 184:45]
      node _nk_3_T_1 = cat(UInt<2>("h3"), _nk_3_T) @[Cat.scala 33:92]
      nk[3] <= _nk_3_T_1 @[FFTEngine.scala 184:23]
    else :
      node _T_15 = eq(phaseCount, UInt<3>("h5")) @[FFTEngine.scala 186:32]
      when _T_15 : @[FFTEngine.scala 186:51]
        node _nk_0_T_2 = bits(addrSProc, 3, 1) @[FFTEngine.scala 191:49]
        node nk_0_hi = cat(UInt<1>("h0"), _nk_0_T_2) @[Cat.scala 33:92]
        node _nk_0_T_3 = cat(nk_0_hi, UInt<1>("h0")) @[Cat.scala 33:92]
        nk[0] <= _nk_0_T_3 @[FFTEngine.scala 191:27]
        node _nk_1_T_2 = bits(addrSProc, 3, 1) @[FFTEngine.scala 191:49]
        node nk_1_hi = cat(UInt<1>("h1"), _nk_1_T_2) @[Cat.scala 33:92]
        node _nk_1_T_3 = cat(nk_1_hi, UInt<1>("h0")) @[Cat.scala 33:92]
        nk[1] <= _nk_1_T_3 @[FFTEngine.scala 191:27]
        node _nk_2_T_2 = bits(addrSProc, 3, 1) @[FFTEngine.scala 191:49]
        node nk_2_hi = cat(UInt<2>("h2"), _nk_2_T_2) @[Cat.scala 33:92]
        node _nk_2_T_3 = cat(nk_2_hi, UInt<1>("h0")) @[Cat.scala 33:92]
        nk[2] <= _nk_2_T_3 @[FFTEngine.scala 191:27]
        node _nk_3_T_2 = bits(addrSProc, 3, 1) @[FFTEngine.scala 191:49]
        node nk_3_hi = cat(UInt<2>("h3"), _nk_3_T_2) @[Cat.scala 33:92]
        node _nk_3_T_3 = cat(nk_3_hi, UInt<1>("h0")) @[Cat.scala 33:92]
        nk[3] <= _nk_3_T_3 @[FFTEngine.scala 191:27]
      else :
        node _nk_0_T_4 = bits(addrSProc, 5, 0) @[FFTEngine.scala 197:40]
        node _nk_0_T_5 = cat(_nk_0_T_4, UInt<2>("h0")) @[Cat.scala 33:92]
        wire _nk_0_WIRE : UInt<1>[6] @[FFTEngine.scala 197:125]
        _nk_0_WIRE[0] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        _nk_0_WIRE[1] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        _nk_0_WIRE[2] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        _nk_0_WIRE[3] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        _nk_0_WIRE[4] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        _nk_0_WIRE[5] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        node nk_0_lo_hi = cat(_nk_0_WIRE[2], _nk_0_WIRE[1]) @[FFTEngine.scala 197:156]
        node nk_0_lo = cat(nk_0_lo_hi, _nk_0_WIRE[0]) @[FFTEngine.scala 197:156]
        node nk_0_hi_hi = cat(_nk_0_WIRE[5], _nk_0_WIRE[4]) @[FFTEngine.scala 197:156]
        node nk_0_hi_1 = cat(nk_0_hi_hi, _nk_0_WIRE[3]) @[FFTEngine.scala 197:156]
        node _nk_0_T_6 = cat(nk_0_hi_1, nk_0_lo) @[FFTEngine.scala 197:156]
        node _nk_0_T_7 = cat(UInt<1>("h0"), _nk_0_T_6) @[Cat.scala 33:92]
        node _nk_0_T_8 = dshr(_nk_0_T_7, phaseCount) @[FFTEngine.scala 197:164]
        node _nk_0_T_9 = not(_nk_0_T_8) @[FFTEngine.scala 197:102]
        node _nk_0_T_10 = and(_nk_0_T_5, _nk_0_T_9) @[FFTEngine.scala 197:100]
        nk[0] <= _nk_0_T_10 @[FFTEngine.scala 197:23]
        node _nk_1_T_4 = bits(addrSProc, 5, 0) @[FFTEngine.scala 197:40]
        node _nk_1_T_5 = cat(_nk_1_T_4, UInt<2>("h1")) @[Cat.scala 33:92]
        wire _nk_1_WIRE : UInt<1>[6] @[FFTEngine.scala 197:125]
        _nk_1_WIRE[0] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        _nk_1_WIRE[1] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        _nk_1_WIRE[2] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        _nk_1_WIRE[3] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        _nk_1_WIRE[4] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        _nk_1_WIRE[5] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        node nk_1_lo_hi = cat(_nk_1_WIRE[2], _nk_1_WIRE[1]) @[FFTEngine.scala 197:156]
        node nk_1_lo = cat(nk_1_lo_hi, _nk_1_WIRE[0]) @[FFTEngine.scala 197:156]
        node nk_1_hi_hi = cat(_nk_1_WIRE[5], _nk_1_WIRE[4]) @[FFTEngine.scala 197:156]
        node nk_1_hi_1 = cat(nk_1_hi_hi, _nk_1_WIRE[3]) @[FFTEngine.scala 197:156]
        node _nk_1_T_6 = cat(nk_1_hi_1, nk_1_lo) @[FFTEngine.scala 197:156]
        node _nk_1_T_7 = cat(UInt<1>("h0"), _nk_1_T_6) @[Cat.scala 33:92]
        node _nk_1_T_8 = dshr(_nk_1_T_7, phaseCount) @[FFTEngine.scala 197:164]
        node _nk_1_T_9 = not(_nk_1_T_8) @[FFTEngine.scala 197:102]
        node _nk_1_T_10 = and(_nk_1_T_5, _nk_1_T_9) @[FFTEngine.scala 197:100]
        nk[1] <= _nk_1_T_10 @[FFTEngine.scala 197:23]
        node _nk_2_T_4 = bits(addrSProc, 5, 0) @[FFTEngine.scala 197:40]
        node _nk_2_T_5 = cat(_nk_2_T_4, UInt<2>("h2")) @[Cat.scala 33:92]
        wire _nk_2_WIRE : UInt<1>[6] @[FFTEngine.scala 197:125]
        _nk_2_WIRE[0] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        _nk_2_WIRE[1] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        _nk_2_WIRE[2] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        _nk_2_WIRE[3] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        _nk_2_WIRE[4] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        _nk_2_WIRE[5] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        node nk_2_lo_hi = cat(_nk_2_WIRE[2], _nk_2_WIRE[1]) @[FFTEngine.scala 197:156]
        node nk_2_lo = cat(nk_2_lo_hi, _nk_2_WIRE[0]) @[FFTEngine.scala 197:156]
        node nk_2_hi_hi = cat(_nk_2_WIRE[5], _nk_2_WIRE[4]) @[FFTEngine.scala 197:156]
        node nk_2_hi_1 = cat(nk_2_hi_hi, _nk_2_WIRE[3]) @[FFTEngine.scala 197:156]
        node _nk_2_T_6 = cat(nk_2_hi_1, nk_2_lo) @[FFTEngine.scala 197:156]
        node _nk_2_T_7 = cat(UInt<1>("h0"), _nk_2_T_6) @[Cat.scala 33:92]
        node _nk_2_T_8 = dshr(_nk_2_T_7, phaseCount) @[FFTEngine.scala 197:164]
        node _nk_2_T_9 = not(_nk_2_T_8) @[FFTEngine.scala 197:102]
        node _nk_2_T_10 = and(_nk_2_T_5, _nk_2_T_9) @[FFTEngine.scala 197:100]
        nk[2] <= _nk_2_T_10 @[FFTEngine.scala 197:23]
        node _nk_3_T_4 = bits(addrSProc, 5, 0) @[FFTEngine.scala 197:40]
        node _nk_3_T_5 = cat(_nk_3_T_4, UInt<2>("h3")) @[Cat.scala 33:92]
        wire _nk_3_WIRE : UInt<1>[6] @[FFTEngine.scala 197:125]
        _nk_3_WIRE[0] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        _nk_3_WIRE[1] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        _nk_3_WIRE[2] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        _nk_3_WIRE[3] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        _nk_3_WIRE[4] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        _nk_3_WIRE[5] <= UInt<1>("h1") @[FFTEngine.scala 197:125]
        node nk_3_lo_hi = cat(_nk_3_WIRE[2], _nk_3_WIRE[1]) @[FFTEngine.scala 197:156]
        node nk_3_lo = cat(nk_3_lo_hi, _nk_3_WIRE[0]) @[FFTEngine.scala 197:156]
        node nk_3_hi_hi = cat(_nk_3_WIRE[5], _nk_3_WIRE[4]) @[FFTEngine.scala 197:156]
        node nk_3_hi_1 = cat(nk_3_hi_hi, _nk_3_WIRE[3]) @[FFTEngine.scala 197:156]
        node _nk_3_T_6 = cat(nk_3_hi_1, nk_3_lo) @[FFTEngine.scala 197:156]
        node _nk_3_T_7 = cat(UInt<1>("h0"), _nk_3_T_6) @[Cat.scala 33:92]
        node _nk_3_T_8 = dshr(_nk_3_T_7, phaseCount) @[FFTEngine.scala 197:164]
        node _nk_3_T_9 = not(_nk_3_T_8) @[FFTEngine.scala 197:102]
        node _nk_3_T_10 = and(_nk_3_T_5, _nk_3_T_9) @[FFTEngine.scala 197:100]
        nk[3] <= _nk_3_T_10 @[FFTEngine.scala 197:23]
    wire addrSKernelPre : UInt[4] @[FFTEngine.scala 212:30]
    wire addrTKernelPre : UInt[4] @[FFTEngine.scala 213:30]
    node _T_16 = eq(phaseCount, UInt<3>("h6")) @[FFTEngine.scala 231:25]
    when _T_16 : @[FFTEngine.scala 231:42]
      node addrSKernelPre_0_hi = cat(UInt<1>("h0"), UInt<2>("h0")) @[Cat.scala 33:92]
      node _addrSKernelPre_0_T = cat(addrSKernelPre_0_hi, radixCountTemp) @[Cat.scala 33:92]
      node _addrSKernelPre_0_dataTemp_T = cat(_addrSKernelPre_0_T, _addrSKernelPre_0_T) @[Cat.scala 33:92]
      node addrSKernelPre_0_dataTemp = dshr(_addrSKernelPre_0_dataTemp_T, UInt<1>("h0")) @[FFTEngine.scala 208:40]
      node _addrSKernelPre_0_T_1 = bits(addrSKernelPre_0_dataTemp, 6, 0) @[FFTEngine.scala 209:17]
      addrSKernelPre[0] <= _addrSKernelPre_0_T_1 @[FFTEngine.scala 233:35]
      node addrTKernelPre_0_hi = cat(UInt<1>("h1"), UInt<2>("h0")) @[Cat.scala 33:92]
      node _addrTKernelPre_0_T = cat(addrTKernelPre_0_hi, radixCountTemp) @[Cat.scala 33:92]
      node _addrTKernelPre_0_dataTemp_T = cat(_addrTKernelPre_0_T, _addrTKernelPre_0_T) @[Cat.scala 33:92]
      node addrTKernelPre_0_dataTemp = dshr(_addrTKernelPre_0_dataTemp_T, UInt<1>("h0")) @[FFTEngine.scala 208:40]
      node _addrTKernelPre_0_T_1 = bits(addrTKernelPre_0_dataTemp, 6, 0) @[FFTEngine.scala 209:17]
      addrTKernelPre[0] <= _addrTKernelPre_0_T_1 @[FFTEngine.scala 234:35]
      node addrSKernelPre_1_hi = cat(UInt<1>("h0"), UInt<2>("h1")) @[Cat.scala 33:92]
      node _addrSKernelPre_1_T = cat(addrSKernelPre_1_hi, radixCountTemp) @[Cat.scala 33:92]
      node _addrSKernelPre_1_dataTemp_T = cat(_addrSKernelPre_1_T, _addrSKernelPre_1_T) @[Cat.scala 33:92]
      node addrSKernelPre_1_dataTemp = dshr(_addrSKernelPre_1_dataTemp_T, UInt<1>("h0")) @[FFTEngine.scala 208:40]
      node _addrSKernelPre_1_T_1 = bits(addrSKernelPre_1_dataTemp, 6, 0) @[FFTEngine.scala 209:17]
      addrSKernelPre[1] <= _addrSKernelPre_1_T_1 @[FFTEngine.scala 233:35]
      node addrTKernelPre_1_hi = cat(UInt<1>("h1"), UInt<2>("h1")) @[Cat.scala 33:92]
      node _addrTKernelPre_1_T = cat(addrTKernelPre_1_hi, radixCountTemp) @[Cat.scala 33:92]
      node _addrTKernelPre_1_dataTemp_T = cat(_addrTKernelPre_1_T, _addrTKernelPre_1_T) @[Cat.scala 33:92]
      node addrTKernelPre_1_dataTemp = dshr(_addrTKernelPre_1_dataTemp_T, UInt<1>("h0")) @[FFTEngine.scala 208:40]
      node _addrTKernelPre_1_T_1 = bits(addrTKernelPre_1_dataTemp, 6, 0) @[FFTEngine.scala 209:17]
      addrTKernelPre[1] <= _addrTKernelPre_1_T_1 @[FFTEngine.scala 234:35]
      node addrSKernelPre_2_hi = cat(UInt<1>("h0"), UInt<2>("h2")) @[Cat.scala 33:92]
      node _addrSKernelPre_2_T = cat(addrSKernelPre_2_hi, radixCountTemp) @[Cat.scala 33:92]
      node _addrSKernelPre_2_dataTemp_T = cat(_addrSKernelPre_2_T, _addrSKernelPre_2_T) @[Cat.scala 33:92]
      node addrSKernelPre_2_dataTemp = dshr(_addrSKernelPre_2_dataTemp_T, UInt<1>("h0")) @[FFTEngine.scala 208:40]
      node _addrSKernelPre_2_T_1 = bits(addrSKernelPre_2_dataTemp, 6, 0) @[FFTEngine.scala 209:17]
      addrSKernelPre[2] <= _addrSKernelPre_2_T_1 @[FFTEngine.scala 233:35]
      node addrTKernelPre_2_hi = cat(UInt<1>("h1"), UInt<2>("h2")) @[Cat.scala 33:92]
      node _addrTKernelPre_2_T = cat(addrTKernelPre_2_hi, radixCountTemp) @[Cat.scala 33:92]
      node _addrTKernelPre_2_dataTemp_T = cat(_addrTKernelPre_2_T, _addrTKernelPre_2_T) @[Cat.scala 33:92]
      node addrTKernelPre_2_dataTemp = dshr(_addrTKernelPre_2_dataTemp_T, UInt<1>("h0")) @[FFTEngine.scala 208:40]
      node _addrTKernelPre_2_T_1 = bits(addrTKernelPre_2_dataTemp, 6, 0) @[FFTEngine.scala 209:17]
      addrTKernelPre[2] <= _addrTKernelPre_2_T_1 @[FFTEngine.scala 234:35]
      node addrSKernelPre_3_hi = cat(UInt<1>("h0"), UInt<2>("h3")) @[Cat.scala 33:92]
      node _addrSKernelPre_3_T = cat(addrSKernelPre_3_hi, radixCountTemp) @[Cat.scala 33:92]
      node _addrSKernelPre_3_dataTemp_T = cat(_addrSKernelPre_3_T, _addrSKernelPre_3_T) @[Cat.scala 33:92]
      node addrSKernelPre_3_dataTemp = dshr(_addrSKernelPre_3_dataTemp_T, UInt<1>("h0")) @[FFTEngine.scala 208:40]
      node _addrSKernelPre_3_T_1 = bits(addrSKernelPre_3_dataTemp, 6, 0) @[FFTEngine.scala 209:17]
      addrSKernelPre[3] <= _addrSKernelPre_3_T_1 @[FFTEngine.scala 233:35]
      node addrTKernelPre_3_hi = cat(UInt<1>("h1"), UInt<2>("h3")) @[Cat.scala 33:92]
      node _addrTKernelPre_3_T = cat(addrTKernelPre_3_hi, radixCountTemp) @[Cat.scala 33:92]
      node _addrTKernelPre_3_dataTemp_T = cat(_addrTKernelPre_3_T, _addrTKernelPre_3_T) @[Cat.scala 33:92]
      node addrTKernelPre_3_dataTemp = dshr(_addrTKernelPre_3_dataTemp_T, UInt<1>("h0")) @[FFTEngine.scala 208:40]
      node _addrTKernelPre_3_T_1 = bits(addrTKernelPre_3_dataTemp, 6, 0) @[FFTEngine.scala 209:17]
      addrTKernelPre[3] <= _addrTKernelPre_3_T_1 @[FFTEngine.scala 234:35]
    else :
      node _T_17 = eq(phaseCount, UInt<3>("h5")) @[FFTEngine.scala 236:32]
      when _T_17 : @[FFTEngine.scala 236:51]
        node addrSKernelPre_0_hi_1 = cat(UInt<1>("h0"), UInt<2>("h0")) @[Cat.scala 33:92]
        node _addrSKernelPre_0_T_2 = cat(addrSKernelPre_0_hi_1, radixCountTemp) @[Cat.scala 33:92]
        node _addrSKernelPre_0_dataTemp_T_1 = cat(_addrSKernelPre_0_T_2, _addrSKernelPre_0_T_2) @[Cat.scala 33:92]
        node addrSKernelPre_0_dataTemp_1 = dshr(_addrSKernelPre_0_dataTemp_T_1, UInt<1>("h1")) @[FFTEngine.scala 208:40]
        node _addrSKernelPre_0_T_3 = bits(addrSKernelPre_0_dataTemp_1, 6, 0) @[FFTEngine.scala 209:17]
        addrSKernelPre[0] <= _addrSKernelPre_0_T_3 @[FFTEngine.scala 238:35]
        node addrTKernelPre_0_hi_1 = cat(UInt<1>("h1"), UInt<2>("h0")) @[Cat.scala 33:92]
        node _addrTKernelPre_0_T_2 = cat(addrTKernelPre_0_hi_1, radixCountTemp) @[Cat.scala 33:92]
        node _addrTKernelPre_0_dataTemp_T_1 = cat(_addrTKernelPre_0_T_2, _addrTKernelPre_0_T_2) @[Cat.scala 33:92]
        node addrTKernelPre_0_dataTemp_1 = dshr(_addrTKernelPre_0_dataTemp_T_1, UInt<1>("h1")) @[FFTEngine.scala 208:40]
        node _addrTKernelPre_0_T_3 = bits(addrTKernelPre_0_dataTemp_1, 6, 0) @[FFTEngine.scala 209:17]
        addrTKernelPre[0] <= _addrTKernelPre_0_T_3 @[FFTEngine.scala 239:35]
        node addrSKernelPre_1_hi_1 = cat(UInt<1>("h0"), UInt<2>("h1")) @[Cat.scala 33:92]
        node _addrSKernelPre_1_T_2 = cat(addrSKernelPre_1_hi_1, radixCountTemp) @[Cat.scala 33:92]
        node _addrSKernelPre_1_dataTemp_T_1 = cat(_addrSKernelPre_1_T_2, _addrSKernelPre_1_T_2) @[Cat.scala 33:92]
        node addrSKernelPre_1_dataTemp_1 = dshr(_addrSKernelPre_1_dataTemp_T_1, UInt<1>("h1")) @[FFTEngine.scala 208:40]
        node _addrSKernelPre_1_T_3 = bits(addrSKernelPre_1_dataTemp_1, 6, 0) @[FFTEngine.scala 209:17]
        addrSKernelPre[1] <= _addrSKernelPre_1_T_3 @[FFTEngine.scala 238:35]
        node addrTKernelPre_1_hi_1 = cat(UInt<1>("h1"), UInt<2>("h1")) @[Cat.scala 33:92]
        node _addrTKernelPre_1_T_2 = cat(addrTKernelPre_1_hi_1, radixCountTemp) @[Cat.scala 33:92]
        node _addrTKernelPre_1_dataTemp_T_1 = cat(_addrTKernelPre_1_T_2, _addrTKernelPre_1_T_2) @[Cat.scala 33:92]
        node addrTKernelPre_1_dataTemp_1 = dshr(_addrTKernelPre_1_dataTemp_T_1, UInt<1>("h1")) @[FFTEngine.scala 208:40]
        node _addrTKernelPre_1_T_3 = bits(addrTKernelPre_1_dataTemp_1, 6, 0) @[FFTEngine.scala 209:17]
        addrTKernelPre[1] <= _addrTKernelPre_1_T_3 @[FFTEngine.scala 239:35]
        node addrSKernelPre_2_hi_1 = cat(UInt<1>("h0"), UInt<2>("h2")) @[Cat.scala 33:92]
        node _addrSKernelPre_2_T_2 = cat(addrSKernelPre_2_hi_1, radixCountTemp) @[Cat.scala 33:92]
        node _addrSKernelPre_2_dataTemp_T_1 = cat(_addrSKernelPre_2_T_2, _addrSKernelPre_2_T_2) @[Cat.scala 33:92]
        node addrSKernelPre_2_dataTemp_1 = dshr(_addrSKernelPre_2_dataTemp_T_1, UInt<1>("h1")) @[FFTEngine.scala 208:40]
        node _addrSKernelPre_2_T_3 = bits(addrSKernelPre_2_dataTemp_1, 6, 0) @[FFTEngine.scala 209:17]
        addrSKernelPre[2] <= _addrSKernelPre_2_T_3 @[FFTEngine.scala 238:35]
        node addrTKernelPre_2_hi_1 = cat(UInt<1>("h1"), UInt<2>("h2")) @[Cat.scala 33:92]
        node _addrTKernelPre_2_T_2 = cat(addrTKernelPre_2_hi_1, radixCountTemp) @[Cat.scala 33:92]
        node _addrTKernelPre_2_dataTemp_T_1 = cat(_addrTKernelPre_2_T_2, _addrTKernelPre_2_T_2) @[Cat.scala 33:92]
        node addrTKernelPre_2_dataTemp_1 = dshr(_addrTKernelPre_2_dataTemp_T_1, UInt<1>("h1")) @[FFTEngine.scala 208:40]
        node _addrTKernelPre_2_T_3 = bits(addrTKernelPre_2_dataTemp_1, 6, 0) @[FFTEngine.scala 209:17]
        addrTKernelPre[2] <= _addrTKernelPre_2_T_3 @[FFTEngine.scala 239:35]
        node addrSKernelPre_3_hi_1 = cat(UInt<1>("h0"), UInt<2>("h3")) @[Cat.scala 33:92]
        node _addrSKernelPre_3_T_2 = cat(addrSKernelPre_3_hi_1, radixCountTemp) @[Cat.scala 33:92]
        node _addrSKernelPre_3_dataTemp_T_1 = cat(_addrSKernelPre_3_T_2, _addrSKernelPre_3_T_2) @[Cat.scala 33:92]
        node addrSKernelPre_3_dataTemp_1 = dshr(_addrSKernelPre_3_dataTemp_T_1, UInt<1>("h1")) @[FFTEngine.scala 208:40]
        node _addrSKernelPre_3_T_3 = bits(addrSKernelPre_3_dataTemp_1, 6, 0) @[FFTEngine.scala 209:17]
        addrSKernelPre[3] <= _addrSKernelPre_3_T_3 @[FFTEngine.scala 238:35]
        node addrTKernelPre_3_hi_1 = cat(UInt<1>("h1"), UInt<2>("h3")) @[Cat.scala 33:92]
        node _addrTKernelPre_3_T_2 = cat(addrTKernelPre_3_hi_1, radixCountTemp) @[Cat.scala 33:92]
        node _addrTKernelPre_3_dataTemp_T_1 = cat(_addrTKernelPre_3_T_2, _addrTKernelPre_3_T_2) @[Cat.scala 33:92]
        node addrTKernelPre_3_dataTemp_1 = dshr(_addrTKernelPre_3_dataTemp_T_1, UInt<1>("h1")) @[FFTEngine.scala 208:40]
        node _addrTKernelPre_3_T_3 = bits(addrTKernelPre_3_dataTemp_1, 6, 0) @[FFTEngine.scala 209:17]
        addrTKernelPre[3] <= _addrTKernelPre_3_T_3 @[FFTEngine.scala 239:35]
      else :
        node addrSKernelPre_0_hi_2 = cat(radixCountTemp, UInt<2>("h0")) @[Cat.scala 33:92]
        node _addrSKernelPre_0_T_4 = cat(addrSKernelPre_0_hi_2, UInt<1>("h0")) @[Cat.scala 33:92]
        node _addrSKernelPre_0_dataTemp_T_2 = cat(_addrSKernelPre_0_T_4, _addrSKernelPre_0_T_4) @[Cat.scala 33:92]
        node addrSKernelPre_0_dataTemp_2 = dshl(_addrSKernelPre_0_dataTemp_T_2, phaseCount) @[FFTEngine.scala 203:40]
        node _addrSKernelPre_0_T_5 = bits(addrSKernelPre_0_dataTemp_2, 13, 7) @[FFTEngine.scala 204:17]
        addrSKernelPre[0] <= _addrSKernelPre_0_T_5 @[FFTEngine.scala 243:35]
        node addrTKernelPre_0_hi_2 = cat(radixCountTemp, UInt<2>("h0")) @[Cat.scala 33:92]
        node _addrTKernelPre_0_T_4 = cat(addrTKernelPre_0_hi_2, UInt<1>("h1")) @[Cat.scala 33:92]
        node _addrTKernelPre_0_dataTemp_T_2 = cat(_addrTKernelPre_0_T_4, _addrTKernelPre_0_T_4) @[Cat.scala 33:92]
        node addrTKernelPre_0_dataTemp_2 = dshl(_addrTKernelPre_0_dataTemp_T_2, phaseCount) @[FFTEngine.scala 203:40]
        node _addrTKernelPre_0_T_5 = bits(addrTKernelPre_0_dataTemp_2, 13, 7) @[FFTEngine.scala 204:17]
        addrTKernelPre[0] <= _addrTKernelPre_0_T_5 @[FFTEngine.scala 244:35]
        node addrSKernelPre_1_hi_2 = cat(radixCountTemp, UInt<2>("h1")) @[Cat.scala 33:92]
        node _addrSKernelPre_1_T_4 = cat(addrSKernelPre_1_hi_2, UInt<1>("h0")) @[Cat.scala 33:92]
        node _addrSKernelPre_1_dataTemp_T_2 = cat(_addrSKernelPre_1_T_4, _addrSKernelPre_1_T_4) @[Cat.scala 33:92]
        node addrSKernelPre_1_dataTemp_2 = dshl(_addrSKernelPre_1_dataTemp_T_2, phaseCount) @[FFTEngine.scala 203:40]
        node _addrSKernelPre_1_T_5 = bits(addrSKernelPre_1_dataTemp_2, 13, 7) @[FFTEngine.scala 204:17]
        addrSKernelPre[1] <= _addrSKernelPre_1_T_5 @[FFTEngine.scala 243:35]
        node addrTKernelPre_1_hi_2 = cat(radixCountTemp, UInt<2>("h1")) @[Cat.scala 33:92]
        node _addrTKernelPre_1_T_4 = cat(addrTKernelPre_1_hi_2, UInt<1>("h1")) @[Cat.scala 33:92]
        node _addrTKernelPre_1_dataTemp_T_2 = cat(_addrTKernelPre_1_T_4, _addrTKernelPre_1_T_4) @[Cat.scala 33:92]
        node addrTKernelPre_1_dataTemp_2 = dshl(_addrTKernelPre_1_dataTemp_T_2, phaseCount) @[FFTEngine.scala 203:40]
        node _addrTKernelPre_1_T_5 = bits(addrTKernelPre_1_dataTemp_2, 13, 7) @[FFTEngine.scala 204:17]
        addrTKernelPre[1] <= _addrTKernelPre_1_T_5 @[FFTEngine.scala 244:35]
        node addrSKernelPre_2_hi_2 = cat(radixCountTemp, UInt<2>("h2")) @[Cat.scala 33:92]
        node _addrSKernelPre_2_T_4 = cat(addrSKernelPre_2_hi_2, UInt<1>("h0")) @[Cat.scala 33:92]
        node _addrSKernelPre_2_dataTemp_T_2 = cat(_addrSKernelPre_2_T_4, _addrSKernelPre_2_T_4) @[Cat.scala 33:92]
        node addrSKernelPre_2_dataTemp_2 = dshl(_addrSKernelPre_2_dataTemp_T_2, phaseCount) @[FFTEngine.scala 203:40]
        node _addrSKernelPre_2_T_5 = bits(addrSKernelPre_2_dataTemp_2, 13, 7) @[FFTEngine.scala 204:17]
        addrSKernelPre[2] <= _addrSKernelPre_2_T_5 @[FFTEngine.scala 243:35]
        node addrTKernelPre_2_hi_2 = cat(radixCountTemp, UInt<2>("h2")) @[Cat.scala 33:92]
        node _addrTKernelPre_2_T_4 = cat(addrTKernelPre_2_hi_2, UInt<1>("h1")) @[Cat.scala 33:92]
        node _addrTKernelPre_2_dataTemp_T_2 = cat(_addrTKernelPre_2_T_4, _addrTKernelPre_2_T_4) @[Cat.scala 33:92]
        node addrTKernelPre_2_dataTemp_2 = dshl(_addrTKernelPre_2_dataTemp_T_2, phaseCount) @[FFTEngine.scala 203:40]
        node _addrTKernelPre_2_T_5 = bits(addrTKernelPre_2_dataTemp_2, 13, 7) @[FFTEngine.scala 204:17]
        addrTKernelPre[2] <= _addrTKernelPre_2_T_5 @[FFTEngine.scala 244:35]
        node addrSKernelPre_3_hi_2 = cat(radixCountTemp, UInt<2>("h3")) @[Cat.scala 33:92]
        node _addrSKernelPre_3_T_4 = cat(addrSKernelPre_3_hi_2, UInt<1>("h0")) @[Cat.scala 33:92]
        node _addrSKernelPre_3_dataTemp_T_2 = cat(_addrSKernelPre_3_T_4, _addrSKernelPre_3_T_4) @[Cat.scala 33:92]
        node addrSKernelPre_3_dataTemp_2 = dshl(_addrSKernelPre_3_dataTemp_T_2, phaseCount) @[FFTEngine.scala 203:40]
        node _addrSKernelPre_3_T_5 = bits(addrSKernelPre_3_dataTemp_2, 13, 7) @[FFTEngine.scala 204:17]
        addrSKernelPre[3] <= _addrSKernelPre_3_T_5 @[FFTEngine.scala 243:35]
        node addrTKernelPre_3_hi_2 = cat(radixCountTemp, UInt<2>("h3")) @[Cat.scala 33:92]
        node _addrTKernelPre_3_T_4 = cat(addrTKernelPre_3_hi_2, UInt<1>("h1")) @[Cat.scala 33:92]
        node _addrTKernelPre_3_dataTemp_T_2 = cat(_addrTKernelPre_3_T_4, _addrTKernelPre_3_T_4) @[Cat.scala 33:92]
        node addrTKernelPre_3_dataTemp_2 = dshl(_addrTKernelPre_3_dataTemp_T_2, phaseCount) @[FFTEngine.scala 203:40]
        node _addrTKernelPre_3_T_5 = bits(addrTKernelPre_3_dataTemp_2, 13, 7) @[FFTEngine.scala 204:17]
        addrTKernelPre[3] <= _addrTKernelPre_3_T_5 @[FFTEngine.scala 244:35]
    node _addrTProc_T = not(addrSProc) @[FFTEngine.scala 250:22]
    node _addrTProc_T_1 = add(_addrTProc_T, UInt<1>("h1")) @[FFTEngine.scala 250:34]
    node _addrTProc_T_2 = tail(_addrTProc_T_1, 1) @[FFTEngine.scala 250:34]
    node addrTProc = bits(_addrTProc_T_2, 6, 0) @[FFTEngine.scala 250:40]
    wire addrS : UInt<7>[4] @[FFTEngine.scala 252:21]
    wire addrT : UInt<7>[4] @[FFTEngine.scala 253:21]
    node _addrS_0_temp_T = bits(addrSProc, 6, 6) @[FFTEngine.scala 163:34]
    node _addrS_0_temp_T_1 = bits(addrSProc, 0, 0) @[FFTEngine.scala 163:55]
    node addrS_0_temp_0 = mux(isFFT, _addrS_0_temp_T, _addrS_0_temp_T_1) @[FFTEngine.scala 163:26]
    node _addrS_0_temp_T_2 = bits(addrSProc, 5, 5) @[FFTEngine.scala 163:34]
    node _addrS_0_temp_T_3 = bits(addrSProc, 1, 1) @[FFTEngine.scala 163:55]
    node addrS_0_temp_1 = mux(isFFT, _addrS_0_temp_T_2, _addrS_0_temp_T_3) @[FFTEngine.scala 163:26]
    node _addrS_0_temp_T_4 = bits(addrSProc, 4, 4) @[FFTEngine.scala 163:34]
    node _addrS_0_temp_T_5 = bits(addrSProc, 2, 2) @[FFTEngine.scala 163:55]
    node addrS_0_temp_2 = mux(isFFT, _addrS_0_temp_T_4, _addrS_0_temp_T_5) @[FFTEngine.scala 163:26]
    node _addrS_0_temp_T_6 = bits(addrSProc, 3, 3) @[FFTEngine.scala 163:34]
    node _addrS_0_temp_T_7 = bits(addrSProc, 3, 3) @[FFTEngine.scala 163:55]
    node addrS_0_temp_3 = mux(isFFT, _addrS_0_temp_T_6, _addrS_0_temp_T_7) @[FFTEngine.scala 163:26]
    node _addrS_0_temp_T_8 = bits(addrSProc, 2, 2) @[FFTEngine.scala 163:34]
    node _addrS_0_temp_T_9 = bits(addrSProc, 4, 4) @[FFTEngine.scala 163:55]
    node addrS_0_temp_4 = mux(isFFT, _addrS_0_temp_T_8, _addrS_0_temp_T_9) @[FFTEngine.scala 163:26]
    node _addrS_0_temp_T_10 = bits(addrSProc, 1, 1) @[FFTEngine.scala 163:34]
    node _addrS_0_temp_T_11 = bits(addrSProc, 5, 5) @[FFTEngine.scala 163:55]
    node addrS_0_temp_5 = mux(isFFT, _addrS_0_temp_T_10, _addrS_0_temp_T_11) @[FFTEngine.scala 163:26]
    node _addrS_0_temp_T_12 = bits(addrSProc, 0, 0) @[FFTEngine.scala 163:34]
    node _addrS_0_temp_T_13 = bits(addrSProc, 6, 6) @[FFTEngine.scala 163:55]
    node addrS_0_temp_6 = mux(isFFT, _addrS_0_temp_T_12, _addrS_0_temp_T_13) @[FFTEngine.scala 163:26]
    wire _addrS_0_WIRE : UInt<1>[7] @[FFTEngine.scala 164:16]
    _addrS_0_WIRE[0] <= addrS_0_temp_0 @[FFTEngine.scala 164:16]
    _addrS_0_WIRE[1] <= addrS_0_temp_1 @[FFTEngine.scala 164:16]
    _addrS_0_WIRE[2] <= addrS_0_temp_2 @[FFTEngine.scala 164:16]
    _addrS_0_WIRE[3] <= addrS_0_temp_3 @[FFTEngine.scala 164:16]
    _addrS_0_WIRE[4] <= addrS_0_temp_4 @[FFTEngine.scala 164:16]
    _addrS_0_WIRE[5] <= addrS_0_temp_5 @[FFTEngine.scala 164:16]
    _addrS_0_WIRE[6] <= addrS_0_temp_6 @[FFTEngine.scala 164:16]
    node addrS_0_lo_hi = cat(_addrS_0_WIRE[2], _addrS_0_WIRE[1]) @[FFTEngine.scala 164:23]
    node addrS_0_lo = cat(addrS_0_lo_hi, _addrS_0_WIRE[0]) @[FFTEngine.scala 164:23]
    node addrS_0_hi_lo = cat(_addrS_0_WIRE[4], _addrS_0_WIRE[3]) @[FFTEngine.scala 164:23]
    node addrS_0_hi_hi = cat(_addrS_0_WIRE[6], _addrS_0_WIRE[5]) @[FFTEngine.scala 164:23]
    node addrS_0_hi = cat(addrS_0_hi_hi, addrS_0_hi_lo) @[FFTEngine.scala 164:23]
    node _addrS_0_T = cat(addrS_0_hi, addrS_0_lo) @[FFTEngine.scala 164:23]
    node _addrS_0_temp_T_14 = bits(addrSKernelPre[0], 6, 6) @[FFTEngine.scala 163:34]
    node _addrS_0_temp_T_15 = bits(addrSKernelPre[0], 0, 0) @[FFTEngine.scala 163:55]
    node addrS_0_temp_0_1 = mux(UInt<1>("h1"), _addrS_0_temp_T_14, _addrS_0_temp_T_15) @[FFTEngine.scala 163:26]
    node _addrS_0_temp_T_16 = bits(addrSKernelPre[0], 5, 5) @[FFTEngine.scala 163:34]
    node _addrS_0_temp_T_17 = bits(addrSKernelPre[0], 1, 1) @[FFTEngine.scala 163:55]
    node addrS_0_temp_1_1 = mux(UInt<1>("h1"), _addrS_0_temp_T_16, _addrS_0_temp_T_17) @[FFTEngine.scala 163:26]
    node _addrS_0_temp_T_18 = bits(addrSKernelPre[0], 4, 4) @[FFTEngine.scala 163:34]
    node _addrS_0_temp_T_19 = bits(addrSKernelPre[0], 2, 2) @[FFTEngine.scala 163:55]
    node addrS_0_temp_2_1 = mux(UInt<1>("h1"), _addrS_0_temp_T_18, _addrS_0_temp_T_19) @[FFTEngine.scala 163:26]
    node _addrS_0_temp_T_20 = bits(addrSKernelPre[0], 3, 3) @[FFTEngine.scala 163:34]
    node _addrS_0_temp_T_21 = bits(addrSKernelPre[0], 3, 3) @[FFTEngine.scala 163:55]
    node addrS_0_temp_3_1 = mux(UInt<1>("h1"), _addrS_0_temp_T_20, _addrS_0_temp_T_21) @[FFTEngine.scala 163:26]
    node _addrS_0_temp_T_22 = bits(addrSKernelPre[0], 2, 2) @[FFTEngine.scala 163:34]
    node _addrS_0_temp_T_23 = bits(addrSKernelPre[0], 4, 4) @[FFTEngine.scala 163:55]
    node addrS_0_temp_4_1 = mux(UInt<1>("h1"), _addrS_0_temp_T_22, _addrS_0_temp_T_23) @[FFTEngine.scala 163:26]
    node _addrS_0_temp_T_24 = bits(addrSKernelPre[0], 1, 1) @[FFTEngine.scala 163:34]
    node _addrS_0_temp_T_25 = bits(addrSKernelPre[0], 5, 5) @[FFTEngine.scala 163:55]
    node addrS_0_temp_5_1 = mux(UInt<1>("h1"), _addrS_0_temp_T_24, _addrS_0_temp_T_25) @[FFTEngine.scala 163:26]
    node _addrS_0_temp_T_26 = bits(addrSKernelPre[0], 0, 0) @[FFTEngine.scala 163:34]
    node _addrS_0_temp_T_27 = bits(addrSKernelPre[0], 6, 6) @[FFTEngine.scala 163:55]
    node addrS_0_temp_6_1 = mux(UInt<1>("h1"), _addrS_0_temp_T_26, _addrS_0_temp_T_27) @[FFTEngine.scala 163:26]
    wire _addrS_0_WIRE_1 : UInt<1>[7] @[FFTEngine.scala 164:16]
    _addrS_0_WIRE_1[0] <= addrS_0_temp_0_1 @[FFTEngine.scala 164:16]
    _addrS_0_WIRE_1[1] <= addrS_0_temp_1_1 @[FFTEngine.scala 164:16]
    _addrS_0_WIRE_1[2] <= addrS_0_temp_2_1 @[FFTEngine.scala 164:16]
    _addrS_0_WIRE_1[3] <= addrS_0_temp_3_1 @[FFTEngine.scala 164:16]
    _addrS_0_WIRE_1[4] <= addrS_0_temp_4_1 @[FFTEngine.scala 164:16]
    _addrS_0_WIRE_1[5] <= addrS_0_temp_5_1 @[FFTEngine.scala 164:16]
    _addrS_0_WIRE_1[6] <= addrS_0_temp_6_1 @[FFTEngine.scala 164:16]
    node addrS_0_lo_hi_1 = cat(_addrS_0_WIRE_1[2], _addrS_0_WIRE_1[1]) @[FFTEngine.scala 164:23]
    node addrS_0_lo_1 = cat(addrS_0_lo_hi_1, _addrS_0_WIRE_1[0]) @[FFTEngine.scala 164:23]
    node addrS_0_hi_lo_1 = cat(_addrS_0_WIRE_1[4], _addrS_0_WIRE_1[3]) @[FFTEngine.scala 164:23]
    node addrS_0_hi_hi_1 = cat(_addrS_0_WIRE_1[6], _addrS_0_WIRE_1[5]) @[FFTEngine.scala 164:23]
    node addrS_0_hi_1 = cat(addrS_0_hi_hi_1, addrS_0_hi_lo_1) @[FFTEngine.scala 164:23]
    node _addrS_0_T_1 = cat(addrS_0_hi_1, addrS_0_lo_1) @[FFTEngine.scala 164:23]
    node _addrS_0_T_2 = mux(procState, _addrS_0_T, _addrS_0_T_1) @[FFTEngine.scala 256:28]
    addrS[0] <= _addrS_0_T_2 @[FFTEngine.scala 256:22]
    node _addrT_0_temp_T = bits(addrTProc, 6, 6) @[FFTEngine.scala 163:34]
    node _addrT_0_temp_T_1 = bits(addrTProc, 0, 0) @[FFTEngine.scala 163:55]
    node addrT_0_temp_0 = mux(isFFT, _addrT_0_temp_T, _addrT_0_temp_T_1) @[FFTEngine.scala 163:26]
    node _addrT_0_temp_T_2 = bits(addrTProc, 5, 5) @[FFTEngine.scala 163:34]
    node _addrT_0_temp_T_3 = bits(addrTProc, 1, 1) @[FFTEngine.scala 163:55]
    node addrT_0_temp_1 = mux(isFFT, _addrT_0_temp_T_2, _addrT_0_temp_T_3) @[FFTEngine.scala 163:26]
    node _addrT_0_temp_T_4 = bits(addrTProc, 4, 4) @[FFTEngine.scala 163:34]
    node _addrT_0_temp_T_5 = bits(addrTProc, 2, 2) @[FFTEngine.scala 163:55]
    node addrT_0_temp_2 = mux(isFFT, _addrT_0_temp_T_4, _addrT_0_temp_T_5) @[FFTEngine.scala 163:26]
    node _addrT_0_temp_T_6 = bits(addrTProc, 3, 3) @[FFTEngine.scala 163:34]
    node _addrT_0_temp_T_7 = bits(addrTProc, 3, 3) @[FFTEngine.scala 163:55]
    node addrT_0_temp_3 = mux(isFFT, _addrT_0_temp_T_6, _addrT_0_temp_T_7) @[FFTEngine.scala 163:26]
    node _addrT_0_temp_T_8 = bits(addrTProc, 2, 2) @[FFTEngine.scala 163:34]
    node _addrT_0_temp_T_9 = bits(addrTProc, 4, 4) @[FFTEngine.scala 163:55]
    node addrT_0_temp_4 = mux(isFFT, _addrT_0_temp_T_8, _addrT_0_temp_T_9) @[FFTEngine.scala 163:26]
    node _addrT_0_temp_T_10 = bits(addrTProc, 1, 1) @[FFTEngine.scala 163:34]
    node _addrT_0_temp_T_11 = bits(addrTProc, 5, 5) @[FFTEngine.scala 163:55]
    node addrT_0_temp_5 = mux(isFFT, _addrT_0_temp_T_10, _addrT_0_temp_T_11) @[FFTEngine.scala 163:26]
    node _addrT_0_temp_T_12 = bits(addrTProc, 0, 0) @[FFTEngine.scala 163:34]
    node _addrT_0_temp_T_13 = bits(addrTProc, 6, 6) @[FFTEngine.scala 163:55]
    node addrT_0_temp_6 = mux(isFFT, _addrT_0_temp_T_12, _addrT_0_temp_T_13) @[FFTEngine.scala 163:26]
    wire _addrT_0_WIRE : UInt<1>[7] @[FFTEngine.scala 164:16]
    _addrT_0_WIRE[0] <= addrT_0_temp_0 @[FFTEngine.scala 164:16]
    _addrT_0_WIRE[1] <= addrT_0_temp_1 @[FFTEngine.scala 164:16]
    _addrT_0_WIRE[2] <= addrT_0_temp_2 @[FFTEngine.scala 164:16]
    _addrT_0_WIRE[3] <= addrT_0_temp_3 @[FFTEngine.scala 164:16]
    _addrT_0_WIRE[4] <= addrT_0_temp_4 @[FFTEngine.scala 164:16]
    _addrT_0_WIRE[5] <= addrT_0_temp_5 @[FFTEngine.scala 164:16]
    _addrT_0_WIRE[6] <= addrT_0_temp_6 @[FFTEngine.scala 164:16]
    node addrT_0_lo_hi = cat(_addrT_0_WIRE[2], _addrT_0_WIRE[1]) @[FFTEngine.scala 164:23]
    node addrT_0_lo = cat(addrT_0_lo_hi, _addrT_0_WIRE[0]) @[FFTEngine.scala 164:23]
    node addrT_0_hi_lo = cat(_addrT_0_WIRE[4], _addrT_0_WIRE[3]) @[FFTEngine.scala 164:23]
    node addrT_0_hi_hi = cat(_addrT_0_WIRE[6], _addrT_0_WIRE[5]) @[FFTEngine.scala 164:23]
    node addrT_0_hi = cat(addrT_0_hi_hi, addrT_0_hi_lo) @[FFTEngine.scala 164:23]
    node _addrT_0_T = cat(addrT_0_hi, addrT_0_lo) @[FFTEngine.scala 164:23]
    node _addrT_0_temp_T_14 = bits(addrTKernelPre[0], 6, 6) @[FFTEngine.scala 163:34]
    node _addrT_0_temp_T_15 = bits(addrTKernelPre[0], 0, 0) @[FFTEngine.scala 163:55]
    node addrT_0_temp_0_1 = mux(UInt<1>("h1"), _addrT_0_temp_T_14, _addrT_0_temp_T_15) @[FFTEngine.scala 163:26]
    node _addrT_0_temp_T_16 = bits(addrTKernelPre[0], 5, 5) @[FFTEngine.scala 163:34]
    node _addrT_0_temp_T_17 = bits(addrTKernelPre[0], 1, 1) @[FFTEngine.scala 163:55]
    node addrT_0_temp_1_1 = mux(UInt<1>("h1"), _addrT_0_temp_T_16, _addrT_0_temp_T_17) @[FFTEngine.scala 163:26]
    node _addrT_0_temp_T_18 = bits(addrTKernelPre[0], 4, 4) @[FFTEngine.scala 163:34]
    node _addrT_0_temp_T_19 = bits(addrTKernelPre[0], 2, 2) @[FFTEngine.scala 163:55]
    node addrT_0_temp_2_1 = mux(UInt<1>("h1"), _addrT_0_temp_T_18, _addrT_0_temp_T_19) @[FFTEngine.scala 163:26]
    node _addrT_0_temp_T_20 = bits(addrTKernelPre[0], 3, 3) @[FFTEngine.scala 163:34]
    node _addrT_0_temp_T_21 = bits(addrTKernelPre[0], 3, 3) @[FFTEngine.scala 163:55]
    node addrT_0_temp_3_1 = mux(UInt<1>("h1"), _addrT_0_temp_T_20, _addrT_0_temp_T_21) @[FFTEngine.scala 163:26]
    node _addrT_0_temp_T_22 = bits(addrTKernelPre[0], 2, 2) @[FFTEngine.scala 163:34]
    node _addrT_0_temp_T_23 = bits(addrTKernelPre[0], 4, 4) @[FFTEngine.scala 163:55]
    node addrT_0_temp_4_1 = mux(UInt<1>("h1"), _addrT_0_temp_T_22, _addrT_0_temp_T_23) @[FFTEngine.scala 163:26]
    node _addrT_0_temp_T_24 = bits(addrTKernelPre[0], 1, 1) @[FFTEngine.scala 163:34]
    node _addrT_0_temp_T_25 = bits(addrTKernelPre[0], 5, 5) @[FFTEngine.scala 163:55]
    node addrT_0_temp_5_1 = mux(UInt<1>("h1"), _addrT_0_temp_T_24, _addrT_0_temp_T_25) @[FFTEngine.scala 163:26]
    node _addrT_0_temp_T_26 = bits(addrTKernelPre[0], 0, 0) @[FFTEngine.scala 163:34]
    node _addrT_0_temp_T_27 = bits(addrTKernelPre[0], 6, 6) @[FFTEngine.scala 163:55]
    node addrT_0_temp_6_1 = mux(UInt<1>("h1"), _addrT_0_temp_T_26, _addrT_0_temp_T_27) @[FFTEngine.scala 163:26]
    wire _addrT_0_WIRE_1 : UInt<1>[7] @[FFTEngine.scala 164:16]
    _addrT_0_WIRE_1[0] <= addrT_0_temp_0_1 @[FFTEngine.scala 164:16]
    _addrT_0_WIRE_1[1] <= addrT_0_temp_1_1 @[FFTEngine.scala 164:16]
    _addrT_0_WIRE_1[2] <= addrT_0_temp_2_1 @[FFTEngine.scala 164:16]
    _addrT_0_WIRE_1[3] <= addrT_0_temp_3_1 @[FFTEngine.scala 164:16]
    _addrT_0_WIRE_1[4] <= addrT_0_temp_4_1 @[FFTEngine.scala 164:16]
    _addrT_0_WIRE_1[5] <= addrT_0_temp_5_1 @[FFTEngine.scala 164:16]
    _addrT_0_WIRE_1[6] <= addrT_0_temp_6_1 @[FFTEngine.scala 164:16]
    node addrT_0_lo_hi_1 = cat(_addrT_0_WIRE_1[2], _addrT_0_WIRE_1[1]) @[FFTEngine.scala 164:23]
    node addrT_0_lo_1 = cat(addrT_0_lo_hi_1, _addrT_0_WIRE_1[0]) @[FFTEngine.scala 164:23]
    node addrT_0_hi_lo_1 = cat(_addrT_0_WIRE_1[4], _addrT_0_WIRE_1[3]) @[FFTEngine.scala 164:23]
    node addrT_0_hi_hi_1 = cat(_addrT_0_WIRE_1[6], _addrT_0_WIRE_1[5]) @[FFTEngine.scala 164:23]
    node addrT_0_hi_1 = cat(addrT_0_hi_hi_1, addrT_0_hi_lo_1) @[FFTEngine.scala 164:23]
    node _addrT_0_T_1 = cat(addrT_0_hi_1, addrT_0_lo_1) @[FFTEngine.scala 164:23]
    node _addrT_0_T_2 = mux(procState, _addrT_0_T, _addrT_0_T_1) @[FFTEngine.scala 257:28]
    addrT[0] <= _addrT_0_T_2 @[FFTEngine.scala 257:22]
    node _addrS_1_temp_T = bits(addrSKernelPre[1], 6, 6) @[FFTEngine.scala 163:34]
    node _addrS_1_temp_T_1 = bits(addrSKernelPre[1], 0, 0) @[FFTEngine.scala 163:55]
    node addrS_1_temp_0 = mux(UInt<1>("h1"), _addrS_1_temp_T, _addrS_1_temp_T_1) @[FFTEngine.scala 163:26]
    node _addrS_1_temp_T_2 = bits(addrSKernelPre[1], 5, 5) @[FFTEngine.scala 163:34]
    node _addrS_1_temp_T_3 = bits(addrSKernelPre[1], 1, 1) @[FFTEngine.scala 163:55]
    node addrS_1_temp_1 = mux(UInt<1>("h1"), _addrS_1_temp_T_2, _addrS_1_temp_T_3) @[FFTEngine.scala 163:26]
    node _addrS_1_temp_T_4 = bits(addrSKernelPre[1], 4, 4) @[FFTEngine.scala 163:34]
    node _addrS_1_temp_T_5 = bits(addrSKernelPre[1], 2, 2) @[FFTEngine.scala 163:55]
    node addrS_1_temp_2 = mux(UInt<1>("h1"), _addrS_1_temp_T_4, _addrS_1_temp_T_5) @[FFTEngine.scala 163:26]
    node _addrS_1_temp_T_6 = bits(addrSKernelPre[1], 3, 3) @[FFTEngine.scala 163:34]
    node _addrS_1_temp_T_7 = bits(addrSKernelPre[1], 3, 3) @[FFTEngine.scala 163:55]
    node addrS_1_temp_3 = mux(UInt<1>("h1"), _addrS_1_temp_T_6, _addrS_1_temp_T_7) @[FFTEngine.scala 163:26]
    node _addrS_1_temp_T_8 = bits(addrSKernelPre[1], 2, 2) @[FFTEngine.scala 163:34]
    node _addrS_1_temp_T_9 = bits(addrSKernelPre[1], 4, 4) @[FFTEngine.scala 163:55]
    node addrS_1_temp_4 = mux(UInt<1>("h1"), _addrS_1_temp_T_8, _addrS_1_temp_T_9) @[FFTEngine.scala 163:26]
    node _addrS_1_temp_T_10 = bits(addrSKernelPre[1], 1, 1) @[FFTEngine.scala 163:34]
    node _addrS_1_temp_T_11 = bits(addrSKernelPre[1], 5, 5) @[FFTEngine.scala 163:55]
    node addrS_1_temp_5 = mux(UInt<1>("h1"), _addrS_1_temp_T_10, _addrS_1_temp_T_11) @[FFTEngine.scala 163:26]
    node _addrS_1_temp_T_12 = bits(addrSKernelPre[1], 0, 0) @[FFTEngine.scala 163:34]
    node _addrS_1_temp_T_13 = bits(addrSKernelPre[1], 6, 6) @[FFTEngine.scala 163:55]
    node addrS_1_temp_6 = mux(UInt<1>("h1"), _addrS_1_temp_T_12, _addrS_1_temp_T_13) @[FFTEngine.scala 163:26]
    wire _addrS_1_WIRE : UInt<1>[7] @[FFTEngine.scala 164:16]
    _addrS_1_WIRE[0] <= addrS_1_temp_0 @[FFTEngine.scala 164:16]
    _addrS_1_WIRE[1] <= addrS_1_temp_1 @[FFTEngine.scala 164:16]
    _addrS_1_WIRE[2] <= addrS_1_temp_2 @[FFTEngine.scala 164:16]
    _addrS_1_WIRE[3] <= addrS_1_temp_3 @[FFTEngine.scala 164:16]
    _addrS_1_WIRE[4] <= addrS_1_temp_4 @[FFTEngine.scala 164:16]
    _addrS_1_WIRE[5] <= addrS_1_temp_5 @[FFTEngine.scala 164:16]
    _addrS_1_WIRE[6] <= addrS_1_temp_6 @[FFTEngine.scala 164:16]
    node addrS_1_lo_hi = cat(_addrS_1_WIRE[2], _addrS_1_WIRE[1]) @[FFTEngine.scala 164:23]
    node addrS_1_lo = cat(addrS_1_lo_hi, _addrS_1_WIRE[0]) @[FFTEngine.scala 164:23]
    node addrS_1_hi_lo = cat(_addrS_1_WIRE[4], _addrS_1_WIRE[3]) @[FFTEngine.scala 164:23]
    node addrS_1_hi_hi = cat(_addrS_1_WIRE[6], _addrS_1_WIRE[5]) @[FFTEngine.scala 164:23]
    node addrS_1_hi = cat(addrS_1_hi_hi, addrS_1_hi_lo) @[FFTEngine.scala 164:23]
    node _addrS_1_T = cat(addrS_1_hi, addrS_1_lo) @[FFTEngine.scala 164:23]
    addrS[1] <= _addrS_1_T @[FFTEngine.scala 259:22]
    node _addrT_1_temp_T = bits(addrTKernelPre[1], 6, 6) @[FFTEngine.scala 163:34]
    node _addrT_1_temp_T_1 = bits(addrTKernelPre[1], 0, 0) @[FFTEngine.scala 163:55]
    node addrT_1_temp_0 = mux(UInt<1>("h1"), _addrT_1_temp_T, _addrT_1_temp_T_1) @[FFTEngine.scala 163:26]
    node _addrT_1_temp_T_2 = bits(addrTKernelPre[1], 5, 5) @[FFTEngine.scala 163:34]
    node _addrT_1_temp_T_3 = bits(addrTKernelPre[1], 1, 1) @[FFTEngine.scala 163:55]
    node addrT_1_temp_1 = mux(UInt<1>("h1"), _addrT_1_temp_T_2, _addrT_1_temp_T_3) @[FFTEngine.scala 163:26]
    node _addrT_1_temp_T_4 = bits(addrTKernelPre[1], 4, 4) @[FFTEngine.scala 163:34]
    node _addrT_1_temp_T_5 = bits(addrTKernelPre[1], 2, 2) @[FFTEngine.scala 163:55]
    node addrT_1_temp_2 = mux(UInt<1>("h1"), _addrT_1_temp_T_4, _addrT_1_temp_T_5) @[FFTEngine.scala 163:26]
    node _addrT_1_temp_T_6 = bits(addrTKernelPre[1], 3, 3) @[FFTEngine.scala 163:34]
    node _addrT_1_temp_T_7 = bits(addrTKernelPre[1], 3, 3) @[FFTEngine.scala 163:55]
    node addrT_1_temp_3 = mux(UInt<1>("h1"), _addrT_1_temp_T_6, _addrT_1_temp_T_7) @[FFTEngine.scala 163:26]
    node _addrT_1_temp_T_8 = bits(addrTKernelPre[1], 2, 2) @[FFTEngine.scala 163:34]
    node _addrT_1_temp_T_9 = bits(addrTKernelPre[1], 4, 4) @[FFTEngine.scala 163:55]
    node addrT_1_temp_4 = mux(UInt<1>("h1"), _addrT_1_temp_T_8, _addrT_1_temp_T_9) @[FFTEngine.scala 163:26]
    node _addrT_1_temp_T_10 = bits(addrTKernelPre[1], 1, 1) @[FFTEngine.scala 163:34]
    node _addrT_1_temp_T_11 = bits(addrTKernelPre[1], 5, 5) @[FFTEngine.scala 163:55]
    node addrT_1_temp_5 = mux(UInt<1>("h1"), _addrT_1_temp_T_10, _addrT_1_temp_T_11) @[FFTEngine.scala 163:26]
    node _addrT_1_temp_T_12 = bits(addrTKernelPre[1], 0, 0) @[FFTEngine.scala 163:34]
    node _addrT_1_temp_T_13 = bits(addrTKernelPre[1], 6, 6) @[FFTEngine.scala 163:55]
    node addrT_1_temp_6 = mux(UInt<1>("h1"), _addrT_1_temp_T_12, _addrT_1_temp_T_13) @[FFTEngine.scala 163:26]
    wire _addrT_1_WIRE : UInt<1>[7] @[FFTEngine.scala 164:16]
    _addrT_1_WIRE[0] <= addrT_1_temp_0 @[FFTEngine.scala 164:16]
    _addrT_1_WIRE[1] <= addrT_1_temp_1 @[FFTEngine.scala 164:16]
    _addrT_1_WIRE[2] <= addrT_1_temp_2 @[FFTEngine.scala 164:16]
    _addrT_1_WIRE[3] <= addrT_1_temp_3 @[FFTEngine.scala 164:16]
    _addrT_1_WIRE[4] <= addrT_1_temp_4 @[FFTEngine.scala 164:16]
    _addrT_1_WIRE[5] <= addrT_1_temp_5 @[FFTEngine.scala 164:16]
    _addrT_1_WIRE[6] <= addrT_1_temp_6 @[FFTEngine.scala 164:16]
    node addrT_1_lo_hi = cat(_addrT_1_WIRE[2], _addrT_1_WIRE[1]) @[FFTEngine.scala 164:23]
    node addrT_1_lo = cat(addrT_1_lo_hi, _addrT_1_WIRE[0]) @[FFTEngine.scala 164:23]
    node addrT_1_hi_lo = cat(_addrT_1_WIRE[4], _addrT_1_WIRE[3]) @[FFTEngine.scala 164:23]
    node addrT_1_hi_hi = cat(_addrT_1_WIRE[6], _addrT_1_WIRE[5]) @[FFTEngine.scala 164:23]
    node addrT_1_hi = cat(addrT_1_hi_hi, addrT_1_hi_lo) @[FFTEngine.scala 164:23]
    node _addrT_1_T = cat(addrT_1_hi, addrT_1_lo) @[FFTEngine.scala 164:23]
    addrT[1] <= _addrT_1_T @[FFTEngine.scala 260:22]
    node _addrS_2_temp_T = bits(addrSKernelPre[2], 6, 6) @[FFTEngine.scala 163:34]
    node _addrS_2_temp_T_1 = bits(addrSKernelPre[2], 0, 0) @[FFTEngine.scala 163:55]
    node addrS_2_temp_0 = mux(UInt<1>("h1"), _addrS_2_temp_T, _addrS_2_temp_T_1) @[FFTEngine.scala 163:26]
    node _addrS_2_temp_T_2 = bits(addrSKernelPre[2], 5, 5) @[FFTEngine.scala 163:34]
    node _addrS_2_temp_T_3 = bits(addrSKernelPre[2], 1, 1) @[FFTEngine.scala 163:55]
    node addrS_2_temp_1 = mux(UInt<1>("h1"), _addrS_2_temp_T_2, _addrS_2_temp_T_3) @[FFTEngine.scala 163:26]
    node _addrS_2_temp_T_4 = bits(addrSKernelPre[2], 4, 4) @[FFTEngine.scala 163:34]
    node _addrS_2_temp_T_5 = bits(addrSKernelPre[2], 2, 2) @[FFTEngine.scala 163:55]
    node addrS_2_temp_2 = mux(UInt<1>("h1"), _addrS_2_temp_T_4, _addrS_2_temp_T_5) @[FFTEngine.scala 163:26]
    node _addrS_2_temp_T_6 = bits(addrSKernelPre[2], 3, 3) @[FFTEngine.scala 163:34]
    node _addrS_2_temp_T_7 = bits(addrSKernelPre[2], 3, 3) @[FFTEngine.scala 163:55]
    node addrS_2_temp_3 = mux(UInt<1>("h1"), _addrS_2_temp_T_6, _addrS_2_temp_T_7) @[FFTEngine.scala 163:26]
    node _addrS_2_temp_T_8 = bits(addrSKernelPre[2], 2, 2) @[FFTEngine.scala 163:34]
    node _addrS_2_temp_T_9 = bits(addrSKernelPre[2], 4, 4) @[FFTEngine.scala 163:55]
    node addrS_2_temp_4 = mux(UInt<1>("h1"), _addrS_2_temp_T_8, _addrS_2_temp_T_9) @[FFTEngine.scala 163:26]
    node _addrS_2_temp_T_10 = bits(addrSKernelPre[2], 1, 1) @[FFTEngine.scala 163:34]
    node _addrS_2_temp_T_11 = bits(addrSKernelPre[2], 5, 5) @[FFTEngine.scala 163:55]
    node addrS_2_temp_5 = mux(UInt<1>("h1"), _addrS_2_temp_T_10, _addrS_2_temp_T_11) @[FFTEngine.scala 163:26]
    node _addrS_2_temp_T_12 = bits(addrSKernelPre[2], 0, 0) @[FFTEngine.scala 163:34]
    node _addrS_2_temp_T_13 = bits(addrSKernelPre[2], 6, 6) @[FFTEngine.scala 163:55]
    node addrS_2_temp_6 = mux(UInt<1>("h1"), _addrS_2_temp_T_12, _addrS_2_temp_T_13) @[FFTEngine.scala 163:26]
    wire _addrS_2_WIRE : UInt<1>[7] @[FFTEngine.scala 164:16]
    _addrS_2_WIRE[0] <= addrS_2_temp_0 @[FFTEngine.scala 164:16]
    _addrS_2_WIRE[1] <= addrS_2_temp_1 @[FFTEngine.scala 164:16]
    _addrS_2_WIRE[2] <= addrS_2_temp_2 @[FFTEngine.scala 164:16]
    _addrS_2_WIRE[3] <= addrS_2_temp_3 @[FFTEngine.scala 164:16]
    _addrS_2_WIRE[4] <= addrS_2_temp_4 @[FFTEngine.scala 164:16]
    _addrS_2_WIRE[5] <= addrS_2_temp_5 @[FFTEngine.scala 164:16]
    _addrS_2_WIRE[6] <= addrS_2_temp_6 @[FFTEngine.scala 164:16]
    node addrS_2_lo_hi = cat(_addrS_2_WIRE[2], _addrS_2_WIRE[1]) @[FFTEngine.scala 164:23]
    node addrS_2_lo = cat(addrS_2_lo_hi, _addrS_2_WIRE[0]) @[FFTEngine.scala 164:23]
    node addrS_2_hi_lo = cat(_addrS_2_WIRE[4], _addrS_2_WIRE[3]) @[FFTEngine.scala 164:23]
    node addrS_2_hi_hi = cat(_addrS_2_WIRE[6], _addrS_2_WIRE[5]) @[FFTEngine.scala 164:23]
    node addrS_2_hi = cat(addrS_2_hi_hi, addrS_2_hi_lo) @[FFTEngine.scala 164:23]
    node _addrS_2_T = cat(addrS_2_hi, addrS_2_lo) @[FFTEngine.scala 164:23]
    addrS[2] <= _addrS_2_T @[FFTEngine.scala 259:22]
    node _addrT_2_temp_T = bits(addrTKernelPre[2], 6, 6) @[FFTEngine.scala 163:34]
    node _addrT_2_temp_T_1 = bits(addrTKernelPre[2], 0, 0) @[FFTEngine.scala 163:55]
    node addrT_2_temp_0 = mux(UInt<1>("h1"), _addrT_2_temp_T, _addrT_2_temp_T_1) @[FFTEngine.scala 163:26]
    node _addrT_2_temp_T_2 = bits(addrTKernelPre[2], 5, 5) @[FFTEngine.scala 163:34]
    node _addrT_2_temp_T_3 = bits(addrTKernelPre[2], 1, 1) @[FFTEngine.scala 163:55]
    node addrT_2_temp_1 = mux(UInt<1>("h1"), _addrT_2_temp_T_2, _addrT_2_temp_T_3) @[FFTEngine.scala 163:26]
    node _addrT_2_temp_T_4 = bits(addrTKernelPre[2], 4, 4) @[FFTEngine.scala 163:34]
    node _addrT_2_temp_T_5 = bits(addrTKernelPre[2], 2, 2) @[FFTEngine.scala 163:55]
    node addrT_2_temp_2 = mux(UInt<1>("h1"), _addrT_2_temp_T_4, _addrT_2_temp_T_5) @[FFTEngine.scala 163:26]
    node _addrT_2_temp_T_6 = bits(addrTKernelPre[2], 3, 3) @[FFTEngine.scala 163:34]
    node _addrT_2_temp_T_7 = bits(addrTKernelPre[2], 3, 3) @[FFTEngine.scala 163:55]
    node addrT_2_temp_3 = mux(UInt<1>("h1"), _addrT_2_temp_T_6, _addrT_2_temp_T_7) @[FFTEngine.scala 163:26]
    node _addrT_2_temp_T_8 = bits(addrTKernelPre[2], 2, 2) @[FFTEngine.scala 163:34]
    node _addrT_2_temp_T_9 = bits(addrTKernelPre[2], 4, 4) @[FFTEngine.scala 163:55]
    node addrT_2_temp_4 = mux(UInt<1>("h1"), _addrT_2_temp_T_8, _addrT_2_temp_T_9) @[FFTEngine.scala 163:26]
    node _addrT_2_temp_T_10 = bits(addrTKernelPre[2], 1, 1) @[FFTEngine.scala 163:34]
    node _addrT_2_temp_T_11 = bits(addrTKernelPre[2], 5, 5) @[FFTEngine.scala 163:55]
    node addrT_2_temp_5 = mux(UInt<1>("h1"), _addrT_2_temp_T_10, _addrT_2_temp_T_11) @[FFTEngine.scala 163:26]
    node _addrT_2_temp_T_12 = bits(addrTKernelPre[2], 0, 0) @[FFTEngine.scala 163:34]
    node _addrT_2_temp_T_13 = bits(addrTKernelPre[2], 6, 6) @[FFTEngine.scala 163:55]
    node addrT_2_temp_6 = mux(UInt<1>("h1"), _addrT_2_temp_T_12, _addrT_2_temp_T_13) @[FFTEngine.scala 163:26]
    wire _addrT_2_WIRE : UInt<1>[7] @[FFTEngine.scala 164:16]
    _addrT_2_WIRE[0] <= addrT_2_temp_0 @[FFTEngine.scala 164:16]
    _addrT_2_WIRE[1] <= addrT_2_temp_1 @[FFTEngine.scala 164:16]
    _addrT_2_WIRE[2] <= addrT_2_temp_2 @[FFTEngine.scala 164:16]
    _addrT_2_WIRE[3] <= addrT_2_temp_3 @[FFTEngine.scala 164:16]
    _addrT_2_WIRE[4] <= addrT_2_temp_4 @[FFTEngine.scala 164:16]
    _addrT_2_WIRE[5] <= addrT_2_temp_5 @[FFTEngine.scala 164:16]
    _addrT_2_WIRE[6] <= addrT_2_temp_6 @[FFTEngine.scala 164:16]
    node addrT_2_lo_hi = cat(_addrT_2_WIRE[2], _addrT_2_WIRE[1]) @[FFTEngine.scala 164:23]
    node addrT_2_lo = cat(addrT_2_lo_hi, _addrT_2_WIRE[0]) @[FFTEngine.scala 164:23]
    node addrT_2_hi_lo = cat(_addrT_2_WIRE[4], _addrT_2_WIRE[3]) @[FFTEngine.scala 164:23]
    node addrT_2_hi_hi = cat(_addrT_2_WIRE[6], _addrT_2_WIRE[5]) @[FFTEngine.scala 164:23]
    node addrT_2_hi = cat(addrT_2_hi_hi, addrT_2_hi_lo) @[FFTEngine.scala 164:23]
    node _addrT_2_T = cat(addrT_2_hi, addrT_2_lo) @[FFTEngine.scala 164:23]
    addrT[2] <= _addrT_2_T @[FFTEngine.scala 260:22]
    node _addrS_3_temp_T = bits(addrSKernelPre[3], 6, 6) @[FFTEngine.scala 163:34]
    node _addrS_3_temp_T_1 = bits(addrSKernelPre[3], 0, 0) @[FFTEngine.scala 163:55]
    node addrS_3_temp_0 = mux(UInt<1>("h1"), _addrS_3_temp_T, _addrS_3_temp_T_1) @[FFTEngine.scala 163:26]
    node _addrS_3_temp_T_2 = bits(addrSKernelPre[3], 5, 5) @[FFTEngine.scala 163:34]
    node _addrS_3_temp_T_3 = bits(addrSKernelPre[3], 1, 1) @[FFTEngine.scala 163:55]
    node addrS_3_temp_1 = mux(UInt<1>("h1"), _addrS_3_temp_T_2, _addrS_3_temp_T_3) @[FFTEngine.scala 163:26]
    node _addrS_3_temp_T_4 = bits(addrSKernelPre[3], 4, 4) @[FFTEngine.scala 163:34]
    node _addrS_3_temp_T_5 = bits(addrSKernelPre[3], 2, 2) @[FFTEngine.scala 163:55]
    node addrS_3_temp_2 = mux(UInt<1>("h1"), _addrS_3_temp_T_4, _addrS_3_temp_T_5) @[FFTEngine.scala 163:26]
    node _addrS_3_temp_T_6 = bits(addrSKernelPre[3], 3, 3) @[FFTEngine.scala 163:34]
    node _addrS_3_temp_T_7 = bits(addrSKernelPre[3], 3, 3) @[FFTEngine.scala 163:55]
    node addrS_3_temp_3 = mux(UInt<1>("h1"), _addrS_3_temp_T_6, _addrS_3_temp_T_7) @[FFTEngine.scala 163:26]
    node _addrS_3_temp_T_8 = bits(addrSKernelPre[3], 2, 2) @[FFTEngine.scala 163:34]
    node _addrS_3_temp_T_9 = bits(addrSKernelPre[3], 4, 4) @[FFTEngine.scala 163:55]
    node addrS_3_temp_4 = mux(UInt<1>("h1"), _addrS_3_temp_T_8, _addrS_3_temp_T_9) @[FFTEngine.scala 163:26]
    node _addrS_3_temp_T_10 = bits(addrSKernelPre[3], 1, 1) @[FFTEngine.scala 163:34]
    node _addrS_3_temp_T_11 = bits(addrSKernelPre[3], 5, 5) @[FFTEngine.scala 163:55]
    node addrS_3_temp_5 = mux(UInt<1>("h1"), _addrS_3_temp_T_10, _addrS_3_temp_T_11) @[FFTEngine.scala 163:26]
    node _addrS_3_temp_T_12 = bits(addrSKernelPre[3], 0, 0) @[FFTEngine.scala 163:34]
    node _addrS_3_temp_T_13 = bits(addrSKernelPre[3], 6, 6) @[FFTEngine.scala 163:55]
    node addrS_3_temp_6 = mux(UInt<1>("h1"), _addrS_3_temp_T_12, _addrS_3_temp_T_13) @[FFTEngine.scala 163:26]
    wire _addrS_3_WIRE : UInt<1>[7] @[FFTEngine.scala 164:16]
    _addrS_3_WIRE[0] <= addrS_3_temp_0 @[FFTEngine.scala 164:16]
    _addrS_3_WIRE[1] <= addrS_3_temp_1 @[FFTEngine.scala 164:16]
    _addrS_3_WIRE[2] <= addrS_3_temp_2 @[FFTEngine.scala 164:16]
    _addrS_3_WIRE[3] <= addrS_3_temp_3 @[FFTEngine.scala 164:16]
    _addrS_3_WIRE[4] <= addrS_3_temp_4 @[FFTEngine.scala 164:16]
    _addrS_3_WIRE[5] <= addrS_3_temp_5 @[FFTEngine.scala 164:16]
    _addrS_3_WIRE[6] <= addrS_3_temp_6 @[FFTEngine.scala 164:16]
    node addrS_3_lo_hi = cat(_addrS_3_WIRE[2], _addrS_3_WIRE[1]) @[FFTEngine.scala 164:23]
    node addrS_3_lo = cat(addrS_3_lo_hi, _addrS_3_WIRE[0]) @[FFTEngine.scala 164:23]
    node addrS_3_hi_lo = cat(_addrS_3_WIRE[4], _addrS_3_WIRE[3]) @[FFTEngine.scala 164:23]
    node addrS_3_hi_hi = cat(_addrS_3_WIRE[6], _addrS_3_WIRE[5]) @[FFTEngine.scala 164:23]
    node addrS_3_hi = cat(addrS_3_hi_hi, addrS_3_hi_lo) @[FFTEngine.scala 164:23]
    node _addrS_3_T = cat(addrS_3_hi, addrS_3_lo) @[FFTEngine.scala 164:23]
    addrS[3] <= _addrS_3_T @[FFTEngine.scala 259:22]
    node _addrT_3_temp_T = bits(addrTKernelPre[3], 6, 6) @[FFTEngine.scala 163:34]
    node _addrT_3_temp_T_1 = bits(addrTKernelPre[3], 0, 0) @[FFTEngine.scala 163:55]
    node addrT_3_temp_0 = mux(UInt<1>("h1"), _addrT_3_temp_T, _addrT_3_temp_T_1) @[FFTEngine.scala 163:26]
    node _addrT_3_temp_T_2 = bits(addrTKernelPre[3], 5, 5) @[FFTEngine.scala 163:34]
    node _addrT_3_temp_T_3 = bits(addrTKernelPre[3], 1, 1) @[FFTEngine.scala 163:55]
    node addrT_3_temp_1 = mux(UInt<1>("h1"), _addrT_3_temp_T_2, _addrT_3_temp_T_3) @[FFTEngine.scala 163:26]
    node _addrT_3_temp_T_4 = bits(addrTKernelPre[3], 4, 4) @[FFTEngine.scala 163:34]
    node _addrT_3_temp_T_5 = bits(addrTKernelPre[3], 2, 2) @[FFTEngine.scala 163:55]
    node addrT_3_temp_2 = mux(UInt<1>("h1"), _addrT_3_temp_T_4, _addrT_3_temp_T_5) @[FFTEngine.scala 163:26]
    node _addrT_3_temp_T_6 = bits(addrTKernelPre[3], 3, 3) @[FFTEngine.scala 163:34]
    node _addrT_3_temp_T_7 = bits(addrTKernelPre[3], 3, 3) @[FFTEngine.scala 163:55]
    node addrT_3_temp_3 = mux(UInt<1>("h1"), _addrT_3_temp_T_6, _addrT_3_temp_T_7) @[FFTEngine.scala 163:26]
    node _addrT_3_temp_T_8 = bits(addrTKernelPre[3], 2, 2) @[FFTEngine.scala 163:34]
    node _addrT_3_temp_T_9 = bits(addrTKernelPre[3], 4, 4) @[FFTEngine.scala 163:55]
    node addrT_3_temp_4 = mux(UInt<1>("h1"), _addrT_3_temp_T_8, _addrT_3_temp_T_9) @[FFTEngine.scala 163:26]
    node _addrT_3_temp_T_10 = bits(addrTKernelPre[3], 1, 1) @[FFTEngine.scala 163:34]
    node _addrT_3_temp_T_11 = bits(addrTKernelPre[3], 5, 5) @[FFTEngine.scala 163:55]
    node addrT_3_temp_5 = mux(UInt<1>("h1"), _addrT_3_temp_T_10, _addrT_3_temp_T_11) @[FFTEngine.scala 163:26]
    node _addrT_3_temp_T_12 = bits(addrTKernelPre[3], 0, 0) @[FFTEngine.scala 163:34]
    node _addrT_3_temp_T_13 = bits(addrTKernelPre[3], 6, 6) @[FFTEngine.scala 163:55]
    node addrT_3_temp_6 = mux(UInt<1>("h1"), _addrT_3_temp_T_12, _addrT_3_temp_T_13) @[FFTEngine.scala 163:26]
    wire _addrT_3_WIRE : UInt<1>[7] @[FFTEngine.scala 164:16]
    _addrT_3_WIRE[0] <= addrT_3_temp_0 @[FFTEngine.scala 164:16]
    _addrT_3_WIRE[1] <= addrT_3_temp_1 @[FFTEngine.scala 164:16]
    _addrT_3_WIRE[2] <= addrT_3_temp_2 @[FFTEngine.scala 164:16]
    _addrT_3_WIRE[3] <= addrT_3_temp_3 @[FFTEngine.scala 164:16]
    _addrT_3_WIRE[4] <= addrT_3_temp_4 @[FFTEngine.scala 164:16]
    _addrT_3_WIRE[5] <= addrT_3_temp_5 @[FFTEngine.scala 164:16]
    _addrT_3_WIRE[6] <= addrT_3_temp_6 @[FFTEngine.scala 164:16]
    node addrT_3_lo_hi = cat(_addrT_3_WIRE[2], _addrT_3_WIRE[1]) @[FFTEngine.scala 164:23]
    node addrT_3_lo = cat(addrT_3_lo_hi, _addrT_3_WIRE[0]) @[FFTEngine.scala 164:23]
    node addrT_3_hi_lo = cat(_addrT_3_WIRE[4], _addrT_3_WIRE[3]) @[FFTEngine.scala 164:23]
    node addrT_3_hi_hi = cat(_addrT_3_WIRE[6], _addrT_3_WIRE[5]) @[FFTEngine.scala 164:23]
    node addrT_3_hi = cat(addrT_3_hi_hi, addrT_3_hi_lo) @[FFTEngine.scala 164:23]
    node _addrT_3_T = cat(addrT_3_hi, addrT_3_lo) @[FFTEngine.scala 164:23]
    addrT[3] <= _addrT_3_T @[FFTEngine.scala 260:22]
    node sameAddr = eq(addrS[0], addrT[0]) @[FFTEngine.scala 264:29]
    node _addrSBankSelKernelPrePre_sum_T = dshr(addrS[0], UInt<2>("h2")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_1 = bits(_addrSBankSelKernelPrePre_sum_T, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_2 = add(UInt<3>("h0"), _addrSBankSelKernelPrePre_sum_T_1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_3 = tail(_addrSBankSelKernelPrePre_sum_T_2, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_4 = dshr(addrS[0], UInt<3>("h5")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_5 = bits(_addrSBankSelKernelPrePre_sum_T_4, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_6 = add(_addrSBankSelKernelPrePre_sum_T_3, _addrSBankSelKernelPrePre_sum_T_5) @[FFTEngine.scala 267:107]
    node addrSBankSelKernelPrePre_0_0 = tail(_addrSBankSelKernelPrePre_sum_T_6, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_7 = dshr(addrS[0], UInt<1>("h1")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_8 = bits(_addrSBankSelKernelPrePre_sum_T_7, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_9 = add(UInt<3>("h0"), _addrSBankSelKernelPrePre_sum_T_8) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_10 = tail(_addrSBankSelKernelPrePre_sum_T_9, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_11 = dshr(addrS[0], UInt<3>("h4")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_12 = bits(_addrSBankSelKernelPrePre_sum_T_11, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_13 = add(_addrSBankSelKernelPrePre_sum_T_10, _addrSBankSelKernelPrePre_sum_T_12) @[FFTEngine.scala 267:107]
    node addrSBankSelKernelPrePre_0_1 = tail(_addrSBankSelKernelPrePre_sum_T_13, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_14 = dshr(addrS[0], UInt<1>("h0")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_15 = bits(_addrSBankSelKernelPrePre_sum_T_14, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_16 = add(UInt<3>("h0"), _addrSBankSelKernelPrePre_sum_T_15) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_17 = tail(_addrSBankSelKernelPrePre_sum_T_16, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_18 = dshr(addrS[0], UInt<2>("h3")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_19 = bits(_addrSBankSelKernelPrePre_sum_T_18, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_20 = add(_addrSBankSelKernelPrePre_sum_T_17, _addrSBankSelKernelPrePre_sum_T_19) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_21 = tail(_addrSBankSelKernelPrePre_sum_T_20, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_22 = dshr(addrS[0], UInt<3>("h6")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_23 = bits(_addrSBankSelKernelPrePre_sum_T_22, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_24 = add(_addrSBankSelKernelPrePre_sum_T_21, _addrSBankSelKernelPrePre_sum_T_23) @[FFTEngine.scala 267:107]
    node addrSBankSelKernelPrePre_0_2 = tail(_addrSBankSelKernelPrePre_sum_T_24, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_25 = dshr(addrS[1], UInt<2>("h2")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_26 = bits(_addrSBankSelKernelPrePre_sum_T_25, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_27 = add(UInt<3>("h0"), _addrSBankSelKernelPrePre_sum_T_26) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_28 = tail(_addrSBankSelKernelPrePre_sum_T_27, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_29 = dshr(addrS[1], UInt<3>("h5")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_30 = bits(_addrSBankSelKernelPrePre_sum_T_29, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_31 = add(_addrSBankSelKernelPrePre_sum_T_28, _addrSBankSelKernelPrePre_sum_T_30) @[FFTEngine.scala 267:107]
    node addrSBankSelKernelPrePre_1_0 = tail(_addrSBankSelKernelPrePre_sum_T_31, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_32 = dshr(addrS[1], UInt<1>("h1")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_33 = bits(_addrSBankSelKernelPrePre_sum_T_32, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_34 = add(UInt<3>("h0"), _addrSBankSelKernelPrePre_sum_T_33) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_35 = tail(_addrSBankSelKernelPrePre_sum_T_34, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_36 = dshr(addrS[1], UInt<3>("h4")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_37 = bits(_addrSBankSelKernelPrePre_sum_T_36, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_38 = add(_addrSBankSelKernelPrePre_sum_T_35, _addrSBankSelKernelPrePre_sum_T_37) @[FFTEngine.scala 267:107]
    node addrSBankSelKernelPrePre_1_1 = tail(_addrSBankSelKernelPrePre_sum_T_38, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_39 = dshr(addrS[1], UInt<1>("h0")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_40 = bits(_addrSBankSelKernelPrePre_sum_T_39, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_41 = add(UInt<3>("h0"), _addrSBankSelKernelPrePre_sum_T_40) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_42 = tail(_addrSBankSelKernelPrePre_sum_T_41, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_43 = dshr(addrS[1], UInt<2>("h3")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_44 = bits(_addrSBankSelKernelPrePre_sum_T_43, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_45 = add(_addrSBankSelKernelPrePre_sum_T_42, _addrSBankSelKernelPrePre_sum_T_44) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_46 = tail(_addrSBankSelKernelPrePre_sum_T_45, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_47 = dshr(addrS[1], UInt<3>("h6")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_48 = bits(_addrSBankSelKernelPrePre_sum_T_47, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_49 = add(_addrSBankSelKernelPrePre_sum_T_46, _addrSBankSelKernelPrePre_sum_T_48) @[FFTEngine.scala 267:107]
    node addrSBankSelKernelPrePre_1_2 = tail(_addrSBankSelKernelPrePre_sum_T_49, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_50 = dshr(addrS[2], UInt<2>("h2")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_51 = bits(_addrSBankSelKernelPrePre_sum_T_50, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_52 = add(UInt<3>("h0"), _addrSBankSelKernelPrePre_sum_T_51) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_53 = tail(_addrSBankSelKernelPrePre_sum_T_52, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_54 = dshr(addrS[2], UInt<3>("h5")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_55 = bits(_addrSBankSelKernelPrePre_sum_T_54, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_56 = add(_addrSBankSelKernelPrePre_sum_T_53, _addrSBankSelKernelPrePre_sum_T_55) @[FFTEngine.scala 267:107]
    node addrSBankSelKernelPrePre_2_0 = tail(_addrSBankSelKernelPrePre_sum_T_56, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_57 = dshr(addrS[2], UInt<1>("h1")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_58 = bits(_addrSBankSelKernelPrePre_sum_T_57, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_59 = add(UInt<3>("h0"), _addrSBankSelKernelPrePre_sum_T_58) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_60 = tail(_addrSBankSelKernelPrePre_sum_T_59, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_61 = dshr(addrS[2], UInt<3>("h4")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_62 = bits(_addrSBankSelKernelPrePre_sum_T_61, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_63 = add(_addrSBankSelKernelPrePre_sum_T_60, _addrSBankSelKernelPrePre_sum_T_62) @[FFTEngine.scala 267:107]
    node addrSBankSelKernelPrePre_2_1 = tail(_addrSBankSelKernelPrePre_sum_T_63, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_64 = dshr(addrS[2], UInt<1>("h0")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_65 = bits(_addrSBankSelKernelPrePre_sum_T_64, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_66 = add(UInt<3>("h0"), _addrSBankSelKernelPrePre_sum_T_65) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_67 = tail(_addrSBankSelKernelPrePre_sum_T_66, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_68 = dshr(addrS[2], UInt<2>("h3")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_69 = bits(_addrSBankSelKernelPrePre_sum_T_68, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_70 = add(_addrSBankSelKernelPrePre_sum_T_67, _addrSBankSelKernelPrePre_sum_T_69) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_71 = tail(_addrSBankSelKernelPrePre_sum_T_70, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_72 = dshr(addrS[2], UInt<3>("h6")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_73 = bits(_addrSBankSelKernelPrePre_sum_T_72, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_74 = add(_addrSBankSelKernelPrePre_sum_T_71, _addrSBankSelKernelPrePre_sum_T_73) @[FFTEngine.scala 267:107]
    node addrSBankSelKernelPrePre_2_2 = tail(_addrSBankSelKernelPrePre_sum_T_74, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_75 = dshr(addrS[3], UInt<2>("h2")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_76 = bits(_addrSBankSelKernelPrePre_sum_T_75, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_77 = add(UInt<3>("h0"), _addrSBankSelKernelPrePre_sum_T_76) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_78 = tail(_addrSBankSelKernelPrePre_sum_T_77, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_79 = dshr(addrS[3], UInt<3>("h5")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_80 = bits(_addrSBankSelKernelPrePre_sum_T_79, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_81 = add(_addrSBankSelKernelPrePre_sum_T_78, _addrSBankSelKernelPrePre_sum_T_80) @[FFTEngine.scala 267:107]
    node addrSBankSelKernelPrePre_3_0 = tail(_addrSBankSelKernelPrePre_sum_T_81, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_82 = dshr(addrS[3], UInt<1>("h1")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_83 = bits(_addrSBankSelKernelPrePre_sum_T_82, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_84 = add(UInt<3>("h0"), _addrSBankSelKernelPrePre_sum_T_83) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_85 = tail(_addrSBankSelKernelPrePre_sum_T_84, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_86 = dshr(addrS[3], UInt<3>("h4")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_87 = bits(_addrSBankSelKernelPrePre_sum_T_86, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_88 = add(_addrSBankSelKernelPrePre_sum_T_85, _addrSBankSelKernelPrePre_sum_T_87) @[FFTEngine.scala 267:107]
    node addrSBankSelKernelPrePre_3_1 = tail(_addrSBankSelKernelPrePre_sum_T_88, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_89 = dshr(addrS[3], UInt<1>("h0")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_90 = bits(_addrSBankSelKernelPrePre_sum_T_89, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_91 = add(UInt<3>("h0"), _addrSBankSelKernelPrePre_sum_T_90) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_92 = tail(_addrSBankSelKernelPrePre_sum_T_91, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_93 = dshr(addrS[3], UInt<2>("h3")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_94 = bits(_addrSBankSelKernelPrePre_sum_T_93, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_95 = add(_addrSBankSelKernelPrePre_sum_T_92, _addrSBankSelKernelPrePre_sum_T_94) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_96 = tail(_addrSBankSelKernelPrePre_sum_T_95, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPrePre_sum_T_97 = dshr(addrS[3], UInt<3>("h6")) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_98 = bits(_addrSBankSelKernelPrePre_sum_T_97, 0, 0) @[FFTEngine.scala 267:115]
    node _addrSBankSelKernelPrePre_sum_T_99 = add(_addrSBankSelKernelPrePre_sum_T_96, _addrSBankSelKernelPrePre_sum_T_98) @[FFTEngine.scala 267:107]
    node addrSBankSelKernelPrePre_3_2 = tail(_addrSBankSelKernelPrePre_sum_T_99, 1) @[FFTEngine.scala 267:107]
    node _addrSBankSelKernelPre_T = shl(UInt<1>("h0"), 1) @[FFTEngine.scala 273:138]
    node _addrSBankSelKernelPre_T_1 = add(_addrSBankSelKernelPre_T, addrSBankSelKernelPrePre_0_0) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_2 = tail(_addrSBankSelKernelPre_T_1, 1) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_3 = shl(_addrSBankSelKernelPre_T_2, 1) @[FFTEngine.scala 273:138]
    node _addrSBankSelKernelPre_T_4 = add(_addrSBankSelKernelPre_T_3, addrSBankSelKernelPrePre_0_1) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_5 = tail(_addrSBankSelKernelPre_T_4, 1) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_6 = shl(_addrSBankSelKernelPre_T_5, 1) @[FFTEngine.scala 273:138]
    node _addrSBankSelKernelPre_T_7 = add(_addrSBankSelKernelPre_T_6, addrSBankSelKernelPrePre_0_2) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_8 = tail(_addrSBankSelKernelPre_T_7, 1) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_9 = shl(UInt<1>("h0"), 1) @[FFTEngine.scala 273:138]
    node _addrSBankSelKernelPre_T_10 = add(_addrSBankSelKernelPre_T_9, addrSBankSelKernelPrePre_1_0) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_11 = tail(_addrSBankSelKernelPre_T_10, 1) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_12 = shl(_addrSBankSelKernelPre_T_11, 1) @[FFTEngine.scala 273:138]
    node _addrSBankSelKernelPre_T_13 = add(_addrSBankSelKernelPre_T_12, addrSBankSelKernelPrePre_1_1) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_14 = tail(_addrSBankSelKernelPre_T_13, 1) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_15 = shl(_addrSBankSelKernelPre_T_14, 1) @[FFTEngine.scala 273:138]
    node _addrSBankSelKernelPre_T_16 = add(_addrSBankSelKernelPre_T_15, addrSBankSelKernelPrePre_1_2) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_17 = tail(_addrSBankSelKernelPre_T_16, 1) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_18 = shl(UInt<1>("h0"), 1) @[FFTEngine.scala 273:138]
    node _addrSBankSelKernelPre_T_19 = add(_addrSBankSelKernelPre_T_18, addrSBankSelKernelPrePre_2_0) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_20 = tail(_addrSBankSelKernelPre_T_19, 1) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_21 = shl(_addrSBankSelKernelPre_T_20, 1) @[FFTEngine.scala 273:138]
    node _addrSBankSelKernelPre_T_22 = add(_addrSBankSelKernelPre_T_21, addrSBankSelKernelPrePre_2_1) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_23 = tail(_addrSBankSelKernelPre_T_22, 1) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_24 = shl(_addrSBankSelKernelPre_T_23, 1) @[FFTEngine.scala 273:138]
    node _addrSBankSelKernelPre_T_25 = add(_addrSBankSelKernelPre_T_24, addrSBankSelKernelPrePre_2_2) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_26 = tail(_addrSBankSelKernelPre_T_25, 1) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_27 = shl(UInt<1>("h0"), 1) @[FFTEngine.scala 273:138]
    node _addrSBankSelKernelPre_T_28 = add(_addrSBankSelKernelPre_T_27, addrSBankSelKernelPrePre_3_0) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_29 = tail(_addrSBankSelKernelPre_T_28, 1) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_30 = shl(_addrSBankSelKernelPre_T_29, 1) @[FFTEngine.scala 273:138]
    node _addrSBankSelKernelPre_T_31 = add(_addrSBankSelKernelPre_T_30, addrSBankSelKernelPrePre_3_1) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_32 = tail(_addrSBankSelKernelPre_T_31, 1) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_33 = shl(_addrSBankSelKernelPre_T_32, 1) @[FFTEngine.scala 273:138]
    node _addrSBankSelKernelPre_T_34 = add(_addrSBankSelKernelPre_T_33, addrSBankSelKernelPrePre_3_2) @[FFTEngine.scala 273:144]
    node _addrSBankSelKernelPre_T_35 = tail(_addrSBankSelKernelPre_T_34, 1) @[FFTEngine.scala 273:144]
    node addrSBankSelKernelPre_0 = bits(_addrSBankSelKernelPre_T_8, 2, 0) @[FFTEngine.scala 273:160]
    node addrSBankSelKernelPre_1 = bits(_addrSBankSelKernelPre_T_17, 2, 0) @[FFTEngine.scala 273:160]
    node addrSBankSelKernelPre_2 = bits(_addrSBankSelKernelPre_T_26, 2, 0) @[FFTEngine.scala 273:160]
    node addrSBankSelKernelPre_3 = bits(_addrSBankSelKernelPre_T_35, 2, 0) @[FFTEngine.scala 273:160]
    wire addrSBankSelKernel : UInt<3>[4] @[FFTEngine.scala 275:34]
    node _addrTBankSelKernelPrePre_sum_T = dshr(addrT[0], UInt<2>("h2")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_1 = bits(_addrTBankSelKernelPrePre_sum_T, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_2 = add(UInt<3>("h0"), _addrTBankSelKernelPrePre_sum_T_1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_3 = tail(_addrTBankSelKernelPrePre_sum_T_2, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_4 = dshr(addrT[0], UInt<3>("h5")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_5 = bits(_addrTBankSelKernelPrePre_sum_T_4, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_6 = add(_addrTBankSelKernelPrePre_sum_T_3, _addrTBankSelKernelPrePre_sum_T_5) @[FFTEngine.scala 267:107]
    node addrTBankSelKernelPrePre_0_0 = tail(_addrTBankSelKernelPrePre_sum_T_6, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_7 = dshr(addrT[0], UInt<1>("h1")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_8 = bits(_addrTBankSelKernelPrePre_sum_T_7, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_9 = add(UInt<3>("h0"), _addrTBankSelKernelPrePre_sum_T_8) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_10 = tail(_addrTBankSelKernelPrePre_sum_T_9, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_11 = dshr(addrT[0], UInt<3>("h4")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_12 = bits(_addrTBankSelKernelPrePre_sum_T_11, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_13 = add(_addrTBankSelKernelPrePre_sum_T_10, _addrTBankSelKernelPrePre_sum_T_12) @[FFTEngine.scala 267:107]
    node addrTBankSelKernelPrePre_0_1 = tail(_addrTBankSelKernelPrePre_sum_T_13, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_14 = dshr(addrT[0], UInt<1>("h0")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_15 = bits(_addrTBankSelKernelPrePre_sum_T_14, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_16 = add(UInt<3>("h0"), _addrTBankSelKernelPrePre_sum_T_15) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_17 = tail(_addrTBankSelKernelPrePre_sum_T_16, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_18 = dshr(addrT[0], UInt<2>("h3")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_19 = bits(_addrTBankSelKernelPrePre_sum_T_18, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_20 = add(_addrTBankSelKernelPrePre_sum_T_17, _addrTBankSelKernelPrePre_sum_T_19) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_21 = tail(_addrTBankSelKernelPrePre_sum_T_20, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_22 = dshr(addrT[0], UInt<3>("h6")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_23 = bits(_addrTBankSelKernelPrePre_sum_T_22, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_24 = add(_addrTBankSelKernelPrePre_sum_T_21, _addrTBankSelKernelPrePre_sum_T_23) @[FFTEngine.scala 267:107]
    node addrTBankSelKernelPrePre_0_2 = tail(_addrTBankSelKernelPrePre_sum_T_24, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_25 = dshr(addrT[1], UInt<2>("h2")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_26 = bits(_addrTBankSelKernelPrePre_sum_T_25, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_27 = add(UInt<3>("h0"), _addrTBankSelKernelPrePre_sum_T_26) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_28 = tail(_addrTBankSelKernelPrePre_sum_T_27, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_29 = dshr(addrT[1], UInt<3>("h5")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_30 = bits(_addrTBankSelKernelPrePre_sum_T_29, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_31 = add(_addrTBankSelKernelPrePre_sum_T_28, _addrTBankSelKernelPrePre_sum_T_30) @[FFTEngine.scala 267:107]
    node addrTBankSelKernelPrePre_1_0 = tail(_addrTBankSelKernelPrePre_sum_T_31, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_32 = dshr(addrT[1], UInt<1>("h1")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_33 = bits(_addrTBankSelKernelPrePre_sum_T_32, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_34 = add(UInt<3>("h0"), _addrTBankSelKernelPrePre_sum_T_33) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_35 = tail(_addrTBankSelKernelPrePre_sum_T_34, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_36 = dshr(addrT[1], UInt<3>("h4")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_37 = bits(_addrTBankSelKernelPrePre_sum_T_36, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_38 = add(_addrTBankSelKernelPrePre_sum_T_35, _addrTBankSelKernelPrePre_sum_T_37) @[FFTEngine.scala 267:107]
    node addrTBankSelKernelPrePre_1_1 = tail(_addrTBankSelKernelPrePre_sum_T_38, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_39 = dshr(addrT[1], UInt<1>("h0")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_40 = bits(_addrTBankSelKernelPrePre_sum_T_39, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_41 = add(UInt<3>("h0"), _addrTBankSelKernelPrePre_sum_T_40) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_42 = tail(_addrTBankSelKernelPrePre_sum_T_41, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_43 = dshr(addrT[1], UInt<2>("h3")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_44 = bits(_addrTBankSelKernelPrePre_sum_T_43, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_45 = add(_addrTBankSelKernelPrePre_sum_T_42, _addrTBankSelKernelPrePre_sum_T_44) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_46 = tail(_addrTBankSelKernelPrePre_sum_T_45, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_47 = dshr(addrT[1], UInt<3>("h6")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_48 = bits(_addrTBankSelKernelPrePre_sum_T_47, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_49 = add(_addrTBankSelKernelPrePre_sum_T_46, _addrTBankSelKernelPrePre_sum_T_48) @[FFTEngine.scala 267:107]
    node addrTBankSelKernelPrePre_1_2 = tail(_addrTBankSelKernelPrePre_sum_T_49, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_50 = dshr(addrT[2], UInt<2>("h2")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_51 = bits(_addrTBankSelKernelPrePre_sum_T_50, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_52 = add(UInt<3>("h0"), _addrTBankSelKernelPrePre_sum_T_51) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_53 = tail(_addrTBankSelKernelPrePre_sum_T_52, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_54 = dshr(addrT[2], UInt<3>("h5")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_55 = bits(_addrTBankSelKernelPrePre_sum_T_54, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_56 = add(_addrTBankSelKernelPrePre_sum_T_53, _addrTBankSelKernelPrePre_sum_T_55) @[FFTEngine.scala 267:107]
    node addrTBankSelKernelPrePre_2_0 = tail(_addrTBankSelKernelPrePre_sum_T_56, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_57 = dshr(addrT[2], UInt<1>("h1")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_58 = bits(_addrTBankSelKernelPrePre_sum_T_57, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_59 = add(UInt<3>("h0"), _addrTBankSelKernelPrePre_sum_T_58) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_60 = tail(_addrTBankSelKernelPrePre_sum_T_59, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_61 = dshr(addrT[2], UInt<3>("h4")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_62 = bits(_addrTBankSelKernelPrePre_sum_T_61, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_63 = add(_addrTBankSelKernelPrePre_sum_T_60, _addrTBankSelKernelPrePre_sum_T_62) @[FFTEngine.scala 267:107]
    node addrTBankSelKernelPrePre_2_1 = tail(_addrTBankSelKernelPrePre_sum_T_63, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_64 = dshr(addrT[2], UInt<1>("h0")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_65 = bits(_addrTBankSelKernelPrePre_sum_T_64, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_66 = add(UInt<3>("h0"), _addrTBankSelKernelPrePre_sum_T_65) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_67 = tail(_addrTBankSelKernelPrePre_sum_T_66, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_68 = dshr(addrT[2], UInt<2>("h3")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_69 = bits(_addrTBankSelKernelPrePre_sum_T_68, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_70 = add(_addrTBankSelKernelPrePre_sum_T_67, _addrTBankSelKernelPrePre_sum_T_69) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_71 = tail(_addrTBankSelKernelPrePre_sum_T_70, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_72 = dshr(addrT[2], UInt<3>("h6")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_73 = bits(_addrTBankSelKernelPrePre_sum_T_72, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_74 = add(_addrTBankSelKernelPrePre_sum_T_71, _addrTBankSelKernelPrePre_sum_T_73) @[FFTEngine.scala 267:107]
    node addrTBankSelKernelPrePre_2_2 = tail(_addrTBankSelKernelPrePre_sum_T_74, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_75 = dshr(addrT[3], UInt<2>("h2")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_76 = bits(_addrTBankSelKernelPrePre_sum_T_75, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_77 = add(UInt<3>("h0"), _addrTBankSelKernelPrePre_sum_T_76) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_78 = tail(_addrTBankSelKernelPrePre_sum_T_77, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_79 = dshr(addrT[3], UInt<3>("h5")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_80 = bits(_addrTBankSelKernelPrePre_sum_T_79, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_81 = add(_addrTBankSelKernelPrePre_sum_T_78, _addrTBankSelKernelPrePre_sum_T_80) @[FFTEngine.scala 267:107]
    node addrTBankSelKernelPrePre_3_0 = tail(_addrTBankSelKernelPrePre_sum_T_81, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_82 = dshr(addrT[3], UInt<1>("h1")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_83 = bits(_addrTBankSelKernelPrePre_sum_T_82, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_84 = add(UInt<3>("h0"), _addrTBankSelKernelPrePre_sum_T_83) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_85 = tail(_addrTBankSelKernelPrePre_sum_T_84, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_86 = dshr(addrT[3], UInt<3>("h4")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_87 = bits(_addrTBankSelKernelPrePre_sum_T_86, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_88 = add(_addrTBankSelKernelPrePre_sum_T_85, _addrTBankSelKernelPrePre_sum_T_87) @[FFTEngine.scala 267:107]
    node addrTBankSelKernelPrePre_3_1 = tail(_addrTBankSelKernelPrePre_sum_T_88, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_89 = dshr(addrT[3], UInt<1>("h0")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_90 = bits(_addrTBankSelKernelPrePre_sum_T_89, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_91 = add(UInt<3>("h0"), _addrTBankSelKernelPrePre_sum_T_90) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_92 = tail(_addrTBankSelKernelPrePre_sum_T_91, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_93 = dshr(addrT[3], UInt<2>("h3")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_94 = bits(_addrTBankSelKernelPrePre_sum_T_93, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_95 = add(_addrTBankSelKernelPrePre_sum_T_92, _addrTBankSelKernelPrePre_sum_T_94) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_96 = tail(_addrTBankSelKernelPrePre_sum_T_95, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPrePre_sum_T_97 = dshr(addrT[3], UInt<3>("h6")) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_98 = bits(_addrTBankSelKernelPrePre_sum_T_97, 0, 0) @[FFTEngine.scala 267:115]
    node _addrTBankSelKernelPrePre_sum_T_99 = add(_addrTBankSelKernelPrePre_sum_T_96, _addrTBankSelKernelPrePre_sum_T_98) @[FFTEngine.scala 267:107]
    node addrTBankSelKernelPrePre_3_2 = tail(_addrTBankSelKernelPrePre_sum_T_99, 1) @[FFTEngine.scala 267:107]
    node _addrTBankSelKernelPre_T = shl(UInt<1>("h0"), 1) @[FFTEngine.scala 279:138]
    node _addrTBankSelKernelPre_T_1 = add(_addrTBankSelKernelPre_T, addrTBankSelKernelPrePre_0_0) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_2 = tail(_addrTBankSelKernelPre_T_1, 1) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_3 = shl(_addrTBankSelKernelPre_T_2, 1) @[FFTEngine.scala 279:138]
    node _addrTBankSelKernelPre_T_4 = add(_addrTBankSelKernelPre_T_3, addrTBankSelKernelPrePre_0_1) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_5 = tail(_addrTBankSelKernelPre_T_4, 1) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_6 = shl(_addrTBankSelKernelPre_T_5, 1) @[FFTEngine.scala 279:138]
    node _addrTBankSelKernelPre_T_7 = add(_addrTBankSelKernelPre_T_6, addrTBankSelKernelPrePre_0_2) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_8 = tail(_addrTBankSelKernelPre_T_7, 1) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_9 = shl(UInt<1>("h0"), 1) @[FFTEngine.scala 279:138]
    node _addrTBankSelKernelPre_T_10 = add(_addrTBankSelKernelPre_T_9, addrTBankSelKernelPrePre_1_0) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_11 = tail(_addrTBankSelKernelPre_T_10, 1) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_12 = shl(_addrTBankSelKernelPre_T_11, 1) @[FFTEngine.scala 279:138]
    node _addrTBankSelKernelPre_T_13 = add(_addrTBankSelKernelPre_T_12, addrTBankSelKernelPrePre_1_1) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_14 = tail(_addrTBankSelKernelPre_T_13, 1) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_15 = shl(_addrTBankSelKernelPre_T_14, 1) @[FFTEngine.scala 279:138]
    node _addrTBankSelKernelPre_T_16 = add(_addrTBankSelKernelPre_T_15, addrTBankSelKernelPrePre_1_2) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_17 = tail(_addrTBankSelKernelPre_T_16, 1) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_18 = shl(UInt<1>("h0"), 1) @[FFTEngine.scala 279:138]
    node _addrTBankSelKernelPre_T_19 = add(_addrTBankSelKernelPre_T_18, addrTBankSelKernelPrePre_2_0) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_20 = tail(_addrTBankSelKernelPre_T_19, 1) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_21 = shl(_addrTBankSelKernelPre_T_20, 1) @[FFTEngine.scala 279:138]
    node _addrTBankSelKernelPre_T_22 = add(_addrTBankSelKernelPre_T_21, addrTBankSelKernelPrePre_2_1) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_23 = tail(_addrTBankSelKernelPre_T_22, 1) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_24 = shl(_addrTBankSelKernelPre_T_23, 1) @[FFTEngine.scala 279:138]
    node _addrTBankSelKernelPre_T_25 = add(_addrTBankSelKernelPre_T_24, addrTBankSelKernelPrePre_2_2) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_26 = tail(_addrTBankSelKernelPre_T_25, 1) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_27 = shl(UInt<1>("h0"), 1) @[FFTEngine.scala 279:138]
    node _addrTBankSelKernelPre_T_28 = add(_addrTBankSelKernelPre_T_27, addrTBankSelKernelPrePre_3_0) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_29 = tail(_addrTBankSelKernelPre_T_28, 1) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_30 = shl(_addrTBankSelKernelPre_T_29, 1) @[FFTEngine.scala 279:138]
    node _addrTBankSelKernelPre_T_31 = add(_addrTBankSelKernelPre_T_30, addrTBankSelKernelPrePre_3_1) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_32 = tail(_addrTBankSelKernelPre_T_31, 1) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_33 = shl(_addrTBankSelKernelPre_T_32, 1) @[FFTEngine.scala 279:138]
    node _addrTBankSelKernelPre_T_34 = add(_addrTBankSelKernelPre_T_33, addrTBankSelKernelPrePre_3_2) @[FFTEngine.scala 279:144]
    node _addrTBankSelKernelPre_T_35 = tail(_addrTBankSelKernelPre_T_34, 1) @[FFTEngine.scala 279:144]
    node addrTBankSelKernelPre_0 = bits(_addrTBankSelKernelPre_T_8, 2, 0) @[FFTEngine.scala 279:160]
    node addrTBankSelKernelPre_1 = bits(_addrTBankSelKernelPre_T_17, 2, 0) @[FFTEngine.scala 279:160]
    node addrTBankSelKernelPre_2 = bits(_addrTBankSelKernelPre_T_26, 2, 0) @[FFTEngine.scala 279:160]
    node addrTBankSelKernelPre_3 = bits(_addrTBankSelKernelPre_T_35, 2, 0) @[FFTEngine.scala 279:160]
    wire addrTBankSelKernel : UInt<3>[4] @[FFTEngine.scala 281:34]
    when kernelState : @[FFTEngine.scala 284:27]
      addrSBankSelKernel[0] <= addrSBankSelKernelPre_0 @[FFTEngine.scala 285:35]
      addrTBankSelKernel[0] <= addrTBankSelKernelPre_0 @[FFTEngine.scala 286:35]
    else :
      addrSBankSelKernel[0] <= UInt<3>("h0") @[FFTEngine.scala 288:35]
      addrTBankSelKernel[0] <= UInt<3>("h1") @[FFTEngine.scala 289:35]
    when kernelState : @[FFTEngine.scala 284:27]
      addrSBankSelKernel[1] <= addrSBankSelKernelPre_1 @[FFTEngine.scala 285:35]
      addrTBankSelKernel[1] <= addrTBankSelKernelPre_1 @[FFTEngine.scala 286:35]
    else :
      addrSBankSelKernel[1] <= UInt<3>("h2") @[FFTEngine.scala 288:35]
      addrTBankSelKernel[1] <= UInt<3>("h3") @[FFTEngine.scala 289:35]
    when kernelState : @[FFTEngine.scala 284:27]
      addrSBankSelKernel[2] <= addrSBankSelKernelPre_2 @[FFTEngine.scala 285:35]
      addrTBankSelKernel[2] <= addrTBankSelKernelPre_2 @[FFTEngine.scala 286:35]
    else :
      addrSBankSelKernel[2] <= UInt<3>("h4") @[FFTEngine.scala 288:35]
      addrTBankSelKernel[2] <= UInt<3>("h5") @[FFTEngine.scala 289:35]
    when kernelState : @[FFTEngine.scala 284:27]
      addrSBankSelKernel[3] <= addrSBankSelKernelPre_3 @[FFTEngine.scala 285:35]
      addrTBankSelKernel[3] <= addrTBankSelKernelPre_3 @[FFTEngine.scala 286:35]
    else :
      addrSBankSelKernel[3] <= UInt<3>("h6") @[FFTEngine.scala 288:35]
      addrTBankSelKernel[3] <= UInt<3>("h7") @[FFTEngine.scala 289:35]
    wire addrSBankSelProc : UInt[4] @[FFTEngine.scala 293:32]
    wire addrTBankSelProc : UInt[4] @[FFTEngine.scala 294:32]
    wire addrSBankSelProcPre : UInt<1>[3] @[FFTEngine.scala 296:39]
    wire addrTBankSelProcPre : UInt<1>[3] @[FFTEngine.scala 297:39]
    node _addrSBankSelProcPre_0_T = bits(addrS[0], 0, 0) @[FFTEngine.scala 299:47]
    node _addrSBankSelProcPre_0_T_1 = bits(addrS[0], 6, 6) @[FFTEngine.scala 299:61]
    node _addrSBankSelProcPre_0_T_2 = xor(_addrSBankSelProcPre_0_T, _addrSBankSelProcPre_0_T_1) @[FFTEngine.scala 299:51]
    addrSBankSelProcPre[0] <= _addrSBankSelProcPre_0_T_2 @[FFTEngine.scala 299:36]
    node _addrTBankSelProcPre_0_T = bits(addrT[0], 0, 0) @[FFTEngine.scala 300:47]
    node _addrTBankSelProcPre_0_T_1 = bits(addrT[0], 6, 6) @[FFTEngine.scala 300:61]
    node _addrTBankSelProcPre_0_T_2 = xor(_addrTBankSelProcPre_0_T, _addrTBankSelProcPre_0_T_1) @[FFTEngine.scala 300:51]
    addrTBankSelProcPre[0] <= _addrTBankSelProcPre_0_T_2 @[FFTEngine.scala 300:36]
    node _addrSBankSelProcPre_1_T = bits(addrS[0], 1, 1) @[FFTEngine.scala 299:47]
    node _addrSBankSelProcPre_1_T_1 = bits(addrS[0], 5, 5) @[FFTEngine.scala 299:61]
    node _addrSBankSelProcPre_1_T_2 = xor(_addrSBankSelProcPre_1_T, _addrSBankSelProcPre_1_T_1) @[FFTEngine.scala 299:51]
    addrSBankSelProcPre[1] <= _addrSBankSelProcPre_1_T_2 @[FFTEngine.scala 299:36]
    node _addrTBankSelProcPre_1_T = bits(addrT[0], 1, 1) @[FFTEngine.scala 300:47]
    node _addrTBankSelProcPre_1_T_1 = bits(addrT[0], 5, 5) @[FFTEngine.scala 300:61]
    node _addrTBankSelProcPre_1_T_2 = xor(_addrTBankSelProcPre_1_T, _addrTBankSelProcPre_1_T_1) @[FFTEngine.scala 300:51]
    addrTBankSelProcPre[1] <= _addrTBankSelProcPre_1_T_2 @[FFTEngine.scala 300:36]
    node _addrSBankSelProcPre_2_T = bits(addrS[0], 2, 2) @[FFTEngine.scala 299:47]
    node _addrSBankSelProcPre_2_T_1 = bits(addrS[0], 4, 4) @[FFTEngine.scala 299:61]
    node _addrSBankSelProcPre_2_T_2 = xor(_addrSBankSelProcPre_2_T, _addrSBankSelProcPre_2_T_1) @[FFTEngine.scala 299:51]
    addrSBankSelProcPre[2] <= _addrSBankSelProcPre_2_T_2 @[FFTEngine.scala 299:36]
    node _addrTBankSelProcPre_2_T = bits(addrT[0], 2, 2) @[FFTEngine.scala 300:47]
    node _addrTBankSelProcPre_2_T_1 = bits(addrT[0], 4, 4) @[FFTEngine.scala 300:61]
    node _addrTBankSelProcPre_2_T_2 = xor(_addrTBankSelProcPre_2_T, _addrTBankSelProcPre_2_T_1) @[FFTEngine.scala 300:51]
    addrTBankSelProcPre[2] <= _addrTBankSelProcPre_2_T_2 @[FFTEngine.scala 300:36]
    node _addrSBankSelProc_0_T = cat(addrSBankSelProcPre[0], addrSBankSelProcPre[1]) @[Cat.scala 33:92]
    node _addrSBankSelProc_0_T_1 = cat(_addrSBankSelProc_0_T, addrSBankSelProcPre[2]) @[Cat.scala 33:92]
    addrSBankSelProc[0] <= _addrSBankSelProc_0_T_1 @[FFTEngine.scala 302:29]
    node _addrTBankSelProc_0_T = cat(addrTBankSelProcPre[0], addrTBankSelProcPre[1]) @[Cat.scala 33:92]
    node _addrTBankSelProc_0_T_1 = cat(_addrTBankSelProc_0_T, addrTBankSelProcPre[2]) @[Cat.scala 33:92]
    addrTBankSelProc[0] <= _addrTBankSelProc_0_T_1 @[FFTEngine.scala 303:29]
    wire addrSBankSelProcPre_1 : UInt<1>[3] @[FFTEngine.scala 296:39]
    wire addrTBankSelProcPre_1 : UInt<1>[3] @[FFTEngine.scala 297:39]
    node _addrSBankSelProcPre_0_T_3 = bits(addrS[1], 0, 0) @[FFTEngine.scala 299:47]
    node _addrSBankSelProcPre_0_T_4 = bits(addrS[1], 6, 6) @[FFTEngine.scala 299:61]
    node _addrSBankSelProcPre_0_T_5 = xor(_addrSBankSelProcPre_0_T_3, _addrSBankSelProcPre_0_T_4) @[FFTEngine.scala 299:51]
    addrSBankSelProcPre_1[0] <= _addrSBankSelProcPre_0_T_5 @[FFTEngine.scala 299:36]
    node _addrTBankSelProcPre_0_T_3 = bits(addrT[1], 0, 0) @[FFTEngine.scala 300:47]
    node _addrTBankSelProcPre_0_T_4 = bits(addrT[1], 6, 6) @[FFTEngine.scala 300:61]
    node _addrTBankSelProcPre_0_T_5 = xor(_addrTBankSelProcPre_0_T_3, _addrTBankSelProcPre_0_T_4) @[FFTEngine.scala 300:51]
    addrTBankSelProcPre_1[0] <= _addrTBankSelProcPre_0_T_5 @[FFTEngine.scala 300:36]
    node _addrSBankSelProcPre_1_T_3 = bits(addrS[1], 1, 1) @[FFTEngine.scala 299:47]
    node _addrSBankSelProcPre_1_T_4 = bits(addrS[1], 5, 5) @[FFTEngine.scala 299:61]
    node _addrSBankSelProcPre_1_T_5 = xor(_addrSBankSelProcPre_1_T_3, _addrSBankSelProcPre_1_T_4) @[FFTEngine.scala 299:51]
    addrSBankSelProcPre_1[1] <= _addrSBankSelProcPre_1_T_5 @[FFTEngine.scala 299:36]
    node _addrTBankSelProcPre_1_T_3 = bits(addrT[1], 1, 1) @[FFTEngine.scala 300:47]
    node _addrTBankSelProcPre_1_T_4 = bits(addrT[1], 5, 5) @[FFTEngine.scala 300:61]
    node _addrTBankSelProcPre_1_T_5 = xor(_addrTBankSelProcPre_1_T_3, _addrTBankSelProcPre_1_T_4) @[FFTEngine.scala 300:51]
    addrTBankSelProcPre_1[1] <= _addrTBankSelProcPre_1_T_5 @[FFTEngine.scala 300:36]
    node _addrSBankSelProcPre_2_T_3 = bits(addrS[1], 2, 2) @[FFTEngine.scala 299:47]
    node _addrSBankSelProcPre_2_T_4 = bits(addrS[1], 4, 4) @[FFTEngine.scala 299:61]
    node _addrSBankSelProcPre_2_T_5 = xor(_addrSBankSelProcPre_2_T_3, _addrSBankSelProcPre_2_T_4) @[FFTEngine.scala 299:51]
    addrSBankSelProcPre_1[2] <= _addrSBankSelProcPre_2_T_5 @[FFTEngine.scala 299:36]
    node _addrTBankSelProcPre_2_T_3 = bits(addrT[1], 2, 2) @[FFTEngine.scala 300:47]
    node _addrTBankSelProcPre_2_T_4 = bits(addrT[1], 4, 4) @[FFTEngine.scala 300:61]
    node _addrTBankSelProcPre_2_T_5 = xor(_addrTBankSelProcPre_2_T_3, _addrTBankSelProcPre_2_T_4) @[FFTEngine.scala 300:51]
    addrTBankSelProcPre_1[2] <= _addrTBankSelProcPre_2_T_5 @[FFTEngine.scala 300:36]
    node _addrSBankSelProc_1_T = cat(addrSBankSelProcPre_1[0], addrSBankSelProcPre_1[1]) @[Cat.scala 33:92]
    node _addrSBankSelProc_1_T_1 = cat(_addrSBankSelProc_1_T, addrSBankSelProcPre_1[2]) @[Cat.scala 33:92]
    addrSBankSelProc[1] <= _addrSBankSelProc_1_T_1 @[FFTEngine.scala 302:29]
    node _addrTBankSelProc_1_T = cat(addrTBankSelProcPre_1[0], addrTBankSelProcPre_1[1]) @[Cat.scala 33:92]
    node _addrTBankSelProc_1_T_1 = cat(_addrTBankSelProc_1_T, addrTBankSelProcPre_1[2]) @[Cat.scala 33:92]
    addrTBankSelProc[1] <= _addrTBankSelProc_1_T_1 @[FFTEngine.scala 303:29]
    wire addrSBankSelProcPre_2 : UInt<1>[3] @[FFTEngine.scala 296:39]
    wire addrTBankSelProcPre_2 : UInt<1>[3] @[FFTEngine.scala 297:39]
    node _addrSBankSelProcPre_0_T_6 = bits(addrS[2], 0, 0) @[FFTEngine.scala 299:47]
    node _addrSBankSelProcPre_0_T_7 = bits(addrS[2], 6, 6) @[FFTEngine.scala 299:61]
    node _addrSBankSelProcPre_0_T_8 = xor(_addrSBankSelProcPre_0_T_6, _addrSBankSelProcPre_0_T_7) @[FFTEngine.scala 299:51]
    addrSBankSelProcPre_2[0] <= _addrSBankSelProcPre_0_T_8 @[FFTEngine.scala 299:36]
    node _addrTBankSelProcPre_0_T_6 = bits(addrT[2], 0, 0) @[FFTEngine.scala 300:47]
    node _addrTBankSelProcPre_0_T_7 = bits(addrT[2], 6, 6) @[FFTEngine.scala 300:61]
    node _addrTBankSelProcPre_0_T_8 = xor(_addrTBankSelProcPre_0_T_6, _addrTBankSelProcPre_0_T_7) @[FFTEngine.scala 300:51]
    addrTBankSelProcPre_2[0] <= _addrTBankSelProcPre_0_T_8 @[FFTEngine.scala 300:36]
    node _addrSBankSelProcPre_1_T_6 = bits(addrS[2], 1, 1) @[FFTEngine.scala 299:47]
    node _addrSBankSelProcPre_1_T_7 = bits(addrS[2], 5, 5) @[FFTEngine.scala 299:61]
    node _addrSBankSelProcPre_1_T_8 = xor(_addrSBankSelProcPre_1_T_6, _addrSBankSelProcPre_1_T_7) @[FFTEngine.scala 299:51]
    addrSBankSelProcPre_2[1] <= _addrSBankSelProcPre_1_T_8 @[FFTEngine.scala 299:36]
    node _addrTBankSelProcPre_1_T_6 = bits(addrT[2], 1, 1) @[FFTEngine.scala 300:47]
    node _addrTBankSelProcPre_1_T_7 = bits(addrT[2], 5, 5) @[FFTEngine.scala 300:61]
    node _addrTBankSelProcPre_1_T_8 = xor(_addrTBankSelProcPre_1_T_6, _addrTBankSelProcPre_1_T_7) @[FFTEngine.scala 300:51]
    addrTBankSelProcPre_2[1] <= _addrTBankSelProcPre_1_T_8 @[FFTEngine.scala 300:36]
    node _addrSBankSelProcPre_2_T_6 = bits(addrS[2], 2, 2) @[FFTEngine.scala 299:47]
    node _addrSBankSelProcPre_2_T_7 = bits(addrS[2], 4, 4) @[FFTEngine.scala 299:61]
    node _addrSBankSelProcPre_2_T_8 = xor(_addrSBankSelProcPre_2_T_6, _addrSBankSelProcPre_2_T_7) @[FFTEngine.scala 299:51]
    addrSBankSelProcPre_2[2] <= _addrSBankSelProcPre_2_T_8 @[FFTEngine.scala 299:36]
    node _addrTBankSelProcPre_2_T_6 = bits(addrT[2], 2, 2) @[FFTEngine.scala 300:47]
    node _addrTBankSelProcPre_2_T_7 = bits(addrT[2], 4, 4) @[FFTEngine.scala 300:61]
    node _addrTBankSelProcPre_2_T_8 = xor(_addrTBankSelProcPre_2_T_6, _addrTBankSelProcPre_2_T_7) @[FFTEngine.scala 300:51]
    addrTBankSelProcPre_2[2] <= _addrTBankSelProcPre_2_T_8 @[FFTEngine.scala 300:36]
    node _addrSBankSelProc_2_T = cat(addrSBankSelProcPre_2[0], addrSBankSelProcPre_2[1]) @[Cat.scala 33:92]
    node _addrSBankSelProc_2_T_1 = cat(_addrSBankSelProc_2_T, addrSBankSelProcPre_2[2]) @[Cat.scala 33:92]
    addrSBankSelProc[2] <= _addrSBankSelProc_2_T_1 @[FFTEngine.scala 302:29]
    node _addrTBankSelProc_2_T = cat(addrTBankSelProcPre_2[0], addrTBankSelProcPre_2[1]) @[Cat.scala 33:92]
    node _addrTBankSelProc_2_T_1 = cat(_addrTBankSelProc_2_T, addrTBankSelProcPre_2[2]) @[Cat.scala 33:92]
    addrTBankSelProc[2] <= _addrTBankSelProc_2_T_1 @[FFTEngine.scala 303:29]
    wire addrSBankSelProcPre_3 : UInt<1>[3] @[FFTEngine.scala 296:39]
    wire addrTBankSelProcPre_3 : UInt<1>[3] @[FFTEngine.scala 297:39]
    node _addrSBankSelProcPre_0_T_9 = bits(addrS[3], 0, 0) @[FFTEngine.scala 299:47]
    node _addrSBankSelProcPre_0_T_10 = bits(addrS[3], 6, 6) @[FFTEngine.scala 299:61]
    node _addrSBankSelProcPre_0_T_11 = xor(_addrSBankSelProcPre_0_T_9, _addrSBankSelProcPre_0_T_10) @[FFTEngine.scala 299:51]
    addrSBankSelProcPre_3[0] <= _addrSBankSelProcPre_0_T_11 @[FFTEngine.scala 299:36]
    node _addrTBankSelProcPre_0_T_9 = bits(addrT[3], 0, 0) @[FFTEngine.scala 300:47]
    node _addrTBankSelProcPre_0_T_10 = bits(addrT[3], 6, 6) @[FFTEngine.scala 300:61]
    node _addrTBankSelProcPre_0_T_11 = xor(_addrTBankSelProcPre_0_T_9, _addrTBankSelProcPre_0_T_10) @[FFTEngine.scala 300:51]
    addrTBankSelProcPre_3[0] <= _addrTBankSelProcPre_0_T_11 @[FFTEngine.scala 300:36]
    node _addrSBankSelProcPre_1_T_9 = bits(addrS[3], 1, 1) @[FFTEngine.scala 299:47]
    node _addrSBankSelProcPre_1_T_10 = bits(addrS[3], 5, 5) @[FFTEngine.scala 299:61]
    node _addrSBankSelProcPre_1_T_11 = xor(_addrSBankSelProcPre_1_T_9, _addrSBankSelProcPre_1_T_10) @[FFTEngine.scala 299:51]
    addrSBankSelProcPre_3[1] <= _addrSBankSelProcPre_1_T_11 @[FFTEngine.scala 299:36]
    node _addrTBankSelProcPre_1_T_9 = bits(addrT[3], 1, 1) @[FFTEngine.scala 300:47]
    node _addrTBankSelProcPre_1_T_10 = bits(addrT[3], 5, 5) @[FFTEngine.scala 300:61]
    node _addrTBankSelProcPre_1_T_11 = xor(_addrTBankSelProcPre_1_T_9, _addrTBankSelProcPre_1_T_10) @[FFTEngine.scala 300:51]
    addrTBankSelProcPre_3[1] <= _addrTBankSelProcPre_1_T_11 @[FFTEngine.scala 300:36]
    node _addrSBankSelProcPre_2_T_9 = bits(addrS[3], 2, 2) @[FFTEngine.scala 299:47]
    node _addrSBankSelProcPre_2_T_10 = bits(addrS[3], 4, 4) @[FFTEngine.scala 299:61]
    node _addrSBankSelProcPre_2_T_11 = xor(_addrSBankSelProcPre_2_T_9, _addrSBankSelProcPre_2_T_10) @[FFTEngine.scala 299:51]
    addrSBankSelProcPre_3[2] <= _addrSBankSelProcPre_2_T_11 @[FFTEngine.scala 299:36]
    node _addrTBankSelProcPre_2_T_9 = bits(addrT[3], 2, 2) @[FFTEngine.scala 300:47]
    node _addrTBankSelProcPre_2_T_10 = bits(addrT[3], 4, 4) @[FFTEngine.scala 300:61]
    node _addrTBankSelProcPre_2_T_11 = xor(_addrTBankSelProcPre_2_T_9, _addrTBankSelProcPre_2_T_10) @[FFTEngine.scala 300:51]
    addrTBankSelProcPre_3[2] <= _addrTBankSelProcPre_2_T_11 @[FFTEngine.scala 300:36]
    node _addrSBankSelProc_3_T = cat(addrSBankSelProcPre_3[0], addrSBankSelProcPre_3[1]) @[Cat.scala 33:92]
    node _addrSBankSelProc_3_T_1 = cat(_addrSBankSelProc_3_T, addrSBankSelProcPre_3[2]) @[Cat.scala 33:92]
    addrSBankSelProc[3] <= _addrSBankSelProc_3_T_1 @[FFTEngine.scala 302:29]
    node _addrTBankSelProc_3_T = cat(addrTBankSelProcPre_3[0], addrTBankSelProcPre_3[1]) @[Cat.scala 33:92]
    node _addrTBankSelProc_3_T_1 = cat(_addrTBankSelProc_3_T, addrTBankSelProcPre_3[2]) @[Cat.scala 33:92]
    addrTBankSelProc[3] <= _addrTBankSelProc_3_T_1 @[FFTEngine.scala 303:29]
    wire addrSBankSelKernel1c : UInt[4] @[FFTEngine.scala 306:36]
    wire addrSBankSelKernel2c : UInt[4] @[FFTEngine.scala 307:36]
    wire addrSBankSelKernel3c : UInt[4] @[FFTEngine.scala 308:36]
    wire addrTBankSelKernel1c : UInt[4] @[FFTEngine.scala 309:36]
    wire addrTBankSelKernel2c : UInt[4] @[FFTEngine.scala 310:36]
    wire addrTBankSelKernel3c : UInt[4] @[FFTEngine.scala 311:36]
    reg addrSBankSelKernel1c_0_r : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelKernel1c_0_r <= addrSBankSelKernel[0] @[Reg.scala 36:22]
    addrSBankSelKernel1c[0] <= addrSBankSelKernel1c_0_r @[FFTEngine.scala 314:33]
    reg addrSBankSelKernel2c_0_r : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelKernel2c_0_r <= addrSBankSelKernel1c[0] @[Reg.scala 36:22]
    addrSBankSelKernel2c[0] <= addrSBankSelKernel2c_0_r @[FFTEngine.scala 315:33]
    reg addrSBankSelKernel3c_0_r : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelKernel3c_0_r <= addrSBankSelKernel2c[0] @[Reg.scala 36:22]
    addrSBankSelKernel3c[0] <= addrSBankSelKernel3c_0_r @[FFTEngine.scala 316:33]
    reg addrTBankSelKernel1c_0_r : UInt, clock with :
      reset => (reset, UInt<1>("h1")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelKernel1c_0_r <= addrTBankSelKernel[0] @[Reg.scala 36:22]
    addrTBankSelKernel1c[0] <= addrTBankSelKernel1c_0_r @[FFTEngine.scala 317:33]
    reg addrTBankSelKernel2c_0_r : UInt, clock with :
      reset => (reset, UInt<1>("h1")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelKernel2c_0_r <= addrTBankSelKernel1c[0] @[Reg.scala 36:22]
    addrTBankSelKernel2c[0] <= addrTBankSelKernel2c_0_r @[FFTEngine.scala 318:33]
    reg addrTBankSelKernel3c_0_r : UInt, clock with :
      reset => (reset, UInt<1>("h1")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelKernel3c_0_r <= addrTBankSelKernel2c[0] @[Reg.scala 36:22]
    addrTBankSelKernel3c[0] <= addrTBankSelKernel3c_0_r @[FFTEngine.scala 319:33]
    reg addrSBankSelKernel1c_1_r : UInt, clock with :
      reset => (reset, UInt<2>("h2")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelKernel1c_1_r <= addrSBankSelKernel[1] @[Reg.scala 36:22]
    addrSBankSelKernel1c[1] <= addrSBankSelKernel1c_1_r @[FFTEngine.scala 314:33]
    reg addrSBankSelKernel2c_1_r : UInt, clock with :
      reset => (reset, UInt<2>("h2")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelKernel2c_1_r <= addrSBankSelKernel1c[1] @[Reg.scala 36:22]
    addrSBankSelKernel2c[1] <= addrSBankSelKernel2c_1_r @[FFTEngine.scala 315:33]
    reg addrSBankSelKernel3c_1_r : UInt, clock with :
      reset => (reset, UInt<2>("h2")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelKernel3c_1_r <= addrSBankSelKernel2c[1] @[Reg.scala 36:22]
    addrSBankSelKernel3c[1] <= addrSBankSelKernel3c_1_r @[FFTEngine.scala 316:33]
    reg addrTBankSelKernel1c_1_r : UInt, clock with :
      reset => (reset, UInt<2>("h3")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelKernel1c_1_r <= addrTBankSelKernel[1] @[Reg.scala 36:22]
    addrTBankSelKernel1c[1] <= addrTBankSelKernel1c_1_r @[FFTEngine.scala 317:33]
    reg addrTBankSelKernel2c_1_r : UInt, clock with :
      reset => (reset, UInt<2>("h3")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelKernel2c_1_r <= addrTBankSelKernel1c[1] @[Reg.scala 36:22]
    addrTBankSelKernel2c[1] <= addrTBankSelKernel2c_1_r @[FFTEngine.scala 318:33]
    reg addrTBankSelKernel3c_1_r : UInt, clock with :
      reset => (reset, UInt<2>("h3")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelKernel3c_1_r <= addrTBankSelKernel2c[1] @[Reg.scala 36:22]
    addrTBankSelKernel3c[1] <= addrTBankSelKernel3c_1_r @[FFTEngine.scala 319:33]
    reg addrSBankSelKernel1c_2_r : UInt, clock with :
      reset => (reset, UInt<3>("h4")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelKernel1c_2_r <= addrSBankSelKernel[2] @[Reg.scala 36:22]
    addrSBankSelKernel1c[2] <= addrSBankSelKernel1c_2_r @[FFTEngine.scala 314:33]
    reg addrSBankSelKernel2c_2_r : UInt, clock with :
      reset => (reset, UInt<3>("h4")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelKernel2c_2_r <= addrSBankSelKernel1c[2] @[Reg.scala 36:22]
    addrSBankSelKernel2c[2] <= addrSBankSelKernel2c_2_r @[FFTEngine.scala 315:33]
    reg addrSBankSelKernel3c_2_r : UInt, clock with :
      reset => (reset, UInt<3>("h4")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelKernel3c_2_r <= addrSBankSelKernel2c[2] @[Reg.scala 36:22]
    addrSBankSelKernel3c[2] <= addrSBankSelKernel3c_2_r @[FFTEngine.scala 316:33]
    reg addrTBankSelKernel1c_2_r : UInt, clock with :
      reset => (reset, UInt<3>("h5")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelKernel1c_2_r <= addrTBankSelKernel[2] @[Reg.scala 36:22]
    addrTBankSelKernel1c[2] <= addrTBankSelKernel1c_2_r @[FFTEngine.scala 317:33]
    reg addrTBankSelKernel2c_2_r : UInt, clock with :
      reset => (reset, UInt<3>("h5")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelKernel2c_2_r <= addrTBankSelKernel1c[2] @[Reg.scala 36:22]
    addrTBankSelKernel2c[2] <= addrTBankSelKernel2c_2_r @[FFTEngine.scala 318:33]
    reg addrTBankSelKernel3c_2_r : UInt, clock with :
      reset => (reset, UInt<3>("h5")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelKernel3c_2_r <= addrTBankSelKernel2c[2] @[Reg.scala 36:22]
    addrTBankSelKernel3c[2] <= addrTBankSelKernel3c_2_r @[FFTEngine.scala 319:33]
    reg addrSBankSelKernel1c_3_r : UInt, clock with :
      reset => (reset, UInt<3>("h6")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelKernel1c_3_r <= addrSBankSelKernel[3] @[Reg.scala 36:22]
    addrSBankSelKernel1c[3] <= addrSBankSelKernel1c_3_r @[FFTEngine.scala 314:33]
    reg addrSBankSelKernel2c_3_r : UInt, clock with :
      reset => (reset, UInt<3>("h6")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelKernel2c_3_r <= addrSBankSelKernel1c[3] @[Reg.scala 36:22]
    addrSBankSelKernel2c[3] <= addrSBankSelKernel2c_3_r @[FFTEngine.scala 315:33]
    reg addrSBankSelKernel3c_3_r : UInt, clock with :
      reset => (reset, UInt<3>("h6")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelKernel3c_3_r <= addrSBankSelKernel2c[3] @[Reg.scala 36:22]
    addrSBankSelKernel3c[3] <= addrSBankSelKernel3c_3_r @[FFTEngine.scala 316:33]
    reg addrTBankSelKernel1c_3_r : UInt, clock with :
      reset => (reset, UInt<3>("h7")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelKernel1c_3_r <= addrTBankSelKernel[3] @[Reg.scala 36:22]
    addrTBankSelKernel1c[3] <= addrTBankSelKernel1c_3_r @[FFTEngine.scala 317:33]
    reg addrTBankSelKernel2c_3_r : UInt, clock with :
      reset => (reset, UInt<3>("h7")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelKernel2c_3_r <= addrTBankSelKernel1c[3] @[Reg.scala 36:22]
    addrTBankSelKernel2c[3] <= addrTBankSelKernel2c_3_r @[FFTEngine.scala 318:33]
    reg addrTBankSelKernel3c_3_r : UInt, clock with :
      reset => (reset, UInt<3>("h7")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelKernel3c_3_r <= addrTBankSelKernel2c[3] @[Reg.scala 36:22]
    addrTBankSelKernel3c[3] <= addrTBankSelKernel3c_3_r @[FFTEngine.scala 319:33]
    wire addrSBankSelProc1c : UInt[4] @[FFTEngine.scala 322:34]
    wire addrSBankSelProc2c : UInt[4] @[FFTEngine.scala 323:34]
    wire addrSBankSelProc3c : UInt[4] @[FFTEngine.scala 324:34]
    wire addrTBankSelProc1c : UInt[4] @[FFTEngine.scala 325:34]
    wire addrTBankSelProc2c : UInt[4] @[FFTEngine.scala 326:34]
    wire addrTBankSelProc3c : UInt[4] @[FFTEngine.scala 327:34]
    reg addrSBankSelProc1c_0_r : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelProc1c_0_r <= addrSBankSelProc[0] @[Reg.scala 36:22]
    addrSBankSelProc1c[0] <= addrSBankSelProc1c_0_r @[FFTEngine.scala 330:31]
    reg addrSBankSelProc2c_0_r : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelProc2c_0_r <= addrSBankSelProc1c[0] @[Reg.scala 36:22]
    addrSBankSelProc2c[0] <= addrSBankSelProc2c_0_r @[FFTEngine.scala 331:31]
    reg addrSBankSelProc3c_0_r : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelProc3c_0_r <= addrSBankSelProc2c[0] @[Reg.scala 36:22]
    addrSBankSelProc3c[0] <= addrSBankSelProc3c_0_r @[FFTEngine.scala 332:31]
    reg addrTBankSelProc1c_0_r : UInt, clock with :
      reset => (reset, UInt<1>("h1")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelProc1c_0_r <= addrTBankSelProc[0] @[Reg.scala 36:22]
    addrTBankSelProc1c[0] <= addrTBankSelProc1c_0_r @[FFTEngine.scala 333:31]
    reg addrTBankSelProc2c_0_r : UInt, clock with :
      reset => (reset, UInt<1>("h1")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelProc2c_0_r <= addrTBankSelProc1c[0] @[Reg.scala 36:22]
    addrTBankSelProc2c[0] <= addrTBankSelProc2c_0_r @[FFTEngine.scala 334:31]
    reg addrTBankSelProc3c_0_r : UInt, clock with :
      reset => (reset, UInt<1>("h1")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelProc3c_0_r <= addrTBankSelProc2c[0] @[Reg.scala 36:22]
    addrTBankSelProc3c[0] <= addrTBankSelProc3c_0_r @[FFTEngine.scala 335:31]
    reg addrSBankSelProc1c_1_r : UInt, clock with :
      reset => (reset, UInt<2>("h2")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelProc1c_1_r <= addrSBankSelProc[1] @[Reg.scala 36:22]
    addrSBankSelProc1c[1] <= addrSBankSelProc1c_1_r @[FFTEngine.scala 330:31]
    reg addrSBankSelProc2c_1_r : UInt, clock with :
      reset => (reset, UInt<2>("h2")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelProc2c_1_r <= addrSBankSelProc1c[1] @[Reg.scala 36:22]
    addrSBankSelProc2c[1] <= addrSBankSelProc2c_1_r @[FFTEngine.scala 331:31]
    reg addrSBankSelProc3c_1_r : UInt, clock with :
      reset => (reset, UInt<2>("h2")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelProc3c_1_r <= addrSBankSelProc2c[1] @[Reg.scala 36:22]
    addrSBankSelProc3c[1] <= addrSBankSelProc3c_1_r @[FFTEngine.scala 332:31]
    reg addrTBankSelProc1c_1_r : UInt, clock with :
      reset => (reset, UInt<2>("h3")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelProc1c_1_r <= addrTBankSelProc[1] @[Reg.scala 36:22]
    addrTBankSelProc1c[1] <= addrTBankSelProc1c_1_r @[FFTEngine.scala 333:31]
    reg addrTBankSelProc2c_1_r : UInt, clock with :
      reset => (reset, UInt<2>("h3")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelProc2c_1_r <= addrTBankSelProc1c[1] @[Reg.scala 36:22]
    addrTBankSelProc2c[1] <= addrTBankSelProc2c_1_r @[FFTEngine.scala 334:31]
    reg addrTBankSelProc3c_1_r : UInt, clock with :
      reset => (reset, UInt<2>("h3")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelProc3c_1_r <= addrTBankSelProc2c[1] @[Reg.scala 36:22]
    addrTBankSelProc3c[1] <= addrTBankSelProc3c_1_r @[FFTEngine.scala 335:31]
    reg addrSBankSelProc1c_2_r : UInt, clock with :
      reset => (reset, UInt<3>("h4")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelProc1c_2_r <= addrSBankSelProc[2] @[Reg.scala 36:22]
    addrSBankSelProc1c[2] <= addrSBankSelProc1c_2_r @[FFTEngine.scala 330:31]
    reg addrSBankSelProc2c_2_r : UInt, clock with :
      reset => (reset, UInt<3>("h4")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelProc2c_2_r <= addrSBankSelProc1c[2] @[Reg.scala 36:22]
    addrSBankSelProc2c[2] <= addrSBankSelProc2c_2_r @[FFTEngine.scala 331:31]
    reg addrSBankSelProc3c_2_r : UInt, clock with :
      reset => (reset, UInt<3>("h4")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelProc3c_2_r <= addrSBankSelProc2c[2] @[Reg.scala 36:22]
    addrSBankSelProc3c[2] <= addrSBankSelProc3c_2_r @[FFTEngine.scala 332:31]
    reg addrTBankSelProc1c_2_r : UInt, clock with :
      reset => (reset, UInt<3>("h5")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelProc1c_2_r <= addrTBankSelProc[2] @[Reg.scala 36:22]
    addrTBankSelProc1c[2] <= addrTBankSelProc1c_2_r @[FFTEngine.scala 333:31]
    reg addrTBankSelProc2c_2_r : UInt, clock with :
      reset => (reset, UInt<3>("h5")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelProc2c_2_r <= addrTBankSelProc1c[2] @[Reg.scala 36:22]
    addrTBankSelProc2c[2] <= addrTBankSelProc2c_2_r @[FFTEngine.scala 334:31]
    reg addrTBankSelProc3c_2_r : UInt, clock with :
      reset => (reset, UInt<3>("h5")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelProc3c_2_r <= addrTBankSelProc2c[2] @[Reg.scala 36:22]
    addrTBankSelProc3c[2] <= addrTBankSelProc3c_2_r @[FFTEngine.scala 335:31]
    reg addrSBankSelProc1c_3_r : UInt, clock with :
      reset => (reset, UInt<3>("h6")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelProc1c_3_r <= addrSBankSelProc[3] @[Reg.scala 36:22]
    addrSBankSelProc1c[3] <= addrSBankSelProc1c_3_r @[FFTEngine.scala 330:31]
    reg addrSBankSelProc2c_3_r : UInt, clock with :
      reset => (reset, UInt<3>("h6")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelProc2c_3_r <= addrSBankSelProc1c[3] @[Reg.scala 36:22]
    addrSBankSelProc2c[3] <= addrSBankSelProc2c_3_r @[FFTEngine.scala 331:31]
    reg addrSBankSelProc3c_3_r : UInt, clock with :
      reset => (reset, UInt<3>("h6")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSelProc3c_3_r <= addrSBankSelProc2c[3] @[Reg.scala 36:22]
    addrSBankSelProc3c[3] <= addrSBankSelProc3c_3_r @[FFTEngine.scala 332:31]
    reg addrTBankSelProc1c_3_r : UInt, clock with :
      reset => (reset, UInt<3>("h7")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelProc1c_3_r <= addrTBankSelProc[3] @[Reg.scala 36:22]
    addrTBankSelProc1c[3] <= addrTBankSelProc1c_3_r @[FFTEngine.scala 333:31]
    reg addrTBankSelProc2c_3_r : UInt, clock with :
      reset => (reset, UInt<3>("h7")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelProc2c_3_r <= addrTBankSelProc1c[3] @[Reg.scala 36:22]
    addrTBankSelProc2c[3] <= addrTBankSelProc2c_3_r @[FFTEngine.scala 334:31]
    reg addrTBankSelProc3c_3_r : UInt, clock with :
      reset => (reset, UInt<3>("h7")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSelProc3c_3_r <= addrTBankSelProc2c[3] @[Reg.scala 36:22]
    addrTBankSelProc3c[3] <= addrTBankSelProc3c_3_r @[FFTEngine.scala 335:31]
    reg kernelState1c : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      kernelState1c <= kernelState @[Reg.scala 36:22]
    reg kernelState2c : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      kernelState2c <= kernelState1c @[Reg.scala 36:22]
    reg kernelState3c : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      kernelState3c <= kernelState2c @[Reg.scala 36:22]
    reg procState1c : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      procState1c <= procState @[Reg.scala 36:22]
    reg procState2c : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      procState2c <= procState1c @[Reg.scala 36:22]
    reg procState3c : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      procState3c <= procState2c @[Reg.scala 36:22]
    reg sameAddr1c : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      sameAddr1c <= sameAddr @[Reg.scala 36:22]
    reg sameAddr2c : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      sameAddr2c <= sameAddr1c @[Reg.scala 36:22]
    reg sameAddr3c : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      sameAddr3c <= sameAddr2c @[Reg.scala 36:22]
    node _io_readEnableSram0Bank_0_T = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 351:51]
    node _io_readEnableSram0Bank_0_T_1 = and(readEnable, _io_readEnableSram0Bank_0_T) @[FFTEngine.scala 351:49]
    io.readEnableSram0Bank[0] <= _io_readEnableSram0Bank_0_T_1 @[FFTEngine.scala 351:35]
    node _io_readEnableSram1Bank_0_T = and(readEnable, srcBuffer) @[FFTEngine.scala 352:49]
    io.readEnableSram1Bank[0] <= _io_readEnableSram1Bank_0_T @[FFTEngine.scala 352:35]
    node _io_readEnableSram0Bank_1_T = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 351:51]
    node _io_readEnableSram0Bank_1_T_1 = and(readEnable, _io_readEnableSram0Bank_1_T) @[FFTEngine.scala 351:49]
    io.readEnableSram0Bank[1] <= _io_readEnableSram0Bank_1_T_1 @[FFTEngine.scala 351:35]
    node _io_readEnableSram1Bank_1_T = and(readEnable, srcBuffer) @[FFTEngine.scala 352:49]
    io.readEnableSram1Bank[1] <= _io_readEnableSram1Bank_1_T @[FFTEngine.scala 352:35]
    node _io_readEnableSram0Bank_2_T = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 351:51]
    node _io_readEnableSram0Bank_2_T_1 = and(readEnable, _io_readEnableSram0Bank_2_T) @[FFTEngine.scala 351:49]
    io.readEnableSram0Bank[2] <= _io_readEnableSram0Bank_2_T_1 @[FFTEngine.scala 351:35]
    node _io_readEnableSram1Bank_2_T = and(readEnable, srcBuffer) @[FFTEngine.scala 352:49]
    io.readEnableSram1Bank[2] <= _io_readEnableSram1Bank_2_T @[FFTEngine.scala 352:35]
    node _io_readEnableSram0Bank_3_T = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 351:51]
    node _io_readEnableSram0Bank_3_T_1 = and(readEnable, _io_readEnableSram0Bank_3_T) @[FFTEngine.scala 351:49]
    io.readEnableSram0Bank[3] <= _io_readEnableSram0Bank_3_T_1 @[FFTEngine.scala 351:35]
    node _io_readEnableSram1Bank_3_T = and(readEnable, srcBuffer) @[FFTEngine.scala 352:49]
    io.readEnableSram1Bank[3] <= _io_readEnableSram1Bank_3_T @[FFTEngine.scala 352:35]
    node _io_readEnableSram0Bank_4_T = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 351:51]
    node _io_readEnableSram0Bank_4_T_1 = and(readEnable, _io_readEnableSram0Bank_4_T) @[FFTEngine.scala 351:49]
    io.readEnableSram0Bank[4] <= _io_readEnableSram0Bank_4_T_1 @[FFTEngine.scala 351:35]
    node _io_readEnableSram1Bank_4_T = and(readEnable, srcBuffer) @[FFTEngine.scala 352:49]
    io.readEnableSram1Bank[4] <= _io_readEnableSram1Bank_4_T @[FFTEngine.scala 352:35]
    node _io_readEnableSram0Bank_5_T = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 351:51]
    node _io_readEnableSram0Bank_5_T_1 = and(readEnable, _io_readEnableSram0Bank_5_T) @[FFTEngine.scala 351:49]
    io.readEnableSram0Bank[5] <= _io_readEnableSram0Bank_5_T_1 @[FFTEngine.scala 351:35]
    node _io_readEnableSram1Bank_5_T = and(readEnable, srcBuffer) @[FFTEngine.scala 352:49]
    io.readEnableSram1Bank[5] <= _io_readEnableSram1Bank_5_T @[FFTEngine.scala 352:35]
    node _io_readEnableSram0Bank_6_T = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 351:51]
    node _io_readEnableSram0Bank_6_T_1 = and(readEnable, _io_readEnableSram0Bank_6_T) @[FFTEngine.scala 351:49]
    io.readEnableSram0Bank[6] <= _io_readEnableSram0Bank_6_T_1 @[FFTEngine.scala 351:35]
    node _io_readEnableSram1Bank_6_T = and(readEnable, srcBuffer) @[FFTEngine.scala 352:49]
    io.readEnableSram1Bank[6] <= _io_readEnableSram1Bank_6_T @[FFTEngine.scala 352:35]
    node _io_readEnableSram0Bank_7_T = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 351:51]
    node _io_readEnableSram0Bank_7_T_1 = and(readEnable, _io_readEnableSram0Bank_7_T) @[FFTEngine.scala 351:49]
    io.readEnableSram0Bank[7] <= _io_readEnableSram0Bank_7_T_1 @[FFTEngine.scala 351:35]
    node _io_readEnableSram1Bank_7_T = and(readEnable, srcBuffer) @[FFTEngine.scala 352:49]
    io.readEnableSram1Bank[7] <= _io_readEnableSram1Bank_7_T @[FFTEngine.scala 352:35]
    wire dataInRPre : UInt[8] @[FFTEngine.scala 355:26]
    wire dataInIPre : UInt[8] @[FFTEngine.scala 356:26]
    node _dataInRPre_0_T = bits(io.readDataSram1Bank[0], 15, 0) @[FFTEngine.scala 359:64]
    node _dataInRPre_0_T_1 = bits(io.readDataSram0Bank[0], 15, 0) @[FFTEngine.scala 359:110]
    node _dataInRPre_0_T_2 = mux(srcBuffer, _dataInRPre_0_T, _dataInRPre_0_T_1) @[FFTEngine.scala 359:29]
    dataInRPre[0] <= _dataInRPre_0_T_2 @[FFTEngine.scala 359:23]
    node _dataInIPre_0_T = bits(io.readDataSram1Bank[0], 31, 16) @[FFTEngine.scala 360:64]
    node _dataInIPre_0_T_1 = bits(io.readDataSram0Bank[0], 31, 16) @[FFTEngine.scala 360:135]
    node _dataInIPre_0_T_2 = mux(srcBuffer, _dataInIPre_0_T, _dataInIPre_0_T_1) @[FFTEngine.scala 360:29]
    dataInIPre[0] <= _dataInIPre_0_T_2 @[FFTEngine.scala 360:23]
    node _dataInRPre_1_T = bits(io.readDataSram1Bank[1], 15, 0) @[FFTEngine.scala 359:64]
    node _dataInRPre_1_T_1 = bits(io.readDataSram0Bank[1], 15, 0) @[FFTEngine.scala 359:110]
    node _dataInRPre_1_T_2 = mux(srcBuffer, _dataInRPre_1_T, _dataInRPre_1_T_1) @[FFTEngine.scala 359:29]
    dataInRPre[1] <= _dataInRPre_1_T_2 @[FFTEngine.scala 359:23]
    node _dataInIPre_1_T = bits(io.readDataSram1Bank[1], 31, 16) @[FFTEngine.scala 360:64]
    node _dataInIPre_1_T_1 = bits(io.readDataSram0Bank[1], 31, 16) @[FFTEngine.scala 360:135]
    node _dataInIPre_1_T_2 = mux(srcBuffer, _dataInIPre_1_T, _dataInIPre_1_T_1) @[FFTEngine.scala 360:29]
    dataInIPre[1] <= _dataInIPre_1_T_2 @[FFTEngine.scala 360:23]
    node _dataInRPre_2_T = bits(io.readDataSram1Bank[2], 15, 0) @[FFTEngine.scala 359:64]
    node _dataInRPre_2_T_1 = bits(io.readDataSram0Bank[2], 15, 0) @[FFTEngine.scala 359:110]
    node _dataInRPre_2_T_2 = mux(srcBuffer, _dataInRPre_2_T, _dataInRPre_2_T_1) @[FFTEngine.scala 359:29]
    dataInRPre[2] <= _dataInRPre_2_T_2 @[FFTEngine.scala 359:23]
    node _dataInIPre_2_T = bits(io.readDataSram1Bank[2], 31, 16) @[FFTEngine.scala 360:64]
    node _dataInIPre_2_T_1 = bits(io.readDataSram0Bank[2], 31, 16) @[FFTEngine.scala 360:135]
    node _dataInIPre_2_T_2 = mux(srcBuffer, _dataInIPre_2_T, _dataInIPre_2_T_1) @[FFTEngine.scala 360:29]
    dataInIPre[2] <= _dataInIPre_2_T_2 @[FFTEngine.scala 360:23]
    node _dataInRPre_3_T = bits(io.readDataSram1Bank[3], 15, 0) @[FFTEngine.scala 359:64]
    node _dataInRPre_3_T_1 = bits(io.readDataSram0Bank[3], 15, 0) @[FFTEngine.scala 359:110]
    node _dataInRPre_3_T_2 = mux(srcBuffer, _dataInRPre_3_T, _dataInRPre_3_T_1) @[FFTEngine.scala 359:29]
    dataInRPre[3] <= _dataInRPre_3_T_2 @[FFTEngine.scala 359:23]
    node _dataInIPre_3_T = bits(io.readDataSram1Bank[3], 31, 16) @[FFTEngine.scala 360:64]
    node _dataInIPre_3_T_1 = bits(io.readDataSram0Bank[3], 31, 16) @[FFTEngine.scala 360:135]
    node _dataInIPre_3_T_2 = mux(srcBuffer, _dataInIPre_3_T, _dataInIPre_3_T_1) @[FFTEngine.scala 360:29]
    dataInIPre[3] <= _dataInIPre_3_T_2 @[FFTEngine.scala 360:23]
    node _dataInRPre_4_T = bits(io.readDataSram1Bank[4], 15, 0) @[FFTEngine.scala 359:64]
    node _dataInRPre_4_T_1 = bits(io.readDataSram0Bank[4], 15, 0) @[FFTEngine.scala 359:110]
    node _dataInRPre_4_T_2 = mux(srcBuffer, _dataInRPre_4_T, _dataInRPre_4_T_1) @[FFTEngine.scala 359:29]
    dataInRPre[4] <= _dataInRPre_4_T_2 @[FFTEngine.scala 359:23]
    node _dataInIPre_4_T = bits(io.readDataSram1Bank[4], 31, 16) @[FFTEngine.scala 360:64]
    node _dataInIPre_4_T_1 = bits(io.readDataSram0Bank[4], 31, 16) @[FFTEngine.scala 360:135]
    node _dataInIPre_4_T_2 = mux(srcBuffer, _dataInIPre_4_T, _dataInIPre_4_T_1) @[FFTEngine.scala 360:29]
    dataInIPre[4] <= _dataInIPre_4_T_2 @[FFTEngine.scala 360:23]
    node _dataInRPre_5_T = bits(io.readDataSram1Bank[5], 15, 0) @[FFTEngine.scala 359:64]
    node _dataInRPre_5_T_1 = bits(io.readDataSram0Bank[5], 15, 0) @[FFTEngine.scala 359:110]
    node _dataInRPre_5_T_2 = mux(srcBuffer, _dataInRPre_5_T, _dataInRPre_5_T_1) @[FFTEngine.scala 359:29]
    dataInRPre[5] <= _dataInRPre_5_T_2 @[FFTEngine.scala 359:23]
    node _dataInIPre_5_T = bits(io.readDataSram1Bank[5], 31, 16) @[FFTEngine.scala 360:64]
    node _dataInIPre_5_T_1 = bits(io.readDataSram0Bank[5], 31, 16) @[FFTEngine.scala 360:135]
    node _dataInIPre_5_T_2 = mux(srcBuffer, _dataInIPre_5_T, _dataInIPre_5_T_1) @[FFTEngine.scala 360:29]
    dataInIPre[5] <= _dataInIPre_5_T_2 @[FFTEngine.scala 360:23]
    node _dataInRPre_6_T = bits(io.readDataSram1Bank[6], 15, 0) @[FFTEngine.scala 359:64]
    node _dataInRPre_6_T_1 = bits(io.readDataSram0Bank[6], 15, 0) @[FFTEngine.scala 359:110]
    node _dataInRPre_6_T_2 = mux(srcBuffer, _dataInRPre_6_T, _dataInRPre_6_T_1) @[FFTEngine.scala 359:29]
    dataInRPre[6] <= _dataInRPre_6_T_2 @[FFTEngine.scala 359:23]
    node _dataInIPre_6_T = bits(io.readDataSram1Bank[6], 31, 16) @[FFTEngine.scala 360:64]
    node _dataInIPre_6_T_1 = bits(io.readDataSram0Bank[6], 31, 16) @[FFTEngine.scala 360:135]
    node _dataInIPre_6_T_2 = mux(srcBuffer, _dataInIPre_6_T, _dataInIPre_6_T_1) @[FFTEngine.scala 360:29]
    dataInIPre[6] <= _dataInIPre_6_T_2 @[FFTEngine.scala 360:23]
    node _dataInRPre_7_T = bits(io.readDataSram1Bank[7], 15, 0) @[FFTEngine.scala 359:64]
    node _dataInRPre_7_T_1 = bits(io.readDataSram0Bank[7], 15, 0) @[FFTEngine.scala 359:110]
    node _dataInRPre_7_T_2 = mux(srcBuffer, _dataInRPre_7_T, _dataInRPre_7_T_1) @[FFTEngine.scala 359:29]
    dataInRPre[7] <= _dataInRPre_7_T_2 @[FFTEngine.scala 359:23]
    node _dataInIPre_7_T = bits(io.readDataSram1Bank[7], 31, 16) @[FFTEngine.scala 360:64]
    node _dataInIPre_7_T_1 = bits(io.readDataSram0Bank[7], 31, 16) @[FFTEngine.scala 360:135]
    node _dataInIPre_7_T_2 = mux(srcBuffer, _dataInIPre_7_T, _dataInIPre_7_T_1) @[FFTEngine.scala 360:29]
    dataInIPre[7] <= _dataInIPre_7_T_2 @[FFTEngine.scala 360:23]
    node _addrS1c_T = bits(addrS[0], 3, 0) @[FFTEngine.scala 364:45]
    reg addrS1c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS1c <= _addrS1c_T @[Reg.scala 36:22]
    reg addrS2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS2c <= addrS1c @[Reg.scala 36:22]
    reg addrS3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS3c <= addrS2c @[Reg.scala 36:22]
    node _addrT1c_T = bits(addrT[0], 3, 0) @[FFTEngine.scala 368:45]
    reg addrT1c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT1c <= _addrT1c_T @[Reg.scala 36:22]
    reg addrT2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT2c <= addrT1c @[Reg.scala 36:22]
    reg addrT3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT3c <= addrT2c @[Reg.scala 36:22]
    wire addrSBankSel : UInt @[FFTEngine.scala 372:32]
    wire addrTBankSel : UInt @[FFTEngine.scala 373:32]
    node _addrSBankSel_T = mux(kernelState, addrSBankSelKernel[0], addrSBankSelProc[0]) @[FFTEngine.scala 376:32]
    addrSBankSel <= _addrSBankSel_T @[FFTEngine.scala 376:26]
    node _addrTBankSel_T = mux(kernelState, addrTBankSelKernel[0], addrTBankSelProc[0]) @[FFTEngine.scala 377:32]
    addrTBankSel <= _addrTBankSel_T @[FFTEngine.scala 377:26]
    when isFFT : @[FFTEngine.scala 383:21]
      node _addrSBankSel_T_1 = mux(procState, addrSBankSelProc[0], addrSBankSelKernel[0]) @[FFTEngine.scala 384:32]
      addrSBankSel <= _addrSBankSel_T_1 @[FFTEngine.scala 384:26]
      node _addrTBankSel_T_1 = mux(procState, addrTBankSelProc[0], addrTBankSelKernel[0]) @[FFTEngine.scala 385:32]
      addrTBankSel <= _addrTBankSel_T_1 @[FFTEngine.scala 385:26]
    else :
      node _addrSBankSel_T_2 = eq(phaseCount, UInt<1>("h0")) @[FFTEngine.scala 387:72]
      node _addrSBankSel_T_3 = and(kernelState, _addrSBankSel_T_2) @[FFTEngine.scala 387:58]
      node _addrSBankSel_T_4 = or(procState, _addrSBankSel_T_3) @[FFTEngine.scala 387:43]
      node _addrSBankSel_T_5 = mux(_addrSBankSel_T_4, addrSBankSelProc[0], addrSBankSelKernel[0]) @[FFTEngine.scala 387:32]
      addrSBankSel <= _addrSBankSel_T_5 @[FFTEngine.scala 387:26]
      node _addrTBankSel_T_2 = eq(phaseCount, UInt<1>("h0")) @[FFTEngine.scala 388:72]
      node _addrTBankSel_T_3 = and(kernelState, _addrTBankSel_T_2) @[FFTEngine.scala 388:58]
      node _addrTBankSel_T_4 = or(procState, _addrTBankSel_T_3) @[FFTEngine.scala 388:43]
      node _addrTBankSel_T_5 = mux(_addrTBankSel_T_4, addrTBankSelProc[0], addrTBankSelKernel[0]) @[FFTEngine.scala 388:32]
      addrTBankSel <= _addrTBankSel_T_5 @[FFTEngine.scala 388:26]
    reg addrSBankSel1c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSel1c <= addrSBankSel @[Reg.scala 36:22]
    reg addrTBankSel1c : UInt, clock with :
      reset => (reset, UInt<1>("h1")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSel1c <= addrTBankSel @[Reg.scala 36:22]
    inst fftCalc of FFT3PipelineCalc @[FFTEngine.scala 394:29]
    fftCalc.clock <= clock
    fftCalc.reset <= reset
    node _fftCalc_io_dataInSR_T = or(addrSBankSel1c, UInt<3>("h0"))
    node _fftCalc_io_dataInSR_T_1 = bits(_fftCalc_io_dataInSR_T, 2, 0)
    fftCalc.io.dataInSR <= dataInRPre[_fftCalc_io_dataInSR_T_1] @[FFTEngine.scala 395:29]
    node _fftCalc_io_dataInSI_T = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 396:61]
    node _fftCalc_io_dataInSI_T_1 = and(sameAddr1c, _fftCalc_io_dataInSI_T) @[FFTEngine.scala 396:47]
    node _fftCalc_io_dataInSI_T_2 = or(addrSBankSel1c, UInt<3>("h0"))
    node _fftCalc_io_dataInSI_T_3 = bits(_fftCalc_io_dataInSI_T_2, 2, 0)
    node _fftCalc_io_dataInSI_T_4 = mux(_fftCalc_io_dataInSI_T_1, UInt<1>("h0"), dataInIPre[_fftCalc_io_dataInSI_T_3]) @[FFTEngine.scala 396:35]
    fftCalc.io.dataInSI <= _fftCalc_io_dataInSI_T_4 @[FFTEngine.scala 396:29]
    node _fftCalc_io_dataInTR_T = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 397:61]
    node _fftCalc_io_dataInTR_T_1 = and(sameAddr1c, _fftCalc_io_dataInTR_T) @[FFTEngine.scala 397:47]
    node _fftCalc_io_dataInTR_T_2 = or(addrTBankSel1c, UInt<3>("h0"))
    node _fftCalc_io_dataInTR_T_3 = bits(_fftCalc_io_dataInTR_T_2, 2, 0)
    node _fftCalc_io_dataInTR_T_4 = or(addrTBankSel1c, UInt<3>("h0"))
    node _fftCalc_io_dataInTR_T_5 = bits(_fftCalc_io_dataInTR_T_4, 2, 0)
    node _fftCalc_io_dataInTR_T_6 = mux(_fftCalc_io_dataInTR_T_1, dataInIPre[_fftCalc_io_dataInTR_T_3], dataInRPre[_fftCalc_io_dataInTR_T_5]) @[FFTEngine.scala 397:35]
    fftCalc.io.dataInTR <= _fftCalc_io_dataInTR_T_6 @[FFTEngine.scala 397:29]
    node _fftCalc_io_dataInTI_T = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 398:61]
    node _fftCalc_io_dataInTI_T_1 = and(sameAddr1c, _fftCalc_io_dataInTI_T) @[FFTEngine.scala 398:47]
    node _fftCalc_io_dataInTI_T_2 = or(addrTBankSel1c, UInt<3>("h0"))
    node _fftCalc_io_dataInTI_T_3 = bits(_fftCalc_io_dataInTI_T_2, 2, 0)
    node _fftCalc_io_dataInTI_T_4 = mux(_fftCalc_io_dataInTI_T_1, UInt<1>("h0"), dataInIPre[_fftCalc_io_dataInTI_T_3]) @[FFTEngine.scala 398:35]
    fftCalc.io.dataInTI <= _fftCalc_io_dataInTI_T_4 @[FFTEngine.scala 398:29]
    node _fftCalc_io_nk_T = bits(addrSProc, 6, 0) @[FFTEngine.scala 399:51]
    node _fftCalc_io_nk_T_1 = bits(nk[0], 5, 0) @[FFTEngine.scala 399:80]
    node _fftCalc_io_nk_T_2 = cat(_fftCalc_io_nk_T_1, UInt<1>("h0")) @[Cat.scala 33:92]
    node _fftCalc_io_nk_T_3 = mux(procState, _fftCalc_io_nk_T, _fftCalc_io_nk_T_2) @[FFTEngine.scala 399:29]
    fftCalc.io.nk <= _fftCalc_io_nk_T_3 @[FFTEngine.scala 399:23]
    node _fftCalc_io_rShiftSym_T = bits(phaseCount, 0, 0) @[FFTEngine.scala 400:90]
    node _fftCalc_io_rShiftSym_T_1 = mux(kernelState1c, io.fftRShiftP0[phaseCount], _fftCalc_io_rShiftSym_T) @[FFTEngine.scala 400:36]
    fftCalc.io.rShiftSym <= _fftCalc_io_rShiftSym_T_1 @[FFTEngine.scala 400:30]
    fftCalc.io.isFFT <= isFFT @[FFTEngine.scala 401:26]
    node _fftCalc_io_procMode_T = bits(phaseCount, 0, 0) @[FFTEngine.scala 402:44]
    node _fftCalc_io_procMode_T_1 = not(_fftCalc_io_procMode_T) @[FFTEngine.scala 402:33]
    node _fftCalc_io_procMode_T_2 = and(_fftCalc_io_procMode_T_1, procState2c) @[FFTEngine.scala 402:48]
    fftCalc.io.procMode <= _fftCalc_io_procMode_T_2 @[FFTEngine.scala 402:29]
    node _fftCalc_io_state1c_T = or(kernelState1c, procState1c) @[FFTEngine.scala 403:45]
    fftCalc.io.state1c <= _fftCalc_io_state1c_T @[FFTEngine.scala 403:28]
    node _fftCalc_io_state2c_T = or(kernelState2c, procState2c) @[FFTEngine.scala 404:45]
    fftCalc.io.state2c <= _fftCalc_io_state2c_T @[FFTEngine.scala 404:28]
    node _writeDataTRPre3c_T = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 407:64]
    node _writeDataTRPre3c_T_1 = not(fftCalc.io.dataOutTI3c) @[FFTEngine.scala 407:132]
    node _writeDataTRPre3c_T_2 = add(_writeDataTRPre3c_T_1, UInt<1>("h1")) @[FFTEngine.scala 407:156]
    node _writeDataTRPre3c_T_3 = tail(_writeDataTRPre3c_T_2, 1) @[FFTEngine.scala 407:156]
    node _writeDataTRPre3c_T_4 = mux(isFFT, fftCalc.io.dataOutTI3c, _writeDataTRPre3c_T_3) @[FFTEngine.scala 407:100]
    node _writeDataTRPre3c_T_5 = mux(_writeDataTRPre3c_T, fftCalc.io.dataOutTR3c, _writeDataTRPre3c_T_4) @[FFTEngine.scala 407:52]
    node writeDataTRPre3c = mux(procState3c, _writeDataTRPre3c_T_5, fftCalc.io.dataOutTR3c) @[FFTEngine.scala 407:35]
    node _writeDataTIPre3c_T = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 408:64]
    node _writeDataTIPre3c_T_1 = not(fftCalc.io.dataOutTI3c) @[FFTEngine.scala 408:73]
    node _writeDataTIPre3c_T_2 = add(_writeDataTIPre3c_T_1, UInt<1>("h1")) @[FFTEngine.scala 408:97]
    node _writeDataTIPre3c_T_3 = tail(_writeDataTIPre3c_T_2, 1) @[FFTEngine.scala 408:97]
    node _writeDataTIPre3c_T_4 = not(fftCalc.io.dataOutTR3c) @[FFTEngine.scala 408:115]
    node _writeDataTIPre3c_T_5 = add(_writeDataTIPre3c_T_4, UInt<1>("h1")) @[FFTEngine.scala 408:139]
    node _writeDataTIPre3c_T_6 = tail(_writeDataTIPre3c_T_5, 1) @[FFTEngine.scala 408:139]
    node _writeDataTIPre3c_T_7 = mux(isFFT, _writeDataTIPre3c_T_6, fftCalc.io.dataOutTR3c) @[FFTEngine.scala 408:107]
    node _writeDataTIPre3c_T_8 = mux(_writeDataTIPre3c_T, _writeDataTIPre3c_T_3, _writeDataTIPre3c_T_7) @[FFTEngine.scala 408:52]
    node writeDataTIPre3c = mux(procState3c, _writeDataTIPre3c_T_8, fftCalc.io.dataOutTI3c) @[FFTEngine.scala 408:35]
    wire addrSBankSel3c : UInt @[FFTEngine.scala 410:34]
    wire addrTBankSel3c : UInt @[FFTEngine.scala 411:34]
    when isFFT : @[FFTEngine.scala 413:21]
      node _addrSBankSel3c_T = eq(phaseCount, UInt<3>("h6")) @[FFTEngine.scala 414:78]
      node _addrSBankSel3c_T_1 = and(kernelState3c, _addrSBankSel3c_T) @[FFTEngine.scala 414:64]
      node _addrSBankSel3c_T_2 = or(procState3c, _addrSBankSel3c_T_1) @[FFTEngine.scala 414:47]
      node _addrSBankSel3c_T_3 = mux(_addrSBankSel3c_T_2, addrSBankSelProc3c[0], addrSBankSelKernel3c[0]) @[FFTEngine.scala 414:34]
      addrSBankSel3c <= _addrSBankSel3c_T_3 @[FFTEngine.scala 414:28]
      node _addrTBankSel3c_T = eq(phaseCount, UInt<3>("h6")) @[FFTEngine.scala 415:78]
      node _addrTBankSel3c_T_1 = and(kernelState3c, _addrTBankSel3c_T) @[FFTEngine.scala 415:64]
      node _addrTBankSel3c_T_2 = or(procState3c, _addrTBankSel3c_T_1) @[FFTEngine.scala 415:47]
      node _addrTBankSel3c_T_3 = mux(_addrTBankSel3c_T_2, addrTBankSelProc3c[0], addrTBankSelKernel3c[0]) @[FFTEngine.scala 415:34]
      addrTBankSel3c <= _addrTBankSel3c_T_3 @[FFTEngine.scala 415:28]
    else :
      node _addrSBankSel3c_T_4 = mux(procState3c, addrSBankSelProc3c[0], addrSBankSelKernel3c[0]) @[FFTEngine.scala 417:34]
      addrSBankSel3c <= _addrSBankSel3c_T_4 @[FFTEngine.scala 417:28]
      node _addrTBankSel3c_T_4 = mux(procState3c, addrTBankSelProc3c[0], addrTBankSelKernel3c[0]) @[FFTEngine.scala 418:34]
      addrTBankSel3c <= _addrTBankSel3c_T_4 @[FFTEngine.scala 418:28]
    when procState3c : @[FFTEngine.scala 423:34]
      node _T_18 = eq(UInt<1>("h0"), addrSBankSelProc3c[0]) @[FFTEngine.scala 424:31]
      node _T_19 = eq(UInt<1>("h0"), addrTBankSelProc3c[0]) @[FFTEngine.scala 424:66]
      node _T_20 = or(_T_18, _T_19) @[FFTEngine.scala 424:58]
      when _T_20 : @[FFTEngine.scala 424:94]
        node _io_writeEnableSram0Bank_0_T = and(srcBuffer, procState3c) @[FFTEngine.scala 425:65]
        io.writeEnableSram0Bank[0] <= _io_writeEnableSram0Bank_0_T @[FFTEngine.scala 425:52]
        node _io_writeEnableSram1Bank_0_T = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 426:55]
        node _io_writeEnableSram1Bank_0_T_1 = and(_io_writeEnableSram1Bank_0_T, procState3c) @[FFTEngine.scala 426:66]
        io.writeEnableSram1Bank[0] <= _io_writeEnableSram1Bank_0_T_1 @[FFTEngine.scala 426:52]
      else :
        io.writeEnableSram0Bank[0] <= UInt<1>("h0") @[FFTEngine.scala 428:52]
        io.writeEnableSram1Bank[0] <= UInt<1>("h0") @[FFTEngine.scala 429:52]
    else :
      node _io_writeEnableSram0Bank_0_T_1 = and(srcBuffer, kernelState3c) @[FFTEngine.scala 432:61]
      io.writeEnableSram0Bank[0] <= _io_writeEnableSram0Bank_0_T_1 @[FFTEngine.scala 432:48]
      node _io_writeEnableSram1Bank_0_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 433:51]
      node _io_writeEnableSram1Bank_0_T_3 = and(_io_writeEnableSram1Bank_0_T_2, kernelState3c) @[FFTEngine.scala 433:62]
      io.writeEnableSram1Bank[0] <= _io_writeEnableSram1Bank_0_T_3 @[FFTEngine.scala 433:48]
    when procState3c : @[FFTEngine.scala 423:34]
      node _T_21 = eq(UInt<1>("h1"), addrSBankSelProc3c[0]) @[FFTEngine.scala 424:31]
      node _T_22 = eq(UInt<1>("h1"), addrTBankSelProc3c[0]) @[FFTEngine.scala 424:66]
      node _T_23 = or(_T_21, _T_22) @[FFTEngine.scala 424:58]
      when _T_23 : @[FFTEngine.scala 424:94]
        node _io_writeEnableSram0Bank_1_T = and(srcBuffer, procState3c) @[FFTEngine.scala 425:65]
        io.writeEnableSram0Bank[1] <= _io_writeEnableSram0Bank_1_T @[FFTEngine.scala 425:52]
        node _io_writeEnableSram1Bank_1_T = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 426:55]
        node _io_writeEnableSram1Bank_1_T_1 = and(_io_writeEnableSram1Bank_1_T, procState3c) @[FFTEngine.scala 426:66]
        io.writeEnableSram1Bank[1] <= _io_writeEnableSram1Bank_1_T_1 @[FFTEngine.scala 426:52]
      else :
        io.writeEnableSram0Bank[1] <= UInt<1>("h0") @[FFTEngine.scala 428:52]
        io.writeEnableSram1Bank[1] <= UInt<1>("h0") @[FFTEngine.scala 429:52]
    else :
      node _io_writeEnableSram0Bank_1_T_1 = and(srcBuffer, kernelState3c) @[FFTEngine.scala 432:61]
      io.writeEnableSram0Bank[1] <= _io_writeEnableSram0Bank_1_T_1 @[FFTEngine.scala 432:48]
      node _io_writeEnableSram1Bank_1_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 433:51]
      node _io_writeEnableSram1Bank_1_T_3 = and(_io_writeEnableSram1Bank_1_T_2, kernelState3c) @[FFTEngine.scala 433:62]
      io.writeEnableSram1Bank[1] <= _io_writeEnableSram1Bank_1_T_3 @[FFTEngine.scala 433:48]
    when procState3c : @[FFTEngine.scala 423:34]
      node _T_24 = eq(UInt<2>("h2"), addrSBankSelProc3c[0]) @[FFTEngine.scala 424:31]
      node _T_25 = eq(UInt<2>("h2"), addrTBankSelProc3c[0]) @[FFTEngine.scala 424:66]
      node _T_26 = or(_T_24, _T_25) @[FFTEngine.scala 424:58]
      when _T_26 : @[FFTEngine.scala 424:94]
        node _io_writeEnableSram0Bank_2_T = and(srcBuffer, procState3c) @[FFTEngine.scala 425:65]
        io.writeEnableSram0Bank[2] <= _io_writeEnableSram0Bank_2_T @[FFTEngine.scala 425:52]
        node _io_writeEnableSram1Bank_2_T = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 426:55]
        node _io_writeEnableSram1Bank_2_T_1 = and(_io_writeEnableSram1Bank_2_T, procState3c) @[FFTEngine.scala 426:66]
        io.writeEnableSram1Bank[2] <= _io_writeEnableSram1Bank_2_T_1 @[FFTEngine.scala 426:52]
      else :
        io.writeEnableSram0Bank[2] <= UInt<1>("h0") @[FFTEngine.scala 428:52]
        io.writeEnableSram1Bank[2] <= UInt<1>("h0") @[FFTEngine.scala 429:52]
    else :
      node _io_writeEnableSram0Bank_2_T_1 = and(srcBuffer, kernelState3c) @[FFTEngine.scala 432:61]
      io.writeEnableSram0Bank[2] <= _io_writeEnableSram0Bank_2_T_1 @[FFTEngine.scala 432:48]
      node _io_writeEnableSram1Bank_2_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 433:51]
      node _io_writeEnableSram1Bank_2_T_3 = and(_io_writeEnableSram1Bank_2_T_2, kernelState3c) @[FFTEngine.scala 433:62]
      io.writeEnableSram1Bank[2] <= _io_writeEnableSram1Bank_2_T_3 @[FFTEngine.scala 433:48]
    when procState3c : @[FFTEngine.scala 423:34]
      node _T_27 = eq(UInt<2>("h3"), addrSBankSelProc3c[0]) @[FFTEngine.scala 424:31]
      node _T_28 = eq(UInt<2>("h3"), addrTBankSelProc3c[0]) @[FFTEngine.scala 424:66]
      node _T_29 = or(_T_27, _T_28) @[FFTEngine.scala 424:58]
      when _T_29 : @[FFTEngine.scala 424:94]
        node _io_writeEnableSram0Bank_3_T = and(srcBuffer, procState3c) @[FFTEngine.scala 425:65]
        io.writeEnableSram0Bank[3] <= _io_writeEnableSram0Bank_3_T @[FFTEngine.scala 425:52]
        node _io_writeEnableSram1Bank_3_T = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 426:55]
        node _io_writeEnableSram1Bank_3_T_1 = and(_io_writeEnableSram1Bank_3_T, procState3c) @[FFTEngine.scala 426:66]
        io.writeEnableSram1Bank[3] <= _io_writeEnableSram1Bank_3_T_1 @[FFTEngine.scala 426:52]
      else :
        io.writeEnableSram0Bank[3] <= UInt<1>("h0") @[FFTEngine.scala 428:52]
        io.writeEnableSram1Bank[3] <= UInt<1>("h0") @[FFTEngine.scala 429:52]
    else :
      node _io_writeEnableSram0Bank_3_T_1 = and(srcBuffer, kernelState3c) @[FFTEngine.scala 432:61]
      io.writeEnableSram0Bank[3] <= _io_writeEnableSram0Bank_3_T_1 @[FFTEngine.scala 432:48]
      node _io_writeEnableSram1Bank_3_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 433:51]
      node _io_writeEnableSram1Bank_3_T_3 = and(_io_writeEnableSram1Bank_3_T_2, kernelState3c) @[FFTEngine.scala 433:62]
      io.writeEnableSram1Bank[3] <= _io_writeEnableSram1Bank_3_T_3 @[FFTEngine.scala 433:48]
    when procState3c : @[FFTEngine.scala 423:34]
      node _T_30 = eq(UInt<3>("h4"), addrSBankSelProc3c[0]) @[FFTEngine.scala 424:31]
      node _T_31 = eq(UInt<3>("h4"), addrTBankSelProc3c[0]) @[FFTEngine.scala 424:66]
      node _T_32 = or(_T_30, _T_31) @[FFTEngine.scala 424:58]
      when _T_32 : @[FFTEngine.scala 424:94]
        node _io_writeEnableSram0Bank_4_T = and(srcBuffer, procState3c) @[FFTEngine.scala 425:65]
        io.writeEnableSram0Bank[4] <= _io_writeEnableSram0Bank_4_T @[FFTEngine.scala 425:52]
        node _io_writeEnableSram1Bank_4_T = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 426:55]
        node _io_writeEnableSram1Bank_4_T_1 = and(_io_writeEnableSram1Bank_4_T, procState3c) @[FFTEngine.scala 426:66]
        io.writeEnableSram1Bank[4] <= _io_writeEnableSram1Bank_4_T_1 @[FFTEngine.scala 426:52]
      else :
        io.writeEnableSram0Bank[4] <= UInt<1>("h0") @[FFTEngine.scala 428:52]
        io.writeEnableSram1Bank[4] <= UInt<1>("h0") @[FFTEngine.scala 429:52]
    else :
      node _io_writeEnableSram0Bank_4_T_1 = and(srcBuffer, kernelState3c) @[FFTEngine.scala 432:61]
      io.writeEnableSram0Bank[4] <= _io_writeEnableSram0Bank_4_T_1 @[FFTEngine.scala 432:48]
      node _io_writeEnableSram1Bank_4_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 433:51]
      node _io_writeEnableSram1Bank_4_T_3 = and(_io_writeEnableSram1Bank_4_T_2, kernelState3c) @[FFTEngine.scala 433:62]
      io.writeEnableSram1Bank[4] <= _io_writeEnableSram1Bank_4_T_3 @[FFTEngine.scala 433:48]
    when procState3c : @[FFTEngine.scala 423:34]
      node _T_33 = eq(UInt<3>("h5"), addrSBankSelProc3c[0]) @[FFTEngine.scala 424:31]
      node _T_34 = eq(UInt<3>("h5"), addrTBankSelProc3c[0]) @[FFTEngine.scala 424:66]
      node _T_35 = or(_T_33, _T_34) @[FFTEngine.scala 424:58]
      when _T_35 : @[FFTEngine.scala 424:94]
        node _io_writeEnableSram0Bank_5_T = and(srcBuffer, procState3c) @[FFTEngine.scala 425:65]
        io.writeEnableSram0Bank[5] <= _io_writeEnableSram0Bank_5_T @[FFTEngine.scala 425:52]
        node _io_writeEnableSram1Bank_5_T = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 426:55]
        node _io_writeEnableSram1Bank_5_T_1 = and(_io_writeEnableSram1Bank_5_T, procState3c) @[FFTEngine.scala 426:66]
        io.writeEnableSram1Bank[5] <= _io_writeEnableSram1Bank_5_T_1 @[FFTEngine.scala 426:52]
      else :
        io.writeEnableSram0Bank[5] <= UInt<1>("h0") @[FFTEngine.scala 428:52]
        io.writeEnableSram1Bank[5] <= UInt<1>("h0") @[FFTEngine.scala 429:52]
    else :
      node _io_writeEnableSram0Bank_5_T_1 = and(srcBuffer, kernelState3c) @[FFTEngine.scala 432:61]
      io.writeEnableSram0Bank[5] <= _io_writeEnableSram0Bank_5_T_1 @[FFTEngine.scala 432:48]
      node _io_writeEnableSram1Bank_5_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 433:51]
      node _io_writeEnableSram1Bank_5_T_3 = and(_io_writeEnableSram1Bank_5_T_2, kernelState3c) @[FFTEngine.scala 433:62]
      io.writeEnableSram1Bank[5] <= _io_writeEnableSram1Bank_5_T_3 @[FFTEngine.scala 433:48]
    when procState3c : @[FFTEngine.scala 423:34]
      node _T_36 = eq(UInt<3>("h6"), addrSBankSelProc3c[0]) @[FFTEngine.scala 424:31]
      node _T_37 = eq(UInt<3>("h6"), addrTBankSelProc3c[0]) @[FFTEngine.scala 424:66]
      node _T_38 = or(_T_36, _T_37) @[FFTEngine.scala 424:58]
      when _T_38 : @[FFTEngine.scala 424:94]
        node _io_writeEnableSram0Bank_6_T = and(srcBuffer, procState3c) @[FFTEngine.scala 425:65]
        io.writeEnableSram0Bank[6] <= _io_writeEnableSram0Bank_6_T @[FFTEngine.scala 425:52]
        node _io_writeEnableSram1Bank_6_T = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 426:55]
        node _io_writeEnableSram1Bank_6_T_1 = and(_io_writeEnableSram1Bank_6_T, procState3c) @[FFTEngine.scala 426:66]
        io.writeEnableSram1Bank[6] <= _io_writeEnableSram1Bank_6_T_1 @[FFTEngine.scala 426:52]
      else :
        io.writeEnableSram0Bank[6] <= UInt<1>("h0") @[FFTEngine.scala 428:52]
        io.writeEnableSram1Bank[6] <= UInt<1>("h0") @[FFTEngine.scala 429:52]
    else :
      node _io_writeEnableSram0Bank_6_T_1 = and(srcBuffer, kernelState3c) @[FFTEngine.scala 432:61]
      io.writeEnableSram0Bank[6] <= _io_writeEnableSram0Bank_6_T_1 @[FFTEngine.scala 432:48]
      node _io_writeEnableSram1Bank_6_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 433:51]
      node _io_writeEnableSram1Bank_6_T_3 = and(_io_writeEnableSram1Bank_6_T_2, kernelState3c) @[FFTEngine.scala 433:62]
      io.writeEnableSram1Bank[6] <= _io_writeEnableSram1Bank_6_T_3 @[FFTEngine.scala 433:48]
    when procState3c : @[FFTEngine.scala 423:34]
      node _T_39 = eq(UInt<3>("h7"), addrSBankSelProc3c[0]) @[FFTEngine.scala 424:31]
      node _T_40 = eq(UInt<3>("h7"), addrTBankSelProc3c[0]) @[FFTEngine.scala 424:66]
      node _T_41 = or(_T_39, _T_40) @[FFTEngine.scala 424:58]
      when _T_41 : @[FFTEngine.scala 424:94]
        node _io_writeEnableSram0Bank_7_T = and(srcBuffer, procState3c) @[FFTEngine.scala 425:65]
        io.writeEnableSram0Bank[7] <= _io_writeEnableSram0Bank_7_T @[FFTEngine.scala 425:52]
        node _io_writeEnableSram1Bank_7_T = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 426:55]
        node _io_writeEnableSram1Bank_7_T_1 = and(_io_writeEnableSram1Bank_7_T, procState3c) @[FFTEngine.scala 426:66]
        io.writeEnableSram1Bank[7] <= _io_writeEnableSram1Bank_7_T_1 @[FFTEngine.scala 426:52]
      else :
        io.writeEnableSram0Bank[7] <= UInt<1>("h0") @[FFTEngine.scala 428:52]
        io.writeEnableSram1Bank[7] <= UInt<1>("h0") @[FFTEngine.scala 429:52]
    else :
      node _io_writeEnableSram0Bank_7_T_1 = and(srcBuffer, kernelState3c) @[FFTEngine.scala 432:61]
      io.writeEnableSram0Bank[7] <= _io_writeEnableSram0Bank_7_T_1 @[FFTEngine.scala 432:48]
      node _io_writeEnableSram1Bank_7_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 433:51]
      node _io_writeEnableSram1Bank_7_T_3 = and(_io_writeEnableSram1Bank_7_T_2, kernelState3c) @[FFTEngine.scala 433:62]
      io.writeEnableSram1Bank[7] <= _io_writeEnableSram1Bank_7_T_3 @[FFTEngine.scala 433:48]
    node _T_42 = eq(procState, UInt<1>("h0")) @[FFTEngine.scala 438:14]
    when _T_42 : @[FFTEngine.scala 438:26]
      node _T_43 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 439:28]
      when _T_43 : @[FFTEngine.scala 439:37]
        node _T_44 = or(addrTBankSel, UInt<3>("h0"))
        node _T_45 = bits(_T_44, 2, 0)
        node _io_addrSram0Bank_T = bits(addrT[0], 3, 0) @[FFTEngine.scala 440:59]
        io.addrSram0Bank[_T_45] <= _io_addrSram0Bank_T @[FFTEngine.scala 440:48]
        node _T_46 = or(addrSBankSel, UInt<3>("h0"))
        node _T_47 = bits(_T_46, 2, 0)
        node _io_addrSram0Bank_T_1 = bits(addrS[0], 3, 0) @[FFTEngine.scala 441:59]
        io.addrSram0Bank[_T_47] <= _io_addrSram0Bank_T_1 @[FFTEngine.scala 441:48]
      else :
        node _T_48 = or(addrTBankSel, UInt<3>("h0"))
        node _T_49 = bits(_T_48, 2, 0)
        node _io_addrSram1Bank_T = bits(addrT[0], 3, 0) @[FFTEngine.scala 443:59]
        io.addrSram1Bank[_T_49] <= _io_addrSram1Bank_T @[FFTEngine.scala 443:48]
        node _T_50 = or(addrSBankSel, UInt<3>("h0"))
        node _T_51 = bits(_T_50, 2, 0)
        node _io_addrSram1Bank_T_1 = bits(addrS[0], 3, 0) @[FFTEngine.scala 444:59]
        io.addrSram1Bank[_T_51] <= _io_addrSram1Bank_T_1 @[FFTEngine.scala 444:48]
    else :
      node _T_52 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 448:36]
      when _T_52 : @[FFTEngine.scala 448:45]
        node _T_53 = or(addrTBankSel, UInt<3>("h0"))
        node _T_54 = bits(_T_53, 2, 0)
        node _io_addrSram0Bank_T_2 = bits(addrT[0], 3, 0) @[FFTEngine.scala 449:67]
        io.addrSram0Bank[_T_54] <= _io_addrSram0Bank_T_2 @[FFTEngine.scala 449:56]
        node _T_55 = or(addrSBankSel, UInt<3>("h0"))
        node _T_56 = bits(_T_55, 2, 0)
        node _io_addrSram0Bank_T_3 = bits(addrS[0], 3, 0) @[FFTEngine.scala 450:67]
        io.addrSram0Bank[_T_56] <= _io_addrSram0Bank_T_3 @[FFTEngine.scala 450:56]
      else :
        node _T_57 = or(addrTBankSel, UInt<3>("h0"))
        node _T_58 = bits(_T_57, 2, 0)
        node _io_addrSram1Bank_T_2 = bits(addrT[0], 3, 0) @[FFTEngine.scala 452:67]
        io.addrSram1Bank[_T_58] <= _io_addrSram1Bank_T_2 @[FFTEngine.scala 452:56]
        node _T_59 = or(addrSBankSel, UInt<3>("h0"))
        node _T_60 = bits(_T_59, 2, 0)
        node _io_addrSram1Bank_T_3 = bits(addrS[0], 3, 0) @[FFTEngine.scala 453:67]
        io.addrSram1Bank[_T_60] <= _io_addrSram1Bank_T_3 @[FFTEngine.scala 453:56]
    node _T_61 = eq(procState3c, UInt<1>("h0")) @[FFTEngine.scala 458:14]
    when _T_61 : @[FFTEngine.scala 458:28]
      node _T_62 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 459:28]
      when _T_62 : @[FFTEngine.scala 459:37]
        node _T_63 = or(addrTBankSel3c, UInt<3>("h0"))
        node _T_64 = bits(_T_63, 2, 0)
        io.addrSram1Bank[_T_64] <= addrT3c @[FFTEngine.scala 460:50]
        node _T_65 = or(addrSBankSel3c, UInt<3>("h0"))
        node _T_66 = bits(_T_65, 2, 0)
        io.addrSram1Bank[_T_66] <= addrS3c @[FFTEngine.scala 461:50]
      else :
        node _T_67 = or(addrTBankSel3c, UInt<3>("h0"))
        node _T_68 = bits(_T_67, 2, 0)
        io.addrSram0Bank[_T_68] <= addrT3c @[FFTEngine.scala 463:50]
        node _T_69 = or(addrSBankSel3c, UInt<3>("h0"))
        node _T_70 = bits(_T_69, 2, 0)
        io.addrSram0Bank[_T_70] <= addrS3c @[FFTEngine.scala 464:50]
    else :
      node _T_71 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 468:32]
      when _T_71 : @[FFTEngine.scala 468:41]
        node _T_72 = or(addrTBankSel3c, UInt<3>("h0"))
        node _T_73 = bits(_T_72, 2, 0)
        io.addrSram1Bank[_T_73] <= addrT3c @[FFTEngine.scala 469:54]
        node _T_74 = or(addrSBankSel3c, UInt<3>("h0"))
        node _T_75 = bits(_T_74, 2, 0)
        io.addrSram1Bank[_T_75] <= addrS3c @[FFTEngine.scala 470:54]
      else :
        node _T_76 = or(addrTBankSel3c, UInt<3>("h0"))
        node _T_77 = bits(_T_76, 2, 0)
        io.addrSram0Bank[_T_77] <= addrT3c @[FFTEngine.scala 472:54]
        node _T_78 = or(addrSBankSel3c, UInt<3>("h0"))
        node _T_79 = bits(_T_78, 2, 0)
        io.addrSram0Bank[_T_79] <= addrS3c @[FFTEngine.scala 473:54]
    wire writeDataS3c : UInt @[FFTEngine.scala 479:32]
    wire writeDataT3c : UInt @[FFTEngine.scala 480:32]
    when sameAddr3c : @[FFTEngine.scala 482:26]
      node _T_80 = eq(phaseCount, UInt<1>("h0")) @[FFTEngine.scala 483:38]
      node _T_81 = and(isFFT, _T_80) @[FFTEngine.scala 483:24]
      when _T_81 : @[FFTEngine.scala 483:47]
        node _writeDataS3c_T = cat(writeDataTRPre3c, fftCalc.io.dataOutSR3c) @[Cat.scala 33:92]
        writeDataS3c <= _writeDataS3c_T @[FFTEngine.scala 484:30]
        node _writeDataT3c_T = cat(writeDataTRPre3c, fftCalc.io.dataOutSR3c) @[Cat.scala 33:92]
        writeDataT3c <= _writeDataT3c_T @[FFTEngine.scala 485:30]
      else :
        node _T_82 = eq(isFFT, UInt<1>("h0")) @[FFTEngine.scala 486:25]
        node _T_83 = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 486:46]
        node _T_84 = and(_T_82, _T_83) @[FFTEngine.scala 486:32]
        when _T_84 : @[FFTEngine.scala 486:55]
          node _writeDataS3c_T_1 = bits(writeDataTRPre3c, 15, 15) @[FFTEngine.scala 487:57]
          node _writeDataS3c_T_2 = bits(writeDataTRPre3c, 15, 1) @[FFTEngine.scala 487:93]
          node _writeDataS3c_T_3 = cat(_writeDataS3c_T_1, _writeDataS3c_T_2) @[Cat.scala 33:92]
          node _writeDataS3c_T_4 = bits(fftCalc.io.dataOutSR3c, 15, 15) @[FFTEngine.scala 487:137]
          node _writeDataS3c_T_5 = bits(fftCalc.io.dataOutSR3c, 15, 1) @[FFTEngine.scala 487:173]
          node _writeDataS3c_T_6 = cat(_writeDataS3c_T_4, _writeDataS3c_T_5) @[Cat.scala 33:92]
          node _writeDataS3c_T_7 = cat(_writeDataS3c_T_3, _writeDataS3c_T_6) @[Cat.scala 33:92]
          writeDataS3c <= _writeDataS3c_T_7 @[FFTEngine.scala 487:30]
          node _writeDataT3c_T_1 = bits(writeDataTRPre3c, 15, 15) @[FFTEngine.scala 488:57]
          node _writeDataT3c_T_2 = bits(writeDataTRPre3c, 15, 1) @[FFTEngine.scala 488:93]
          node _writeDataT3c_T_3 = cat(_writeDataT3c_T_1, _writeDataT3c_T_2) @[Cat.scala 33:92]
          node _writeDataT3c_T_4 = bits(fftCalc.io.dataOutSR3c, 15, 15) @[FFTEngine.scala 488:137]
          node _writeDataT3c_T_5 = bits(fftCalc.io.dataOutSR3c, 15, 1) @[FFTEngine.scala 488:173]
          node _writeDataT3c_T_6 = cat(_writeDataT3c_T_4, _writeDataT3c_T_5) @[Cat.scala 33:92]
          node _writeDataT3c_T_7 = cat(_writeDataT3c_T_3, _writeDataT3c_T_6) @[Cat.scala 33:92]
          writeDataT3c <= _writeDataT3c_T_7 @[FFTEngine.scala 488:30]
        else :
          node _writeDataS3c_T_8 = cat(fftCalc.io.dataOutSI3c, fftCalc.io.dataOutSR3c) @[Cat.scala 33:92]
          writeDataS3c <= _writeDataS3c_T_8 @[FFTEngine.scala 490:30]
          node _writeDataT3c_T_8 = cat(writeDataTIPre3c, writeDataTRPre3c) @[Cat.scala 33:92]
          writeDataT3c <= _writeDataT3c_T_8 @[FFTEngine.scala 491:30]
    else :
      node _writeDataS3c_T_9 = cat(fftCalc.io.dataOutSI3c, fftCalc.io.dataOutSR3c) @[Cat.scala 33:92]
      writeDataS3c <= _writeDataS3c_T_9 @[FFTEngine.scala 494:26]
      node _writeDataT3c_T_9 = cat(writeDataTIPre3c, writeDataTRPre3c) @[Cat.scala 33:92]
      writeDataT3c <= _writeDataT3c_T_9 @[FFTEngine.scala 495:26]
    when procState3c : @[FFTEngine.scala 499:30]
      node _T_85 = eq(UInt<1>("h0"), addrSBankSel3c) @[FFTEngine.scala 501:30]
      when _T_85 : @[FFTEngine.scala 501:50]
        io.writeDataSram0Bank[0] <= writeDataS3c @[FFTEngine.scala 502:50]
        io.writeDataSram1Bank[0] <= writeDataS3c @[FFTEngine.scala 503:50]
      else :
        node _T_86 = eq(UInt<1>("h0"), addrTBankSel3c) @[FFTEngine.scala 504:37]
        when _T_86 : @[FFTEngine.scala 504:57]
          io.writeDataSram0Bank[0] <= writeDataT3c @[FFTEngine.scala 505:50]
          io.writeDataSram1Bank[0] <= writeDataT3c @[FFTEngine.scala 506:50]
    else :
      node _T_87 = eq(UInt<1>("h0"), addrSBankSel3c) @[FFTEngine.scala 510:26]
      when _T_87 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[0] <= writeDataS3c @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[0] <= writeDataS3c @[FFTEngine.scala 512:46]
      else :
        node _T_88 = eq(UInt<1>("h0"), addrTBankSel3c) @[FFTEngine.scala 513:33]
        when _T_88 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[0] <= writeDataT3c @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[0] <= writeDataT3c @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      node _T_89 = eq(UInt<1>("h1"), addrSBankSel3c) @[FFTEngine.scala 501:30]
      when _T_89 : @[FFTEngine.scala 501:50]
        io.writeDataSram0Bank[1] <= writeDataS3c @[FFTEngine.scala 502:50]
        io.writeDataSram1Bank[1] <= writeDataS3c @[FFTEngine.scala 503:50]
      else :
        node _T_90 = eq(UInt<1>("h1"), addrTBankSel3c) @[FFTEngine.scala 504:37]
        when _T_90 : @[FFTEngine.scala 504:57]
          io.writeDataSram0Bank[1] <= writeDataT3c @[FFTEngine.scala 505:50]
          io.writeDataSram1Bank[1] <= writeDataT3c @[FFTEngine.scala 506:50]
    else :
      node _T_91 = eq(UInt<1>("h1"), addrSBankSel3c) @[FFTEngine.scala 510:26]
      when _T_91 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[1] <= writeDataS3c @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[1] <= writeDataS3c @[FFTEngine.scala 512:46]
      else :
        node _T_92 = eq(UInt<1>("h1"), addrTBankSel3c) @[FFTEngine.scala 513:33]
        when _T_92 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[1] <= writeDataT3c @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[1] <= writeDataT3c @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      node _T_93 = eq(UInt<2>("h2"), addrSBankSel3c) @[FFTEngine.scala 501:30]
      when _T_93 : @[FFTEngine.scala 501:50]
        io.writeDataSram0Bank[2] <= writeDataS3c @[FFTEngine.scala 502:50]
        io.writeDataSram1Bank[2] <= writeDataS3c @[FFTEngine.scala 503:50]
      else :
        node _T_94 = eq(UInt<2>("h2"), addrTBankSel3c) @[FFTEngine.scala 504:37]
        when _T_94 : @[FFTEngine.scala 504:57]
          io.writeDataSram0Bank[2] <= writeDataT3c @[FFTEngine.scala 505:50]
          io.writeDataSram1Bank[2] <= writeDataT3c @[FFTEngine.scala 506:50]
    else :
      node _T_95 = eq(UInt<2>("h2"), addrSBankSel3c) @[FFTEngine.scala 510:26]
      when _T_95 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[2] <= writeDataS3c @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[2] <= writeDataS3c @[FFTEngine.scala 512:46]
      else :
        node _T_96 = eq(UInt<2>("h2"), addrTBankSel3c) @[FFTEngine.scala 513:33]
        when _T_96 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[2] <= writeDataT3c @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[2] <= writeDataT3c @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      node _T_97 = eq(UInt<2>("h3"), addrSBankSel3c) @[FFTEngine.scala 501:30]
      when _T_97 : @[FFTEngine.scala 501:50]
        io.writeDataSram0Bank[3] <= writeDataS3c @[FFTEngine.scala 502:50]
        io.writeDataSram1Bank[3] <= writeDataS3c @[FFTEngine.scala 503:50]
      else :
        node _T_98 = eq(UInt<2>("h3"), addrTBankSel3c) @[FFTEngine.scala 504:37]
        when _T_98 : @[FFTEngine.scala 504:57]
          io.writeDataSram0Bank[3] <= writeDataT3c @[FFTEngine.scala 505:50]
          io.writeDataSram1Bank[3] <= writeDataT3c @[FFTEngine.scala 506:50]
    else :
      node _T_99 = eq(UInt<2>("h3"), addrSBankSel3c) @[FFTEngine.scala 510:26]
      when _T_99 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[3] <= writeDataS3c @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[3] <= writeDataS3c @[FFTEngine.scala 512:46]
      else :
        node _T_100 = eq(UInt<2>("h3"), addrTBankSel3c) @[FFTEngine.scala 513:33]
        when _T_100 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[3] <= writeDataT3c @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[3] <= writeDataT3c @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      node _T_101 = eq(UInt<3>("h4"), addrSBankSel3c) @[FFTEngine.scala 501:30]
      when _T_101 : @[FFTEngine.scala 501:50]
        io.writeDataSram0Bank[4] <= writeDataS3c @[FFTEngine.scala 502:50]
        io.writeDataSram1Bank[4] <= writeDataS3c @[FFTEngine.scala 503:50]
      else :
        node _T_102 = eq(UInt<3>("h4"), addrTBankSel3c) @[FFTEngine.scala 504:37]
        when _T_102 : @[FFTEngine.scala 504:57]
          io.writeDataSram0Bank[4] <= writeDataT3c @[FFTEngine.scala 505:50]
          io.writeDataSram1Bank[4] <= writeDataT3c @[FFTEngine.scala 506:50]
    else :
      node _T_103 = eq(UInt<3>("h4"), addrSBankSel3c) @[FFTEngine.scala 510:26]
      when _T_103 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[4] <= writeDataS3c @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[4] <= writeDataS3c @[FFTEngine.scala 512:46]
      else :
        node _T_104 = eq(UInt<3>("h4"), addrTBankSel3c) @[FFTEngine.scala 513:33]
        when _T_104 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[4] <= writeDataT3c @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[4] <= writeDataT3c @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      node _T_105 = eq(UInt<3>("h5"), addrSBankSel3c) @[FFTEngine.scala 501:30]
      when _T_105 : @[FFTEngine.scala 501:50]
        io.writeDataSram0Bank[5] <= writeDataS3c @[FFTEngine.scala 502:50]
        io.writeDataSram1Bank[5] <= writeDataS3c @[FFTEngine.scala 503:50]
      else :
        node _T_106 = eq(UInt<3>("h5"), addrTBankSel3c) @[FFTEngine.scala 504:37]
        when _T_106 : @[FFTEngine.scala 504:57]
          io.writeDataSram0Bank[5] <= writeDataT3c @[FFTEngine.scala 505:50]
          io.writeDataSram1Bank[5] <= writeDataT3c @[FFTEngine.scala 506:50]
    else :
      node _T_107 = eq(UInt<3>("h5"), addrSBankSel3c) @[FFTEngine.scala 510:26]
      when _T_107 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[5] <= writeDataS3c @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[5] <= writeDataS3c @[FFTEngine.scala 512:46]
      else :
        node _T_108 = eq(UInt<3>("h5"), addrTBankSel3c) @[FFTEngine.scala 513:33]
        when _T_108 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[5] <= writeDataT3c @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[5] <= writeDataT3c @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      node _T_109 = eq(UInt<3>("h6"), addrSBankSel3c) @[FFTEngine.scala 501:30]
      when _T_109 : @[FFTEngine.scala 501:50]
        io.writeDataSram0Bank[6] <= writeDataS3c @[FFTEngine.scala 502:50]
        io.writeDataSram1Bank[6] <= writeDataS3c @[FFTEngine.scala 503:50]
      else :
        node _T_110 = eq(UInt<3>("h6"), addrTBankSel3c) @[FFTEngine.scala 504:37]
        when _T_110 : @[FFTEngine.scala 504:57]
          io.writeDataSram0Bank[6] <= writeDataT3c @[FFTEngine.scala 505:50]
          io.writeDataSram1Bank[6] <= writeDataT3c @[FFTEngine.scala 506:50]
    else :
      node _T_111 = eq(UInt<3>("h6"), addrSBankSel3c) @[FFTEngine.scala 510:26]
      when _T_111 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[6] <= writeDataS3c @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[6] <= writeDataS3c @[FFTEngine.scala 512:46]
      else :
        node _T_112 = eq(UInt<3>("h6"), addrTBankSel3c) @[FFTEngine.scala 513:33]
        when _T_112 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[6] <= writeDataT3c @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[6] <= writeDataT3c @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      node _T_113 = eq(UInt<3>("h7"), addrSBankSel3c) @[FFTEngine.scala 501:30]
      when _T_113 : @[FFTEngine.scala 501:50]
        io.writeDataSram0Bank[7] <= writeDataS3c @[FFTEngine.scala 502:50]
        io.writeDataSram1Bank[7] <= writeDataS3c @[FFTEngine.scala 503:50]
      else :
        node _T_114 = eq(UInt<3>("h7"), addrTBankSel3c) @[FFTEngine.scala 504:37]
        when _T_114 : @[FFTEngine.scala 504:57]
          io.writeDataSram0Bank[7] <= writeDataT3c @[FFTEngine.scala 505:50]
          io.writeDataSram1Bank[7] <= writeDataT3c @[FFTEngine.scala 506:50]
    else :
      node _T_115 = eq(UInt<3>("h7"), addrSBankSel3c) @[FFTEngine.scala 510:26]
      when _T_115 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[7] <= writeDataS3c @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[7] <= writeDataS3c @[FFTEngine.scala 512:46]
      else :
        node _T_116 = eq(UInt<3>("h7"), addrTBankSel3c) @[FFTEngine.scala 513:33]
        when _T_116 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[7] <= writeDataT3c @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[7] <= writeDataT3c @[FFTEngine.scala 515:46]
    node _addrS1c_T_1 = bits(addrS[1], 3, 0) @[FFTEngine.scala 364:45]
    reg addrS1c_1 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS1c_1 <= _addrS1c_T_1 @[Reg.scala 36:22]
    reg addrS2c_1 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS2c_1 <= addrS1c_1 @[Reg.scala 36:22]
    reg addrS3c_1 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS3c_1 <= addrS2c_1 @[Reg.scala 36:22]
    node _addrT1c_T_1 = bits(addrT[1], 3, 0) @[FFTEngine.scala 368:45]
    reg addrT1c_1 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT1c_1 <= _addrT1c_T_1 @[Reg.scala 36:22]
    reg addrT2c_1 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT2c_1 <= addrT1c_1 @[Reg.scala 36:22]
    reg addrT3c_1 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT3c_1 <= addrT2c_1 @[Reg.scala 36:22]
    wire addrSBankSel_1 : UInt @[FFTEngine.scala 372:32]
    wire addrTBankSel_1 : UInt @[FFTEngine.scala 373:32]
    addrSBankSel_1 <= addrSBankSelKernel[1] @[FFTEngine.scala 379:26]
    addrTBankSel_1 <= addrTBankSelKernel[1] @[FFTEngine.scala 380:26]
    when isFFT : @[FFTEngine.scala 383:21]
      node _addrSBankSel_T_6 = mux(procState, addrSBankSelProc[1], addrSBankSelKernel[1]) @[FFTEngine.scala 384:32]
      addrSBankSel_1 <= _addrSBankSel_T_6 @[FFTEngine.scala 384:26]
      node _addrTBankSel_T_6 = mux(procState, addrTBankSelProc[1], addrTBankSelKernel[1]) @[FFTEngine.scala 385:32]
      addrTBankSel_1 <= _addrTBankSel_T_6 @[FFTEngine.scala 385:26]
    else :
      node _addrSBankSel_T_7 = eq(phaseCount, UInt<1>("h0")) @[FFTEngine.scala 387:72]
      node _addrSBankSel_T_8 = and(kernelState, _addrSBankSel_T_7) @[FFTEngine.scala 387:58]
      node _addrSBankSel_T_9 = or(procState, _addrSBankSel_T_8) @[FFTEngine.scala 387:43]
      node _addrSBankSel_T_10 = mux(_addrSBankSel_T_9, addrSBankSelProc[1], addrSBankSelKernel[1]) @[FFTEngine.scala 387:32]
      addrSBankSel_1 <= _addrSBankSel_T_10 @[FFTEngine.scala 387:26]
      node _addrTBankSel_T_7 = eq(phaseCount, UInt<1>("h0")) @[FFTEngine.scala 388:72]
      node _addrTBankSel_T_8 = and(kernelState, _addrTBankSel_T_7) @[FFTEngine.scala 388:58]
      node _addrTBankSel_T_9 = or(procState, _addrTBankSel_T_8) @[FFTEngine.scala 388:43]
      node _addrTBankSel_T_10 = mux(_addrTBankSel_T_9, addrTBankSelProc[1], addrTBankSelKernel[1]) @[FFTEngine.scala 388:32]
      addrTBankSel_1 <= _addrTBankSel_T_10 @[FFTEngine.scala 388:26]
    reg addrSBankSel1c_1 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSel1c_1 <= addrSBankSel_1 @[Reg.scala 36:22]
    reg addrTBankSel1c_1 : UInt, clock with :
      reset => (reset, UInt<1>("h1")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSel1c_1 <= addrTBankSel_1 @[Reg.scala 36:22]
    inst fftCalc_1 of FFT3PipelineCalc_1 @[FFTEngine.scala 394:29]
    fftCalc_1.clock <= clock
    fftCalc_1.reset <= reset
    node _fftCalc_io_dataInSR_T_2 = or(addrSBankSel1c_1, UInt<3>("h0"))
    node _fftCalc_io_dataInSR_T_3 = bits(_fftCalc_io_dataInSR_T_2, 2, 0)
    fftCalc_1.io.dataInSR <= dataInRPre[_fftCalc_io_dataInSR_T_3] @[FFTEngine.scala 395:29]
    node _fftCalc_io_dataInSI_T_5 = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 396:61]
    node _fftCalc_io_dataInSI_T_6 = and(sameAddr1c, _fftCalc_io_dataInSI_T_5) @[FFTEngine.scala 396:47]
    node _fftCalc_io_dataInSI_T_7 = or(addrSBankSel1c_1, UInt<3>("h0"))
    node _fftCalc_io_dataInSI_T_8 = bits(_fftCalc_io_dataInSI_T_7, 2, 0)
    node _fftCalc_io_dataInSI_T_9 = mux(_fftCalc_io_dataInSI_T_6, UInt<1>("h0"), dataInIPre[_fftCalc_io_dataInSI_T_8]) @[FFTEngine.scala 396:35]
    fftCalc_1.io.dataInSI <= _fftCalc_io_dataInSI_T_9 @[FFTEngine.scala 396:29]
    node _fftCalc_io_dataInTR_T_7 = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 397:61]
    node _fftCalc_io_dataInTR_T_8 = and(sameAddr1c, _fftCalc_io_dataInTR_T_7) @[FFTEngine.scala 397:47]
    node _fftCalc_io_dataInTR_T_9 = or(addrTBankSel1c_1, UInt<3>("h0"))
    node _fftCalc_io_dataInTR_T_10 = bits(_fftCalc_io_dataInTR_T_9, 2, 0)
    node _fftCalc_io_dataInTR_T_11 = or(addrTBankSel1c_1, UInt<3>("h0"))
    node _fftCalc_io_dataInTR_T_12 = bits(_fftCalc_io_dataInTR_T_11, 2, 0)
    node _fftCalc_io_dataInTR_T_13 = mux(_fftCalc_io_dataInTR_T_8, dataInIPre[_fftCalc_io_dataInTR_T_10], dataInRPre[_fftCalc_io_dataInTR_T_12]) @[FFTEngine.scala 397:35]
    fftCalc_1.io.dataInTR <= _fftCalc_io_dataInTR_T_13 @[FFTEngine.scala 397:29]
    node _fftCalc_io_dataInTI_T_5 = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 398:61]
    node _fftCalc_io_dataInTI_T_6 = and(sameAddr1c, _fftCalc_io_dataInTI_T_5) @[FFTEngine.scala 398:47]
    node _fftCalc_io_dataInTI_T_7 = or(addrTBankSel1c_1, UInt<3>("h0"))
    node _fftCalc_io_dataInTI_T_8 = bits(_fftCalc_io_dataInTI_T_7, 2, 0)
    node _fftCalc_io_dataInTI_T_9 = mux(_fftCalc_io_dataInTI_T_6, UInt<1>("h0"), dataInIPre[_fftCalc_io_dataInTI_T_8]) @[FFTEngine.scala 398:35]
    fftCalc_1.io.dataInTI <= _fftCalc_io_dataInTI_T_9 @[FFTEngine.scala 398:29]
    node _fftCalc_io_nk_T_4 = bits(addrSProc, 6, 0) @[FFTEngine.scala 399:51]
    node _fftCalc_io_nk_T_5 = bits(nk[1], 5, 0) @[FFTEngine.scala 399:80]
    node _fftCalc_io_nk_T_6 = cat(_fftCalc_io_nk_T_5, UInt<1>("h0")) @[Cat.scala 33:92]
    node _fftCalc_io_nk_T_7 = mux(procState, _fftCalc_io_nk_T_4, _fftCalc_io_nk_T_6) @[FFTEngine.scala 399:29]
    fftCalc_1.io.nk <= _fftCalc_io_nk_T_7 @[FFTEngine.scala 399:23]
    node _fftCalc_io_rShiftSym_T_2 = bits(phaseCount, 0, 0) @[FFTEngine.scala 400:90]
    node _fftCalc_io_rShiftSym_T_3 = mux(kernelState1c, io.fftRShiftP0[phaseCount], _fftCalc_io_rShiftSym_T_2) @[FFTEngine.scala 400:36]
    fftCalc_1.io.rShiftSym <= _fftCalc_io_rShiftSym_T_3 @[FFTEngine.scala 400:30]
    fftCalc_1.io.isFFT <= isFFT @[FFTEngine.scala 401:26]
    node _fftCalc_io_procMode_T_3 = bits(phaseCount, 0, 0) @[FFTEngine.scala 402:44]
    node _fftCalc_io_procMode_T_4 = not(_fftCalc_io_procMode_T_3) @[FFTEngine.scala 402:33]
    node _fftCalc_io_procMode_T_5 = and(_fftCalc_io_procMode_T_4, procState2c) @[FFTEngine.scala 402:48]
    fftCalc_1.io.procMode <= _fftCalc_io_procMode_T_5 @[FFTEngine.scala 402:29]
    node _fftCalc_io_state1c_T_1 = or(kernelState1c, procState1c) @[FFTEngine.scala 403:45]
    fftCalc_1.io.state1c <= _fftCalc_io_state1c_T_1 @[FFTEngine.scala 403:28]
    node _fftCalc_io_state2c_T_1 = or(kernelState2c, procState2c) @[FFTEngine.scala 404:45]
    fftCalc_1.io.state2c <= _fftCalc_io_state2c_T_1 @[FFTEngine.scala 404:28]
    node _writeDataTRPre3c_T_6 = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 407:64]
    node _writeDataTRPre3c_T_7 = not(fftCalc_1.io.dataOutTI3c) @[FFTEngine.scala 407:132]
    node _writeDataTRPre3c_T_8 = add(_writeDataTRPre3c_T_7, UInt<1>("h1")) @[FFTEngine.scala 407:156]
    node _writeDataTRPre3c_T_9 = tail(_writeDataTRPre3c_T_8, 1) @[FFTEngine.scala 407:156]
    node _writeDataTRPre3c_T_10 = mux(isFFT, fftCalc_1.io.dataOutTI3c, _writeDataTRPre3c_T_9) @[FFTEngine.scala 407:100]
    node _writeDataTRPre3c_T_11 = mux(_writeDataTRPre3c_T_6, fftCalc_1.io.dataOutTR3c, _writeDataTRPre3c_T_10) @[FFTEngine.scala 407:52]
    node writeDataTRPre3c_1 = mux(procState3c, _writeDataTRPre3c_T_11, fftCalc_1.io.dataOutTR3c) @[FFTEngine.scala 407:35]
    node _writeDataTIPre3c_T_9 = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 408:64]
    node _writeDataTIPre3c_T_10 = not(fftCalc_1.io.dataOutTI3c) @[FFTEngine.scala 408:73]
    node _writeDataTIPre3c_T_11 = add(_writeDataTIPre3c_T_10, UInt<1>("h1")) @[FFTEngine.scala 408:97]
    node _writeDataTIPre3c_T_12 = tail(_writeDataTIPre3c_T_11, 1) @[FFTEngine.scala 408:97]
    node _writeDataTIPre3c_T_13 = not(fftCalc_1.io.dataOutTR3c) @[FFTEngine.scala 408:115]
    node _writeDataTIPre3c_T_14 = add(_writeDataTIPre3c_T_13, UInt<1>("h1")) @[FFTEngine.scala 408:139]
    node _writeDataTIPre3c_T_15 = tail(_writeDataTIPre3c_T_14, 1) @[FFTEngine.scala 408:139]
    node _writeDataTIPre3c_T_16 = mux(isFFT, _writeDataTIPre3c_T_15, fftCalc_1.io.dataOutTR3c) @[FFTEngine.scala 408:107]
    node _writeDataTIPre3c_T_17 = mux(_writeDataTIPre3c_T_9, _writeDataTIPre3c_T_12, _writeDataTIPre3c_T_16) @[FFTEngine.scala 408:52]
    node writeDataTIPre3c_1 = mux(procState3c, _writeDataTIPre3c_T_17, fftCalc_1.io.dataOutTI3c) @[FFTEngine.scala 408:35]
    wire addrSBankSel3c_1 : UInt @[FFTEngine.scala 410:34]
    wire addrTBankSel3c_1 : UInt @[FFTEngine.scala 411:34]
    when isFFT : @[FFTEngine.scala 413:21]
      node _addrSBankSel3c_T_5 = eq(phaseCount, UInt<3>("h6")) @[FFTEngine.scala 414:78]
      node _addrSBankSel3c_T_6 = and(kernelState3c, _addrSBankSel3c_T_5) @[FFTEngine.scala 414:64]
      node _addrSBankSel3c_T_7 = or(procState3c, _addrSBankSel3c_T_6) @[FFTEngine.scala 414:47]
      node _addrSBankSel3c_T_8 = mux(_addrSBankSel3c_T_7, addrSBankSelProc3c[1], addrSBankSelKernel3c[1]) @[FFTEngine.scala 414:34]
      addrSBankSel3c_1 <= _addrSBankSel3c_T_8 @[FFTEngine.scala 414:28]
      node _addrTBankSel3c_T_5 = eq(phaseCount, UInt<3>("h6")) @[FFTEngine.scala 415:78]
      node _addrTBankSel3c_T_6 = and(kernelState3c, _addrTBankSel3c_T_5) @[FFTEngine.scala 415:64]
      node _addrTBankSel3c_T_7 = or(procState3c, _addrTBankSel3c_T_6) @[FFTEngine.scala 415:47]
      node _addrTBankSel3c_T_8 = mux(_addrTBankSel3c_T_7, addrTBankSelProc3c[1], addrTBankSelKernel3c[1]) @[FFTEngine.scala 415:34]
      addrTBankSel3c_1 <= _addrTBankSel3c_T_8 @[FFTEngine.scala 415:28]
    else :
      node _addrSBankSel3c_T_9 = mux(procState3c, addrSBankSelProc3c[1], addrSBankSelKernel3c[1]) @[FFTEngine.scala 417:34]
      addrSBankSel3c_1 <= _addrSBankSel3c_T_9 @[FFTEngine.scala 417:28]
      node _addrTBankSel3c_T_9 = mux(procState3c, addrTBankSelProc3c[1], addrTBankSelKernel3c[1]) @[FFTEngine.scala 418:34]
      addrTBankSel3c_1 <= _addrTBankSel3c_T_9 @[FFTEngine.scala 418:28]
    node _T_117 = eq(procState, UInt<1>("h0")) @[FFTEngine.scala 438:14]
    when _T_117 : @[FFTEngine.scala 438:26]
      node _T_118 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 439:28]
      when _T_118 : @[FFTEngine.scala 439:37]
        node _T_119 = or(addrTBankSel_1, UInt<3>("h0"))
        node _T_120 = bits(_T_119, 2, 0)
        node _io_addrSram0Bank_T_4 = bits(addrT[1], 3, 0) @[FFTEngine.scala 440:59]
        io.addrSram0Bank[_T_120] <= _io_addrSram0Bank_T_4 @[FFTEngine.scala 440:48]
        node _T_121 = or(addrSBankSel_1, UInt<3>("h0"))
        node _T_122 = bits(_T_121, 2, 0)
        node _io_addrSram0Bank_T_5 = bits(addrS[1], 3, 0) @[FFTEngine.scala 441:59]
        io.addrSram0Bank[_T_122] <= _io_addrSram0Bank_T_5 @[FFTEngine.scala 441:48]
      else :
        node _T_123 = or(addrTBankSel_1, UInt<3>("h0"))
        node _T_124 = bits(_T_123, 2, 0)
        node _io_addrSram1Bank_T_4 = bits(addrT[1], 3, 0) @[FFTEngine.scala 443:59]
        io.addrSram1Bank[_T_124] <= _io_addrSram1Bank_T_4 @[FFTEngine.scala 443:48]
        node _T_125 = or(addrSBankSel_1, UInt<3>("h0"))
        node _T_126 = bits(_T_125, 2, 0)
        node _io_addrSram1Bank_T_5 = bits(addrS[1], 3, 0) @[FFTEngine.scala 444:59]
        io.addrSram1Bank[_T_126] <= _io_addrSram1Bank_T_5 @[FFTEngine.scala 444:48]
    else :
      skip
    node _T_127 = eq(procState3c, UInt<1>("h0")) @[FFTEngine.scala 458:14]
    when _T_127 : @[FFTEngine.scala 458:28]
      node _T_128 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 459:28]
      when _T_128 : @[FFTEngine.scala 459:37]
        node _T_129 = or(addrTBankSel3c_1, UInt<3>("h0"))
        node _T_130 = bits(_T_129, 2, 0)
        io.addrSram1Bank[_T_130] <= addrT3c_1 @[FFTEngine.scala 460:50]
        node _T_131 = or(addrSBankSel3c_1, UInt<3>("h0"))
        node _T_132 = bits(_T_131, 2, 0)
        io.addrSram1Bank[_T_132] <= addrS3c_1 @[FFTEngine.scala 461:50]
      else :
        node _T_133 = or(addrTBankSel3c_1, UInt<3>("h0"))
        node _T_134 = bits(_T_133, 2, 0)
        io.addrSram0Bank[_T_134] <= addrT3c_1 @[FFTEngine.scala 463:50]
        node _T_135 = or(addrSBankSel3c_1, UInt<3>("h0"))
        node _T_136 = bits(_T_135, 2, 0)
        io.addrSram0Bank[_T_136] <= addrS3c_1 @[FFTEngine.scala 464:50]
    else :
      skip
    wire writeDataS3c_1 : UInt @[FFTEngine.scala 479:32]
    wire writeDataT3c_1 : UInt @[FFTEngine.scala 480:32]
    when sameAddr3c : @[FFTEngine.scala 482:26]
      node _T_137 = eq(phaseCount, UInt<1>("h0")) @[FFTEngine.scala 483:38]
      node _T_138 = and(isFFT, _T_137) @[FFTEngine.scala 483:24]
      when _T_138 : @[FFTEngine.scala 483:47]
        node _writeDataS3c_T_10 = cat(writeDataTRPre3c_1, fftCalc_1.io.dataOutSR3c) @[Cat.scala 33:92]
        writeDataS3c_1 <= _writeDataS3c_T_10 @[FFTEngine.scala 484:30]
        node _writeDataT3c_T_10 = cat(writeDataTRPre3c_1, fftCalc_1.io.dataOutSR3c) @[Cat.scala 33:92]
        writeDataT3c_1 <= _writeDataT3c_T_10 @[FFTEngine.scala 485:30]
      else :
        node _T_139 = eq(isFFT, UInt<1>("h0")) @[FFTEngine.scala 486:25]
        node _T_140 = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 486:46]
        node _T_141 = and(_T_139, _T_140) @[FFTEngine.scala 486:32]
        when _T_141 : @[FFTEngine.scala 486:55]
          node _writeDataS3c_T_11 = bits(writeDataTRPre3c_1, 15, 15) @[FFTEngine.scala 487:57]
          node _writeDataS3c_T_12 = bits(writeDataTRPre3c_1, 15, 1) @[FFTEngine.scala 487:93]
          node _writeDataS3c_T_13 = cat(_writeDataS3c_T_11, _writeDataS3c_T_12) @[Cat.scala 33:92]
          node _writeDataS3c_T_14 = bits(fftCalc_1.io.dataOutSR3c, 15, 15) @[FFTEngine.scala 487:137]
          node _writeDataS3c_T_15 = bits(fftCalc_1.io.dataOutSR3c, 15, 1) @[FFTEngine.scala 487:173]
          node _writeDataS3c_T_16 = cat(_writeDataS3c_T_14, _writeDataS3c_T_15) @[Cat.scala 33:92]
          node _writeDataS3c_T_17 = cat(_writeDataS3c_T_13, _writeDataS3c_T_16) @[Cat.scala 33:92]
          writeDataS3c_1 <= _writeDataS3c_T_17 @[FFTEngine.scala 487:30]
          node _writeDataT3c_T_11 = bits(writeDataTRPre3c_1, 15, 15) @[FFTEngine.scala 488:57]
          node _writeDataT3c_T_12 = bits(writeDataTRPre3c_1, 15, 1) @[FFTEngine.scala 488:93]
          node _writeDataT3c_T_13 = cat(_writeDataT3c_T_11, _writeDataT3c_T_12) @[Cat.scala 33:92]
          node _writeDataT3c_T_14 = bits(fftCalc_1.io.dataOutSR3c, 15, 15) @[FFTEngine.scala 488:137]
          node _writeDataT3c_T_15 = bits(fftCalc_1.io.dataOutSR3c, 15, 1) @[FFTEngine.scala 488:173]
          node _writeDataT3c_T_16 = cat(_writeDataT3c_T_14, _writeDataT3c_T_15) @[Cat.scala 33:92]
          node _writeDataT3c_T_17 = cat(_writeDataT3c_T_13, _writeDataT3c_T_16) @[Cat.scala 33:92]
          writeDataT3c_1 <= _writeDataT3c_T_17 @[FFTEngine.scala 488:30]
        else :
          node _writeDataS3c_T_18 = cat(fftCalc_1.io.dataOutSI3c, fftCalc_1.io.dataOutSR3c) @[Cat.scala 33:92]
          writeDataS3c_1 <= _writeDataS3c_T_18 @[FFTEngine.scala 490:30]
          node _writeDataT3c_T_18 = cat(writeDataTIPre3c_1, writeDataTRPre3c_1) @[Cat.scala 33:92]
          writeDataT3c_1 <= _writeDataT3c_T_18 @[FFTEngine.scala 491:30]
    else :
      node _writeDataS3c_T_19 = cat(fftCalc_1.io.dataOutSI3c, fftCalc_1.io.dataOutSR3c) @[Cat.scala 33:92]
      writeDataS3c_1 <= _writeDataS3c_T_19 @[FFTEngine.scala 494:26]
      node _writeDataT3c_T_19 = cat(writeDataTIPre3c_1, writeDataTRPre3c_1) @[Cat.scala 33:92]
      writeDataT3c_1 <= _writeDataT3c_T_19 @[FFTEngine.scala 495:26]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_142 = eq(UInt<1>("h0"), addrSBankSel3c_1) @[FFTEngine.scala 510:26]
      when _T_142 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[0] <= writeDataS3c_1 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[0] <= writeDataS3c_1 @[FFTEngine.scala 512:46]
      else :
        node _T_143 = eq(UInt<1>("h0"), addrTBankSel3c_1) @[FFTEngine.scala 513:33]
        when _T_143 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[0] <= writeDataT3c_1 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[0] <= writeDataT3c_1 @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_144 = eq(UInt<1>("h1"), addrSBankSel3c_1) @[FFTEngine.scala 510:26]
      when _T_144 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[1] <= writeDataS3c_1 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[1] <= writeDataS3c_1 @[FFTEngine.scala 512:46]
      else :
        node _T_145 = eq(UInt<1>("h1"), addrTBankSel3c_1) @[FFTEngine.scala 513:33]
        when _T_145 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[1] <= writeDataT3c_1 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[1] <= writeDataT3c_1 @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_146 = eq(UInt<2>("h2"), addrSBankSel3c_1) @[FFTEngine.scala 510:26]
      when _T_146 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[2] <= writeDataS3c_1 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[2] <= writeDataS3c_1 @[FFTEngine.scala 512:46]
      else :
        node _T_147 = eq(UInt<2>("h2"), addrTBankSel3c_1) @[FFTEngine.scala 513:33]
        when _T_147 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[2] <= writeDataT3c_1 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[2] <= writeDataT3c_1 @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_148 = eq(UInt<2>("h3"), addrSBankSel3c_1) @[FFTEngine.scala 510:26]
      when _T_148 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[3] <= writeDataS3c_1 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[3] <= writeDataS3c_1 @[FFTEngine.scala 512:46]
      else :
        node _T_149 = eq(UInt<2>("h3"), addrTBankSel3c_1) @[FFTEngine.scala 513:33]
        when _T_149 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[3] <= writeDataT3c_1 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[3] <= writeDataT3c_1 @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_150 = eq(UInt<3>("h4"), addrSBankSel3c_1) @[FFTEngine.scala 510:26]
      when _T_150 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[4] <= writeDataS3c_1 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[4] <= writeDataS3c_1 @[FFTEngine.scala 512:46]
      else :
        node _T_151 = eq(UInt<3>("h4"), addrTBankSel3c_1) @[FFTEngine.scala 513:33]
        when _T_151 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[4] <= writeDataT3c_1 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[4] <= writeDataT3c_1 @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_152 = eq(UInt<3>("h5"), addrSBankSel3c_1) @[FFTEngine.scala 510:26]
      when _T_152 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[5] <= writeDataS3c_1 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[5] <= writeDataS3c_1 @[FFTEngine.scala 512:46]
      else :
        node _T_153 = eq(UInt<3>("h5"), addrTBankSel3c_1) @[FFTEngine.scala 513:33]
        when _T_153 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[5] <= writeDataT3c_1 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[5] <= writeDataT3c_1 @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_154 = eq(UInt<3>("h6"), addrSBankSel3c_1) @[FFTEngine.scala 510:26]
      when _T_154 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[6] <= writeDataS3c_1 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[6] <= writeDataS3c_1 @[FFTEngine.scala 512:46]
      else :
        node _T_155 = eq(UInt<3>("h6"), addrTBankSel3c_1) @[FFTEngine.scala 513:33]
        when _T_155 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[6] <= writeDataT3c_1 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[6] <= writeDataT3c_1 @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_156 = eq(UInt<3>("h7"), addrSBankSel3c_1) @[FFTEngine.scala 510:26]
      when _T_156 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[7] <= writeDataS3c_1 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[7] <= writeDataS3c_1 @[FFTEngine.scala 512:46]
      else :
        node _T_157 = eq(UInt<3>("h7"), addrTBankSel3c_1) @[FFTEngine.scala 513:33]
        when _T_157 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[7] <= writeDataT3c_1 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[7] <= writeDataT3c_1 @[FFTEngine.scala 515:46]
    node _addrS1c_T_2 = bits(addrS[2], 3, 0) @[FFTEngine.scala 364:45]
    reg addrS1c_2 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS1c_2 <= _addrS1c_T_2 @[Reg.scala 36:22]
    reg addrS2c_2 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS2c_2 <= addrS1c_2 @[Reg.scala 36:22]
    reg addrS3c_2 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS3c_2 <= addrS2c_2 @[Reg.scala 36:22]
    node _addrT1c_T_2 = bits(addrT[2], 3, 0) @[FFTEngine.scala 368:45]
    reg addrT1c_2 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT1c_2 <= _addrT1c_T_2 @[Reg.scala 36:22]
    reg addrT2c_2 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT2c_2 <= addrT1c_2 @[Reg.scala 36:22]
    reg addrT3c_2 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT3c_2 <= addrT2c_2 @[Reg.scala 36:22]
    wire addrSBankSel_2 : UInt @[FFTEngine.scala 372:32]
    wire addrTBankSel_2 : UInt @[FFTEngine.scala 373:32]
    addrSBankSel_2 <= addrSBankSelKernel[2] @[FFTEngine.scala 379:26]
    addrTBankSel_2 <= addrTBankSelKernel[2] @[FFTEngine.scala 380:26]
    when isFFT : @[FFTEngine.scala 383:21]
      node _addrSBankSel_T_11 = mux(procState, addrSBankSelProc[2], addrSBankSelKernel[2]) @[FFTEngine.scala 384:32]
      addrSBankSel_2 <= _addrSBankSel_T_11 @[FFTEngine.scala 384:26]
      node _addrTBankSel_T_11 = mux(procState, addrTBankSelProc[2], addrTBankSelKernel[2]) @[FFTEngine.scala 385:32]
      addrTBankSel_2 <= _addrTBankSel_T_11 @[FFTEngine.scala 385:26]
    else :
      node _addrSBankSel_T_12 = eq(phaseCount, UInt<1>("h0")) @[FFTEngine.scala 387:72]
      node _addrSBankSel_T_13 = and(kernelState, _addrSBankSel_T_12) @[FFTEngine.scala 387:58]
      node _addrSBankSel_T_14 = or(procState, _addrSBankSel_T_13) @[FFTEngine.scala 387:43]
      node _addrSBankSel_T_15 = mux(_addrSBankSel_T_14, addrSBankSelProc[2], addrSBankSelKernel[2]) @[FFTEngine.scala 387:32]
      addrSBankSel_2 <= _addrSBankSel_T_15 @[FFTEngine.scala 387:26]
      node _addrTBankSel_T_12 = eq(phaseCount, UInt<1>("h0")) @[FFTEngine.scala 388:72]
      node _addrTBankSel_T_13 = and(kernelState, _addrTBankSel_T_12) @[FFTEngine.scala 388:58]
      node _addrTBankSel_T_14 = or(procState, _addrTBankSel_T_13) @[FFTEngine.scala 388:43]
      node _addrTBankSel_T_15 = mux(_addrTBankSel_T_14, addrTBankSelProc[2], addrTBankSelKernel[2]) @[FFTEngine.scala 388:32]
      addrTBankSel_2 <= _addrTBankSel_T_15 @[FFTEngine.scala 388:26]
    reg addrSBankSel1c_2 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSel1c_2 <= addrSBankSel_2 @[Reg.scala 36:22]
    reg addrTBankSel1c_2 : UInt, clock with :
      reset => (reset, UInt<1>("h1")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSel1c_2 <= addrTBankSel_2 @[Reg.scala 36:22]
    inst fftCalc_2 of FFT3PipelineCalc_2 @[FFTEngine.scala 394:29]
    fftCalc_2.clock <= clock
    fftCalc_2.reset <= reset
    node _fftCalc_io_dataInSR_T_4 = or(addrSBankSel1c_2, UInt<3>("h0"))
    node _fftCalc_io_dataInSR_T_5 = bits(_fftCalc_io_dataInSR_T_4, 2, 0)
    fftCalc_2.io.dataInSR <= dataInRPre[_fftCalc_io_dataInSR_T_5] @[FFTEngine.scala 395:29]
    node _fftCalc_io_dataInSI_T_10 = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 396:61]
    node _fftCalc_io_dataInSI_T_11 = and(sameAddr1c, _fftCalc_io_dataInSI_T_10) @[FFTEngine.scala 396:47]
    node _fftCalc_io_dataInSI_T_12 = or(addrSBankSel1c_2, UInt<3>("h0"))
    node _fftCalc_io_dataInSI_T_13 = bits(_fftCalc_io_dataInSI_T_12, 2, 0)
    node _fftCalc_io_dataInSI_T_14 = mux(_fftCalc_io_dataInSI_T_11, UInt<1>("h0"), dataInIPre[_fftCalc_io_dataInSI_T_13]) @[FFTEngine.scala 396:35]
    fftCalc_2.io.dataInSI <= _fftCalc_io_dataInSI_T_14 @[FFTEngine.scala 396:29]
    node _fftCalc_io_dataInTR_T_14 = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 397:61]
    node _fftCalc_io_dataInTR_T_15 = and(sameAddr1c, _fftCalc_io_dataInTR_T_14) @[FFTEngine.scala 397:47]
    node _fftCalc_io_dataInTR_T_16 = or(addrTBankSel1c_2, UInt<3>("h0"))
    node _fftCalc_io_dataInTR_T_17 = bits(_fftCalc_io_dataInTR_T_16, 2, 0)
    node _fftCalc_io_dataInTR_T_18 = or(addrTBankSel1c_2, UInt<3>("h0"))
    node _fftCalc_io_dataInTR_T_19 = bits(_fftCalc_io_dataInTR_T_18, 2, 0)
    node _fftCalc_io_dataInTR_T_20 = mux(_fftCalc_io_dataInTR_T_15, dataInIPre[_fftCalc_io_dataInTR_T_17], dataInRPre[_fftCalc_io_dataInTR_T_19]) @[FFTEngine.scala 397:35]
    fftCalc_2.io.dataInTR <= _fftCalc_io_dataInTR_T_20 @[FFTEngine.scala 397:29]
    node _fftCalc_io_dataInTI_T_10 = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 398:61]
    node _fftCalc_io_dataInTI_T_11 = and(sameAddr1c, _fftCalc_io_dataInTI_T_10) @[FFTEngine.scala 398:47]
    node _fftCalc_io_dataInTI_T_12 = or(addrTBankSel1c_2, UInt<3>("h0"))
    node _fftCalc_io_dataInTI_T_13 = bits(_fftCalc_io_dataInTI_T_12, 2, 0)
    node _fftCalc_io_dataInTI_T_14 = mux(_fftCalc_io_dataInTI_T_11, UInt<1>("h0"), dataInIPre[_fftCalc_io_dataInTI_T_13]) @[FFTEngine.scala 398:35]
    fftCalc_2.io.dataInTI <= _fftCalc_io_dataInTI_T_14 @[FFTEngine.scala 398:29]
    node _fftCalc_io_nk_T_8 = bits(addrSProc, 6, 0) @[FFTEngine.scala 399:51]
    node _fftCalc_io_nk_T_9 = bits(nk[2], 5, 0) @[FFTEngine.scala 399:80]
    node _fftCalc_io_nk_T_10 = cat(_fftCalc_io_nk_T_9, UInt<1>("h0")) @[Cat.scala 33:92]
    node _fftCalc_io_nk_T_11 = mux(procState, _fftCalc_io_nk_T_8, _fftCalc_io_nk_T_10) @[FFTEngine.scala 399:29]
    fftCalc_2.io.nk <= _fftCalc_io_nk_T_11 @[FFTEngine.scala 399:23]
    node _fftCalc_io_rShiftSym_T_4 = bits(phaseCount, 0, 0) @[FFTEngine.scala 400:90]
    node _fftCalc_io_rShiftSym_T_5 = mux(kernelState1c, io.fftRShiftP0[phaseCount], _fftCalc_io_rShiftSym_T_4) @[FFTEngine.scala 400:36]
    fftCalc_2.io.rShiftSym <= _fftCalc_io_rShiftSym_T_5 @[FFTEngine.scala 400:30]
    fftCalc_2.io.isFFT <= isFFT @[FFTEngine.scala 401:26]
    node _fftCalc_io_procMode_T_6 = bits(phaseCount, 0, 0) @[FFTEngine.scala 402:44]
    node _fftCalc_io_procMode_T_7 = not(_fftCalc_io_procMode_T_6) @[FFTEngine.scala 402:33]
    node _fftCalc_io_procMode_T_8 = and(_fftCalc_io_procMode_T_7, procState2c) @[FFTEngine.scala 402:48]
    fftCalc_2.io.procMode <= _fftCalc_io_procMode_T_8 @[FFTEngine.scala 402:29]
    node _fftCalc_io_state1c_T_2 = or(kernelState1c, procState1c) @[FFTEngine.scala 403:45]
    fftCalc_2.io.state1c <= _fftCalc_io_state1c_T_2 @[FFTEngine.scala 403:28]
    node _fftCalc_io_state2c_T_2 = or(kernelState2c, procState2c) @[FFTEngine.scala 404:45]
    fftCalc_2.io.state2c <= _fftCalc_io_state2c_T_2 @[FFTEngine.scala 404:28]
    node _writeDataTRPre3c_T_12 = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 407:64]
    node _writeDataTRPre3c_T_13 = not(fftCalc_2.io.dataOutTI3c) @[FFTEngine.scala 407:132]
    node _writeDataTRPre3c_T_14 = add(_writeDataTRPre3c_T_13, UInt<1>("h1")) @[FFTEngine.scala 407:156]
    node _writeDataTRPre3c_T_15 = tail(_writeDataTRPre3c_T_14, 1) @[FFTEngine.scala 407:156]
    node _writeDataTRPre3c_T_16 = mux(isFFT, fftCalc_2.io.dataOutTI3c, _writeDataTRPre3c_T_15) @[FFTEngine.scala 407:100]
    node _writeDataTRPre3c_T_17 = mux(_writeDataTRPre3c_T_12, fftCalc_2.io.dataOutTR3c, _writeDataTRPre3c_T_16) @[FFTEngine.scala 407:52]
    node writeDataTRPre3c_2 = mux(procState3c, _writeDataTRPre3c_T_17, fftCalc_2.io.dataOutTR3c) @[FFTEngine.scala 407:35]
    node _writeDataTIPre3c_T_18 = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 408:64]
    node _writeDataTIPre3c_T_19 = not(fftCalc_2.io.dataOutTI3c) @[FFTEngine.scala 408:73]
    node _writeDataTIPre3c_T_20 = add(_writeDataTIPre3c_T_19, UInt<1>("h1")) @[FFTEngine.scala 408:97]
    node _writeDataTIPre3c_T_21 = tail(_writeDataTIPre3c_T_20, 1) @[FFTEngine.scala 408:97]
    node _writeDataTIPre3c_T_22 = not(fftCalc_2.io.dataOutTR3c) @[FFTEngine.scala 408:115]
    node _writeDataTIPre3c_T_23 = add(_writeDataTIPre3c_T_22, UInt<1>("h1")) @[FFTEngine.scala 408:139]
    node _writeDataTIPre3c_T_24 = tail(_writeDataTIPre3c_T_23, 1) @[FFTEngine.scala 408:139]
    node _writeDataTIPre3c_T_25 = mux(isFFT, _writeDataTIPre3c_T_24, fftCalc_2.io.dataOutTR3c) @[FFTEngine.scala 408:107]
    node _writeDataTIPre3c_T_26 = mux(_writeDataTIPre3c_T_18, _writeDataTIPre3c_T_21, _writeDataTIPre3c_T_25) @[FFTEngine.scala 408:52]
    node writeDataTIPre3c_2 = mux(procState3c, _writeDataTIPre3c_T_26, fftCalc_2.io.dataOutTI3c) @[FFTEngine.scala 408:35]
    wire addrSBankSel3c_2 : UInt @[FFTEngine.scala 410:34]
    wire addrTBankSel3c_2 : UInt @[FFTEngine.scala 411:34]
    when isFFT : @[FFTEngine.scala 413:21]
      node _addrSBankSel3c_T_10 = eq(phaseCount, UInt<3>("h6")) @[FFTEngine.scala 414:78]
      node _addrSBankSel3c_T_11 = and(kernelState3c, _addrSBankSel3c_T_10) @[FFTEngine.scala 414:64]
      node _addrSBankSel3c_T_12 = or(procState3c, _addrSBankSel3c_T_11) @[FFTEngine.scala 414:47]
      node _addrSBankSel3c_T_13 = mux(_addrSBankSel3c_T_12, addrSBankSelProc3c[2], addrSBankSelKernel3c[2]) @[FFTEngine.scala 414:34]
      addrSBankSel3c_2 <= _addrSBankSel3c_T_13 @[FFTEngine.scala 414:28]
      node _addrTBankSel3c_T_10 = eq(phaseCount, UInt<3>("h6")) @[FFTEngine.scala 415:78]
      node _addrTBankSel3c_T_11 = and(kernelState3c, _addrTBankSel3c_T_10) @[FFTEngine.scala 415:64]
      node _addrTBankSel3c_T_12 = or(procState3c, _addrTBankSel3c_T_11) @[FFTEngine.scala 415:47]
      node _addrTBankSel3c_T_13 = mux(_addrTBankSel3c_T_12, addrTBankSelProc3c[2], addrTBankSelKernel3c[2]) @[FFTEngine.scala 415:34]
      addrTBankSel3c_2 <= _addrTBankSel3c_T_13 @[FFTEngine.scala 415:28]
    else :
      node _addrSBankSel3c_T_14 = mux(procState3c, addrSBankSelProc3c[2], addrSBankSelKernel3c[2]) @[FFTEngine.scala 417:34]
      addrSBankSel3c_2 <= _addrSBankSel3c_T_14 @[FFTEngine.scala 417:28]
      node _addrTBankSel3c_T_14 = mux(procState3c, addrTBankSelProc3c[2], addrTBankSelKernel3c[2]) @[FFTEngine.scala 418:34]
      addrTBankSel3c_2 <= _addrTBankSel3c_T_14 @[FFTEngine.scala 418:28]
    node _T_158 = eq(procState, UInt<1>("h0")) @[FFTEngine.scala 438:14]
    when _T_158 : @[FFTEngine.scala 438:26]
      node _T_159 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 439:28]
      when _T_159 : @[FFTEngine.scala 439:37]
        node _T_160 = or(addrTBankSel_2, UInt<3>("h0"))
        node _T_161 = bits(_T_160, 2, 0)
        node _io_addrSram0Bank_T_6 = bits(addrT[2], 3, 0) @[FFTEngine.scala 440:59]
        io.addrSram0Bank[_T_161] <= _io_addrSram0Bank_T_6 @[FFTEngine.scala 440:48]
        node _T_162 = or(addrSBankSel_2, UInt<3>("h0"))
        node _T_163 = bits(_T_162, 2, 0)
        node _io_addrSram0Bank_T_7 = bits(addrS[2], 3, 0) @[FFTEngine.scala 441:59]
        io.addrSram0Bank[_T_163] <= _io_addrSram0Bank_T_7 @[FFTEngine.scala 441:48]
      else :
        node _T_164 = or(addrTBankSel_2, UInt<3>("h0"))
        node _T_165 = bits(_T_164, 2, 0)
        node _io_addrSram1Bank_T_6 = bits(addrT[2], 3, 0) @[FFTEngine.scala 443:59]
        io.addrSram1Bank[_T_165] <= _io_addrSram1Bank_T_6 @[FFTEngine.scala 443:48]
        node _T_166 = or(addrSBankSel_2, UInt<3>("h0"))
        node _T_167 = bits(_T_166, 2, 0)
        node _io_addrSram1Bank_T_7 = bits(addrS[2], 3, 0) @[FFTEngine.scala 444:59]
        io.addrSram1Bank[_T_167] <= _io_addrSram1Bank_T_7 @[FFTEngine.scala 444:48]
    else :
      skip
    node _T_168 = eq(procState3c, UInt<1>("h0")) @[FFTEngine.scala 458:14]
    when _T_168 : @[FFTEngine.scala 458:28]
      node _T_169 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 459:28]
      when _T_169 : @[FFTEngine.scala 459:37]
        node _T_170 = or(addrTBankSel3c_2, UInt<3>("h0"))
        node _T_171 = bits(_T_170, 2, 0)
        io.addrSram1Bank[_T_171] <= addrT3c_2 @[FFTEngine.scala 460:50]
        node _T_172 = or(addrSBankSel3c_2, UInt<3>("h0"))
        node _T_173 = bits(_T_172, 2, 0)
        io.addrSram1Bank[_T_173] <= addrS3c_2 @[FFTEngine.scala 461:50]
      else :
        node _T_174 = or(addrTBankSel3c_2, UInt<3>("h0"))
        node _T_175 = bits(_T_174, 2, 0)
        io.addrSram0Bank[_T_175] <= addrT3c_2 @[FFTEngine.scala 463:50]
        node _T_176 = or(addrSBankSel3c_2, UInt<3>("h0"))
        node _T_177 = bits(_T_176, 2, 0)
        io.addrSram0Bank[_T_177] <= addrS3c_2 @[FFTEngine.scala 464:50]
    else :
      skip
    wire writeDataS3c_2 : UInt @[FFTEngine.scala 479:32]
    wire writeDataT3c_2 : UInt @[FFTEngine.scala 480:32]
    when sameAddr3c : @[FFTEngine.scala 482:26]
      node _T_178 = eq(phaseCount, UInt<1>("h0")) @[FFTEngine.scala 483:38]
      node _T_179 = and(isFFT, _T_178) @[FFTEngine.scala 483:24]
      when _T_179 : @[FFTEngine.scala 483:47]
        node _writeDataS3c_T_20 = cat(writeDataTRPre3c_2, fftCalc_2.io.dataOutSR3c) @[Cat.scala 33:92]
        writeDataS3c_2 <= _writeDataS3c_T_20 @[FFTEngine.scala 484:30]
        node _writeDataT3c_T_20 = cat(writeDataTRPre3c_2, fftCalc_2.io.dataOutSR3c) @[Cat.scala 33:92]
        writeDataT3c_2 <= _writeDataT3c_T_20 @[FFTEngine.scala 485:30]
      else :
        node _T_180 = eq(isFFT, UInt<1>("h0")) @[FFTEngine.scala 486:25]
        node _T_181 = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 486:46]
        node _T_182 = and(_T_180, _T_181) @[FFTEngine.scala 486:32]
        when _T_182 : @[FFTEngine.scala 486:55]
          node _writeDataS3c_T_21 = bits(writeDataTRPre3c_2, 15, 15) @[FFTEngine.scala 487:57]
          node _writeDataS3c_T_22 = bits(writeDataTRPre3c_2, 15, 1) @[FFTEngine.scala 487:93]
          node _writeDataS3c_T_23 = cat(_writeDataS3c_T_21, _writeDataS3c_T_22) @[Cat.scala 33:92]
          node _writeDataS3c_T_24 = bits(fftCalc_2.io.dataOutSR3c, 15, 15) @[FFTEngine.scala 487:137]
          node _writeDataS3c_T_25 = bits(fftCalc_2.io.dataOutSR3c, 15, 1) @[FFTEngine.scala 487:173]
          node _writeDataS3c_T_26 = cat(_writeDataS3c_T_24, _writeDataS3c_T_25) @[Cat.scala 33:92]
          node _writeDataS3c_T_27 = cat(_writeDataS3c_T_23, _writeDataS3c_T_26) @[Cat.scala 33:92]
          writeDataS3c_2 <= _writeDataS3c_T_27 @[FFTEngine.scala 487:30]
          node _writeDataT3c_T_21 = bits(writeDataTRPre3c_2, 15, 15) @[FFTEngine.scala 488:57]
          node _writeDataT3c_T_22 = bits(writeDataTRPre3c_2, 15, 1) @[FFTEngine.scala 488:93]
          node _writeDataT3c_T_23 = cat(_writeDataT3c_T_21, _writeDataT3c_T_22) @[Cat.scala 33:92]
          node _writeDataT3c_T_24 = bits(fftCalc_2.io.dataOutSR3c, 15, 15) @[FFTEngine.scala 488:137]
          node _writeDataT3c_T_25 = bits(fftCalc_2.io.dataOutSR3c, 15, 1) @[FFTEngine.scala 488:173]
          node _writeDataT3c_T_26 = cat(_writeDataT3c_T_24, _writeDataT3c_T_25) @[Cat.scala 33:92]
          node _writeDataT3c_T_27 = cat(_writeDataT3c_T_23, _writeDataT3c_T_26) @[Cat.scala 33:92]
          writeDataT3c_2 <= _writeDataT3c_T_27 @[FFTEngine.scala 488:30]
        else :
          node _writeDataS3c_T_28 = cat(fftCalc_2.io.dataOutSI3c, fftCalc_2.io.dataOutSR3c) @[Cat.scala 33:92]
          writeDataS3c_2 <= _writeDataS3c_T_28 @[FFTEngine.scala 490:30]
          node _writeDataT3c_T_28 = cat(writeDataTIPre3c_2, writeDataTRPre3c_2) @[Cat.scala 33:92]
          writeDataT3c_2 <= _writeDataT3c_T_28 @[FFTEngine.scala 491:30]
    else :
      node _writeDataS3c_T_29 = cat(fftCalc_2.io.dataOutSI3c, fftCalc_2.io.dataOutSR3c) @[Cat.scala 33:92]
      writeDataS3c_2 <= _writeDataS3c_T_29 @[FFTEngine.scala 494:26]
      node _writeDataT3c_T_29 = cat(writeDataTIPre3c_2, writeDataTRPre3c_2) @[Cat.scala 33:92]
      writeDataT3c_2 <= _writeDataT3c_T_29 @[FFTEngine.scala 495:26]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_183 = eq(UInt<1>("h0"), addrSBankSel3c_2) @[FFTEngine.scala 510:26]
      when _T_183 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[0] <= writeDataS3c_2 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[0] <= writeDataS3c_2 @[FFTEngine.scala 512:46]
      else :
        node _T_184 = eq(UInt<1>("h0"), addrTBankSel3c_2) @[FFTEngine.scala 513:33]
        when _T_184 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[0] <= writeDataT3c_2 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[0] <= writeDataT3c_2 @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_185 = eq(UInt<1>("h1"), addrSBankSel3c_2) @[FFTEngine.scala 510:26]
      when _T_185 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[1] <= writeDataS3c_2 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[1] <= writeDataS3c_2 @[FFTEngine.scala 512:46]
      else :
        node _T_186 = eq(UInt<1>("h1"), addrTBankSel3c_2) @[FFTEngine.scala 513:33]
        when _T_186 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[1] <= writeDataT3c_2 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[1] <= writeDataT3c_2 @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_187 = eq(UInt<2>("h2"), addrSBankSel3c_2) @[FFTEngine.scala 510:26]
      when _T_187 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[2] <= writeDataS3c_2 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[2] <= writeDataS3c_2 @[FFTEngine.scala 512:46]
      else :
        node _T_188 = eq(UInt<2>("h2"), addrTBankSel3c_2) @[FFTEngine.scala 513:33]
        when _T_188 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[2] <= writeDataT3c_2 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[2] <= writeDataT3c_2 @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_189 = eq(UInt<2>("h3"), addrSBankSel3c_2) @[FFTEngine.scala 510:26]
      when _T_189 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[3] <= writeDataS3c_2 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[3] <= writeDataS3c_2 @[FFTEngine.scala 512:46]
      else :
        node _T_190 = eq(UInt<2>("h3"), addrTBankSel3c_2) @[FFTEngine.scala 513:33]
        when _T_190 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[3] <= writeDataT3c_2 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[3] <= writeDataT3c_2 @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_191 = eq(UInt<3>("h4"), addrSBankSel3c_2) @[FFTEngine.scala 510:26]
      when _T_191 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[4] <= writeDataS3c_2 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[4] <= writeDataS3c_2 @[FFTEngine.scala 512:46]
      else :
        node _T_192 = eq(UInt<3>("h4"), addrTBankSel3c_2) @[FFTEngine.scala 513:33]
        when _T_192 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[4] <= writeDataT3c_2 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[4] <= writeDataT3c_2 @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_193 = eq(UInt<3>("h5"), addrSBankSel3c_2) @[FFTEngine.scala 510:26]
      when _T_193 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[5] <= writeDataS3c_2 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[5] <= writeDataS3c_2 @[FFTEngine.scala 512:46]
      else :
        node _T_194 = eq(UInt<3>("h5"), addrTBankSel3c_2) @[FFTEngine.scala 513:33]
        when _T_194 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[5] <= writeDataT3c_2 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[5] <= writeDataT3c_2 @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_195 = eq(UInt<3>("h6"), addrSBankSel3c_2) @[FFTEngine.scala 510:26]
      when _T_195 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[6] <= writeDataS3c_2 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[6] <= writeDataS3c_2 @[FFTEngine.scala 512:46]
      else :
        node _T_196 = eq(UInt<3>("h6"), addrTBankSel3c_2) @[FFTEngine.scala 513:33]
        when _T_196 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[6] <= writeDataT3c_2 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[6] <= writeDataT3c_2 @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_197 = eq(UInt<3>("h7"), addrSBankSel3c_2) @[FFTEngine.scala 510:26]
      when _T_197 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[7] <= writeDataS3c_2 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[7] <= writeDataS3c_2 @[FFTEngine.scala 512:46]
      else :
        node _T_198 = eq(UInt<3>("h7"), addrTBankSel3c_2) @[FFTEngine.scala 513:33]
        when _T_198 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[7] <= writeDataT3c_2 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[7] <= writeDataT3c_2 @[FFTEngine.scala 515:46]
    node _addrS1c_T_3 = bits(addrS[3], 3, 0) @[FFTEngine.scala 364:45]
    reg addrS1c_3 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS1c_3 <= _addrS1c_T_3 @[Reg.scala 36:22]
    reg addrS2c_3 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS2c_3 <= addrS1c_3 @[Reg.scala 36:22]
    reg addrS3c_3 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS3c_3 <= addrS2c_3 @[Reg.scala 36:22]
    node _addrT1c_T_3 = bits(addrT[3], 3, 0) @[FFTEngine.scala 368:45]
    reg addrT1c_3 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT1c_3 <= _addrT1c_T_3 @[Reg.scala 36:22]
    reg addrT2c_3 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT2c_3 <= addrT1c_3 @[Reg.scala 36:22]
    reg addrT3c_3 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT3c_3 <= addrT2c_3 @[Reg.scala 36:22]
    wire addrSBankSel_3 : UInt @[FFTEngine.scala 372:32]
    wire addrTBankSel_3 : UInt @[FFTEngine.scala 373:32]
    addrSBankSel_3 <= addrSBankSelKernel[3] @[FFTEngine.scala 379:26]
    addrTBankSel_3 <= addrTBankSelKernel[3] @[FFTEngine.scala 380:26]
    when isFFT : @[FFTEngine.scala 383:21]
      node _addrSBankSel_T_16 = mux(procState, addrSBankSelProc[3], addrSBankSelKernel[3]) @[FFTEngine.scala 384:32]
      addrSBankSel_3 <= _addrSBankSel_T_16 @[FFTEngine.scala 384:26]
      node _addrTBankSel_T_16 = mux(procState, addrTBankSelProc[3], addrTBankSelKernel[3]) @[FFTEngine.scala 385:32]
      addrTBankSel_3 <= _addrTBankSel_T_16 @[FFTEngine.scala 385:26]
    else :
      node _addrSBankSel_T_17 = eq(phaseCount, UInt<1>("h0")) @[FFTEngine.scala 387:72]
      node _addrSBankSel_T_18 = and(kernelState, _addrSBankSel_T_17) @[FFTEngine.scala 387:58]
      node _addrSBankSel_T_19 = or(procState, _addrSBankSel_T_18) @[FFTEngine.scala 387:43]
      node _addrSBankSel_T_20 = mux(_addrSBankSel_T_19, addrSBankSelProc[3], addrSBankSelKernel[3]) @[FFTEngine.scala 387:32]
      addrSBankSel_3 <= _addrSBankSel_T_20 @[FFTEngine.scala 387:26]
      node _addrTBankSel_T_17 = eq(phaseCount, UInt<1>("h0")) @[FFTEngine.scala 388:72]
      node _addrTBankSel_T_18 = and(kernelState, _addrTBankSel_T_17) @[FFTEngine.scala 388:58]
      node _addrTBankSel_T_19 = or(procState, _addrTBankSel_T_18) @[FFTEngine.scala 388:43]
      node _addrTBankSel_T_20 = mux(_addrTBankSel_T_19, addrTBankSelProc[3], addrTBankSelKernel[3]) @[FFTEngine.scala 388:32]
      addrTBankSel_3 <= _addrTBankSel_T_20 @[FFTEngine.scala 388:26]
    reg addrSBankSel1c_3 : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSel1c_3 <= addrSBankSel_3 @[Reg.scala 36:22]
    reg addrTBankSel1c_3 : UInt, clock with :
      reset => (reset, UInt<1>("h1")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSel1c_3 <= addrTBankSel_3 @[Reg.scala 36:22]
    inst fftCalc_3 of FFT3PipelineCalc_3 @[FFTEngine.scala 394:29]
    fftCalc_3.clock <= clock
    fftCalc_3.reset <= reset
    node _fftCalc_io_dataInSR_T_6 = or(addrSBankSel1c_3, UInt<3>("h0"))
    node _fftCalc_io_dataInSR_T_7 = bits(_fftCalc_io_dataInSR_T_6, 2, 0)
    fftCalc_3.io.dataInSR <= dataInRPre[_fftCalc_io_dataInSR_T_7] @[FFTEngine.scala 395:29]
    node _fftCalc_io_dataInSI_T_15 = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 396:61]
    node _fftCalc_io_dataInSI_T_16 = and(sameAddr1c, _fftCalc_io_dataInSI_T_15) @[FFTEngine.scala 396:47]
    node _fftCalc_io_dataInSI_T_17 = or(addrSBankSel1c_3, UInt<3>("h0"))
    node _fftCalc_io_dataInSI_T_18 = bits(_fftCalc_io_dataInSI_T_17, 2, 0)
    node _fftCalc_io_dataInSI_T_19 = mux(_fftCalc_io_dataInSI_T_16, UInt<1>("h0"), dataInIPre[_fftCalc_io_dataInSI_T_18]) @[FFTEngine.scala 396:35]
    fftCalc_3.io.dataInSI <= _fftCalc_io_dataInSI_T_19 @[FFTEngine.scala 396:29]
    node _fftCalc_io_dataInTR_T_21 = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 397:61]
    node _fftCalc_io_dataInTR_T_22 = and(sameAddr1c, _fftCalc_io_dataInTR_T_21) @[FFTEngine.scala 397:47]
    node _fftCalc_io_dataInTR_T_23 = or(addrTBankSel1c_3, UInt<3>("h0"))
    node _fftCalc_io_dataInTR_T_24 = bits(_fftCalc_io_dataInTR_T_23, 2, 0)
    node _fftCalc_io_dataInTR_T_25 = or(addrTBankSel1c_3, UInt<3>("h0"))
    node _fftCalc_io_dataInTR_T_26 = bits(_fftCalc_io_dataInTR_T_25, 2, 0)
    node _fftCalc_io_dataInTR_T_27 = mux(_fftCalc_io_dataInTR_T_22, dataInIPre[_fftCalc_io_dataInTR_T_24], dataInRPre[_fftCalc_io_dataInTR_T_26]) @[FFTEngine.scala 397:35]
    fftCalc_3.io.dataInTR <= _fftCalc_io_dataInTR_T_27 @[FFTEngine.scala 397:29]
    node _fftCalc_io_dataInTI_T_15 = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 398:61]
    node _fftCalc_io_dataInTI_T_16 = and(sameAddr1c, _fftCalc_io_dataInTI_T_15) @[FFTEngine.scala 398:47]
    node _fftCalc_io_dataInTI_T_17 = or(addrTBankSel1c_3, UInt<3>("h0"))
    node _fftCalc_io_dataInTI_T_18 = bits(_fftCalc_io_dataInTI_T_17, 2, 0)
    node _fftCalc_io_dataInTI_T_19 = mux(_fftCalc_io_dataInTI_T_16, UInt<1>("h0"), dataInIPre[_fftCalc_io_dataInTI_T_18]) @[FFTEngine.scala 398:35]
    fftCalc_3.io.dataInTI <= _fftCalc_io_dataInTI_T_19 @[FFTEngine.scala 398:29]
    node _fftCalc_io_nk_T_12 = bits(addrSProc, 6, 0) @[FFTEngine.scala 399:51]
    node _fftCalc_io_nk_T_13 = bits(nk[3], 5, 0) @[FFTEngine.scala 399:80]
    node _fftCalc_io_nk_T_14 = cat(_fftCalc_io_nk_T_13, UInt<1>("h0")) @[Cat.scala 33:92]
    node _fftCalc_io_nk_T_15 = mux(procState, _fftCalc_io_nk_T_12, _fftCalc_io_nk_T_14) @[FFTEngine.scala 399:29]
    fftCalc_3.io.nk <= _fftCalc_io_nk_T_15 @[FFTEngine.scala 399:23]
    node _fftCalc_io_rShiftSym_T_6 = bits(phaseCount, 0, 0) @[FFTEngine.scala 400:90]
    node _fftCalc_io_rShiftSym_T_7 = mux(kernelState1c, io.fftRShiftP0[phaseCount], _fftCalc_io_rShiftSym_T_6) @[FFTEngine.scala 400:36]
    fftCalc_3.io.rShiftSym <= _fftCalc_io_rShiftSym_T_7 @[FFTEngine.scala 400:30]
    fftCalc_3.io.isFFT <= isFFT @[FFTEngine.scala 401:26]
    node _fftCalc_io_procMode_T_9 = bits(phaseCount, 0, 0) @[FFTEngine.scala 402:44]
    node _fftCalc_io_procMode_T_10 = not(_fftCalc_io_procMode_T_9) @[FFTEngine.scala 402:33]
    node _fftCalc_io_procMode_T_11 = and(_fftCalc_io_procMode_T_10, procState2c) @[FFTEngine.scala 402:48]
    fftCalc_3.io.procMode <= _fftCalc_io_procMode_T_11 @[FFTEngine.scala 402:29]
    node _fftCalc_io_state1c_T_3 = or(kernelState1c, procState1c) @[FFTEngine.scala 403:45]
    fftCalc_3.io.state1c <= _fftCalc_io_state1c_T_3 @[FFTEngine.scala 403:28]
    node _fftCalc_io_state2c_T_3 = or(kernelState2c, procState2c) @[FFTEngine.scala 404:45]
    fftCalc_3.io.state2c <= _fftCalc_io_state2c_T_3 @[FFTEngine.scala 404:28]
    node _writeDataTRPre3c_T_18 = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 407:64]
    node _writeDataTRPre3c_T_19 = not(fftCalc_3.io.dataOutTI3c) @[FFTEngine.scala 407:132]
    node _writeDataTRPre3c_T_20 = add(_writeDataTRPre3c_T_19, UInt<1>("h1")) @[FFTEngine.scala 407:156]
    node _writeDataTRPre3c_T_21 = tail(_writeDataTRPre3c_T_20, 1) @[FFTEngine.scala 407:156]
    node _writeDataTRPre3c_T_22 = mux(isFFT, fftCalc_3.io.dataOutTI3c, _writeDataTRPre3c_T_21) @[FFTEngine.scala 407:100]
    node _writeDataTRPre3c_T_23 = mux(_writeDataTRPre3c_T_18, fftCalc_3.io.dataOutTR3c, _writeDataTRPre3c_T_22) @[FFTEngine.scala 407:52]
    node writeDataTRPre3c_3 = mux(procState3c, _writeDataTRPre3c_T_23, fftCalc_3.io.dataOutTR3c) @[FFTEngine.scala 407:35]
    node _writeDataTIPre3c_T_27 = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 408:64]
    node _writeDataTIPre3c_T_28 = not(fftCalc_3.io.dataOutTI3c) @[FFTEngine.scala 408:73]
    node _writeDataTIPre3c_T_29 = add(_writeDataTIPre3c_T_28, UInt<1>("h1")) @[FFTEngine.scala 408:97]
    node _writeDataTIPre3c_T_30 = tail(_writeDataTIPre3c_T_29, 1) @[FFTEngine.scala 408:97]
    node _writeDataTIPre3c_T_31 = not(fftCalc_3.io.dataOutTR3c) @[FFTEngine.scala 408:115]
    node _writeDataTIPre3c_T_32 = add(_writeDataTIPre3c_T_31, UInt<1>("h1")) @[FFTEngine.scala 408:139]
    node _writeDataTIPre3c_T_33 = tail(_writeDataTIPre3c_T_32, 1) @[FFTEngine.scala 408:139]
    node _writeDataTIPre3c_T_34 = mux(isFFT, _writeDataTIPre3c_T_33, fftCalc_3.io.dataOutTR3c) @[FFTEngine.scala 408:107]
    node _writeDataTIPre3c_T_35 = mux(_writeDataTIPre3c_T_27, _writeDataTIPre3c_T_30, _writeDataTIPre3c_T_34) @[FFTEngine.scala 408:52]
    node writeDataTIPre3c_3 = mux(procState3c, _writeDataTIPre3c_T_35, fftCalc_3.io.dataOutTI3c) @[FFTEngine.scala 408:35]
    wire addrSBankSel3c_3 : UInt @[FFTEngine.scala 410:34]
    wire addrTBankSel3c_3 : UInt @[FFTEngine.scala 411:34]
    when isFFT : @[FFTEngine.scala 413:21]
      node _addrSBankSel3c_T_15 = eq(phaseCount, UInt<3>("h6")) @[FFTEngine.scala 414:78]
      node _addrSBankSel3c_T_16 = and(kernelState3c, _addrSBankSel3c_T_15) @[FFTEngine.scala 414:64]
      node _addrSBankSel3c_T_17 = or(procState3c, _addrSBankSel3c_T_16) @[FFTEngine.scala 414:47]
      node _addrSBankSel3c_T_18 = mux(_addrSBankSel3c_T_17, addrSBankSelProc3c[3], addrSBankSelKernel3c[3]) @[FFTEngine.scala 414:34]
      addrSBankSel3c_3 <= _addrSBankSel3c_T_18 @[FFTEngine.scala 414:28]
      node _addrTBankSel3c_T_15 = eq(phaseCount, UInt<3>("h6")) @[FFTEngine.scala 415:78]
      node _addrTBankSel3c_T_16 = and(kernelState3c, _addrTBankSel3c_T_15) @[FFTEngine.scala 415:64]
      node _addrTBankSel3c_T_17 = or(procState3c, _addrTBankSel3c_T_16) @[FFTEngine.scala 415:47]
      node _addrTBankSel3c_T_18 = mux(_addrTBankSel3c_T_17, addrTBankSelProc3c[3], addrTBankSelKernel3c[3]) @[FFTEngine.scala 415:34]
      addrTBankSel3c_3 <= _addrTBankSel3c_T_18 @[FFTEngine.scala 415:28]
    else :
      node _addrSBankSel3c_T_19 = mux(procState3c, addrSBankSelProc3c[3], addrSBankSelKernel3c[3]) @[FFTEngine.scala 417:34]
      addrSBankSel3c_3 <= _addrSBankSel3c_T_19 @[FFTEngine.scala 417:28]
      node _addrTBankSel3c_T_19 = mux(procState3c, addrTBankSelProc3c[3], addrTBankSelKernel3c[3]) @[FFTEngine.scala 418:34]
      addrTBankSel3c_3 <= _addrTBankSel3c_T_19 @[FFTEngine.scala 418:28]
    node _T_199 = eq(procState, UInt<1>("h0")) @[FFTEngine.scala 438:14]
    when _T_199 : @[FFTEngine.scala 438:26]
      node _T_200 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 439:28]
      when _T_200 : @[FFTEngine.scala 439:37]
        node _T_201 = or(addrTBankSel_3, UInt<3>("h0"))
        node _T_202 = bits(_T_201, 2, 0)
        node _io_addrSram0Bank_T_8 = bits(addrT[3], 3, 0) @[FFTEngine.scala 440:59]
        io.addrSram0Bank[_T_202] <= _io_addrSram0Bank_T_8 @[FFTEngine.scala 440:48]
        node _T_203 = or(addrSBankSel_3, UInt<3>("h0"))
        node _T_204 = bits(_T_203, 2, 0)
        node _io_addrSram0Bank_T_9 = bits(addrS[3], 3, 0) @[FFTEngine.scala 441:59]
        io.addrSram0Bank[_T_204] <= _io_addrSram0Bank_T_9 @[FFTEngine.scala 441:48]
      else :
        node _T_205 = or(addrTBankSel_3, UInt<3>("h0"))
        node _T_206 = bits(_T_205, 2, 0)
        node _io_addrSram1Bank_T_8 = bits(addrT[3], 3, 0) @[FFTEngine.scala 443:59]
        io.addrSram1Bank[_T_206] <= _io_addrSram1Bank_T_8 @[FFTEngine.scala 443:48]
        node _T_207 = or(addrSBankSel_3, UInt<3>("h0"))
        node _T_208 = bits(_T_207, 2, 0)
        node _io_addrSram1Bank_T_9 = bits(addrS[3], 3, 0) @[FFTEngine.scala 444:59]
        io.addrSram1Bank[_T_208] <= _io_addrSram1Bank_T_9 @[FFTEngine.scala 444:48]
    else :
      skip
    node _T_209 = eq(procState3c, UInt<1>("h0")) @[FFTEngine.scala 458:14]
    when _T_209 : @[FFTEngine.scala 458:28]
      node _T_210 = eq(srcBuffer, UInt<1>("h0")) @[FFTEngine.scala 459:28]
      when _T_210 : @[FFTEngine.scala 459:37]
        node _T_211 = or(addrTBankSel3c_3, UInt<3>("h0"))
        node _T_212 = bits(_T_211, 2, 0)
        io.addrSram1Bank[_T_212] <= addrT3c_3 @[FFTEngine.scala 460:50]
        node _T_213 = or(addrSBankSel3c_3, UInt<3>("h0"))
        node _T_214 = bits(_T_213, 2, 0)
        io.addrSram1Bank[_T_214] <= addrS3c_3 @[FFTEngine.scala 461:50]
      else :
        node _T_215 = or(addrTBankSel3c_3, UInt<3>("h0"))
        node _T_216 = bits(_T_215, 2, 0)
        io.addrSram0Bank[_T_216] <= addrT3c_3 @[FFTEngine.scala 463:50]
        node _T_217 = or(addrSBankSel3c_3, UInt<3>("h0"))
        node _T_218 = bits(_T_217, 2, 0)
        io.addrSram0Bank[_T_218] <= addrS3c_3 @[FFTEngine.scala 464:50]
    else :
      skip
    wire writeDataS3c_3 : UInt @[FFTEngine.scala 479:32]
    wire writeDataT3c_3 : UInt @[FFTEngine.scala 480:32]
    when sameAddr3c : @[FFTEngine.scala 482:26]
      node _T_219 = eq(phaseCount, UInt<1>("h0")) @[FFTEngine.scala 483:38]
      node _T_220 = and(isFFT, _T_219) @[FFTEngine.scala 483:24]
      when _T_220 : @[FFTEngine.scala 483:47]
        node _writeDataS3c_T_30 = cat(writeDataTRPre3c_3, fftCalc_3.io.dataOutSR3c) @[Cat.scala 33:92]
        writeDataS3c_3 <= _writeDataS3c_T_30 @[FFTEngine.scala 484:30]
        node _writeDataT3c_T_30 = cat(writeDataTRPre3c_3, fftCalc_3.io.dataOutSR3c) @[Cat.scala 33:92]
        writeDataT3c_3 <= _writeDataT3c_T_30 @[FFTEngine.scala 485:30]
      else :
        node _T_221 = eq(isFFT, UInt<1>("h0")) @[FFTEngine.scala 486:25]
        node _T_222 = eq(phaseCount, UInt<1>("h1")) @[FFTEngine.scala 486:46]
        node _T_223 = and(_T_221, _T_222) @[FFTEngine.scala 486:32]
        when _T_223 : @[FFTEngine.scala 486:55]
          node _writeDataS3c_T_31 = bits(writeDataTRPre3c_3, 15, 15) @[FFTEngine.scala 487:57]
          node _writeDataS3c_T_32 = bits(writeDataTRPre3c_3, 15, 1) @[FFTEngine.scala 487:93]
          node _writeDataS3c_T_33 = cat(_writeDataS3c_T_31, _writeDataS3c_T_32) @[Cat.scala 33:92]
          node _writeDataS3c_T_34 = bits(fftCalc_3.io.dataOutSR3c, 15, 15) @[FFTEngine.scala 487:137]
          node _writeDataS3c_T_35 = bits(fftCalc_3.io.dataOutSR3c, 15, 1) @[FFTEngine.scala 487:173]
          node _writeDataS3c_T_36 = cat(_writeDataS3c_T_34, _writeDataS3c_T_35) @[Cat.scala 33:92]
          node _writeDataS3c_T_37 = cat(_writeDataS3c_T_33, _writeDataS3c_T_36) @[Cat.scala 33:92]
          writeDataS3c_3 <= _writeDataS3c_T_37 @[FFTEngine.scala 487:30]
          node _writeDataT3c_T_31 = bits(writeDataTRPre3c_3, 15, 15) @[FFTEngine.scala 488:57]
          node _writeDataT3c_T_32 = bits(writeDataTRPre3c_3, 15, 1) @[FFTEngine.scala 488:93]
          node _writeDataT3c_T_33 = cat(_writeDataT3c_T_31, _writeDataT3c_T_32) @[Cat.scala 33:92]
          node _writeDataT3c_T_34 = bits(fftCalc_3.io.dataOutSR3c, 15, 15) @[FFTEngine.scala 488:137]
          node _writeDataT3c_T_35 = bits(fftCalc_3.io.dataOutSR3c, 15, 1) @[FFTEngine.scala 488:173]
          node _writeDataT3c_T_36 = cat(_writeDataT3c_T_34, _writeDataT3c_T_35) @[Cat.scala 33:92]
          node _writeDataT3c_T_37 = cat(_writeDataT3c_T_33, _writeDataT3c_T_36) @[Cat.scala 33:92]
          writeDataT3c_3 <= _writeDataT3c_T_37 @[FFTEngine.scala 488:30]
        else :
          node _writeDataS3c_T_38 = cat(fftCalc_3.io.dataOutSI3c, fftCalc_3.io.dataOutSR3c) @[Cat.scala 33:92]
          writeDataS3c_3 <= _writeDataS3c_T_38 @[FFTEngine.scala 490:30]
          node _writeDataT3c_T_38 = cat(writeDataTIPre3c_3, writeDataTRPre3c_3) @[Cat.scala 33:92]
          writeDataT3c_3 <= _writeDataT3c_T_38 @[FFTEngine.scala 491:30]
    else :
      node _writeDataS3c_T_39 = cat(fftCalc_3.io.dataOutSI3c, fftCalc_3.io.dataOutSR3c) @[Cat.scala 33:92]
      writeDataS3c_3 <= _writeDataS3c_T_39 @[FFTEngine.scala 494:26]
      node _writeDataT3c_T_39 = cat(writeDataTIPre3c_3, writeDataTRPre3c_3) @[Cat.scala 33:92]
      writeDataT3c_3 <= _writeDataT3c_T_39 @[FFTEngine.scala 495:26]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_224 = eq(UInt<1>("h0"), addrSBankSel3c_3) @[FFTEngine.scala 510:26]
      when _T_224 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[0] <= writeDataS3c_3 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[0] <= writeDataS3c_3 @[FFTEngine.scala 512:46]
      else :
        node _T_225 = eq(UInt<1>("h0"), addrTBankSel3c_3) @[FFTEngine.scala 513:33]
        when _T_225 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[0] <= writeDataT3c_3 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[0] <= writeDataT3c_3 @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_226 = eq(UInt<1>("h1"), addrSBankSel3c_3) @[FFTEngine.scala 510:26]
      when _T_226 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[1] <= writeDataS3c_3 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[1] <= writeDataS3c_3 @[FFTEngine.scala 512:46]
      else :
        node _T_227 = eq(UInt<1>("h1"), addrTBankSel3c_3) @[FFTEngine.scala 513:33]
        when _T_227 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[1] <= writeDataT3c_3 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[1] <= writeDataT3c_3 @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_228 = eq(UInt<2>("h2"), addrSBankSel3c_3) @[FFTEngine.scala 510:26]
      when _T_228 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[2] <= writeDataS3c_3 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[2] <= writeDataS3c_3 @[FFTEngine.scala 512:46]
      else :
        node _T_229 = eq(UInt<2>("h2"), addrTBankSel3c_3) @[FFTEngine.scala 513:33]
        when _T_229 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[2] <= writeDataT3c_3 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[2] <= writeDataT3c_3 @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_230 = eq(UInt<2>("h3"), addrSBankSel3c_3) @[FFTEngine.scala 510:26]
      when _T_230 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[3] <= writeDataS3c_3 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[3] <= writeDataS3c_3 @[FFTEngine.scala 512:46]
      else :
        node _T_231 = eq(UInt<2>("h3"), addrTBankSel3c_3) @[FFTEngine.scala 513:33]
        when _T_231 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[3] <= writeDataT3c_3 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[3] <= writeDataT3c_3 @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_232 = eq(UInt<3>("h4"), addrSBankSel3c_3) @[FFTEngine.scala 510:26]
      when _T_232 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[4] <= writeDataS3c_3 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[4] <= writeDataS3c_3 @[FFTEngine.scala 512:46]
      else :
        node _T_233 = eq(UInt<3>("h4"), addrTBankSel3c_3) @[FFTEngine.scala 513:33]
        when _T_233 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[4] <= writeDataT3c_3 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[4] <= writeDataT3c_3 @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_234 = eq(UInt<3>("h5"), addrSBankSel3c_3) @[FFTEngine.scala 510:26]
      when _T_234 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[5] <= writeDataS3c_3 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[5] <= writeDataS3c_3 @[FFTEngine.scala 512:46]
      else :
        node _T_235 = eq(UInt<3>("h5"), addrTBankSel3c_3) @[FFTEngine.scala 513:33]
        when _T_235 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[5] <= writeDataT3c_3 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[5] <= writeDataT3c_3 @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_236 = eq(UInt<3>("h6"), addrSBankSel3c_3) @[FFTEngine.scala 510:26]
      when _T_236 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[6] <= writeDataS3c_3 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[6] <= writeDataS3c_3 @[FFTEngine.scala 512:46]
      else :
        node _T_237 = eq(UInt<3>("h6"), addrTBankSel3c_3) @[FFTEngine.scala 513:33]
        when _T_237 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[6] <= writeDataT3c_3 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[6] <= writeDataT3c_3 @[FFTEngine.scala 515:46]
    when procState3c : @[FFTEngine.scala 499:30]
      skip
    else :
      node _T_238 = eq(UInt<3>("h7"), addrSBankSel3c_3) @[FFTEngine.scala 510:26]
      when _T_238 : @[FFTEngine.scala 510:46]
        io.writeDataSram0Bank[7] <= writeDataS3c_3 @[FFTEngine.scala 511:46]
        io.writeDataSram1Bank[7] <= writeDataS3c_3 @[FFTEngine.scala 512:46]
      else :
        node _T_239 = eq(UInt<3>("h7"), addrTBankSel3c_3) @[FFTEngine.scala 513:33]
        when _T_239 : @[FFTEngine.scala 513:53]
          io.writeDataSram0Bank[7] <= writeDataT3c_3 @[FFTEngine.scala 514:46]
          io.writeDataSram1Bank[7] <= writeDataT3c_3 @[FFTEngine.scala 515:46]
    node donePre = eq(stateReg, UInt<3>("h7")) @[FFTEngine.scala 521:29]
    reg fftDoneReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[FFTEngine.scala 522:29]
    fftDoneReg <= donePre @[FFTEngine.scala 522:29]
    io.fftDone <= fftDoneReg @[FFTEngine.scala 523:16]

