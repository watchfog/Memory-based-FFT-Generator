circuit FFTDataProcess :
  module FFTTwiddle :
    output io : { flip nk : UInt, flip twiLutCaseIndex : UInt, wR : UInt, wI : UInt}

    wire twi_cos_tb1_p10 : UInt<12>[128] @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[0] <= UInt<12>("h400") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[1] <= UInt<12>("h400") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[2] <= UInt<12>("h3ff") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[3] <= UInt<12>("h3fd") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[4] <= UInt<12>("h3fb") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[5] <= UInt<12>("h3f8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[6] <= UInt<12>("h3f5") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[7] <= UInt<12>("h3f1") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[8] <= UInt<12>("h3ec") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[9] <= UInt<12>("h3e7") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[10] <= UInt<12>("h3e1") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[11] <= UInt<12>("h3db") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[12] <= UInt<12>("h3d4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[13] <= UInt<12>("h3cc") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[14] <= UInt<12>("h3c4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[15] <= UInt<12>("h3bb") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[16] <= UInt<12>("h3b2") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[17] <= UInt<12>("h3a8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[18] <= UInt<12>("h39e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[19] <= UInt<12>("h393") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[20] <= UInt<12>("h387") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[21] <= UInt<12>("h37b") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[22] <= UInt<12>("h36e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[23] <= UInt<12>("h361") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[24] <= UInt<12>("h353") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[25] <= UInt<12>("h345") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[26] <= UInt<12>("h336") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[27] <= UInt<12>("h327") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[28] <= UInt<12>("h318") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[29] <= UInt<12>("h307") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[30] <= UInt<12>("h2f7") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[31] <= UInt<12>("h2e6") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[32] <= UInt<12>("h2d4") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[33] <= UInt<12>("h2c2") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[34] <= UInt<12>("h2b0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[35] <= UInt<12>("h29d") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[36] <= UInt<12>("h28a") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[37] <= UInt<12>("h276") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[38] <= UInt<12>("h262") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[39] <= UInt<12>("h24e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[40] <= UInt<12>("h239") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[41] <= UInt<12>("h224") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[42] <= UInt<12>("h20e") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[43] <= UInt<12>("h1f9") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[44] <= UInt<12>("h1e3") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[45] <= UInt<12>("h1cc") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[46] <= UInt<12>("h1b6") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[47] <= UInt<12>("h19f") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[48] <= UInt<12>("h188") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[49] <= UInt<12>("h171") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[50] <= UInt<12>("h159") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[51] <= UInt<12>("h141") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[52] <= UInt<12>("h129") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[53] <= UInt<12>("h111") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[54] <= UInt<12>("hf9") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[55] <= UInt<12>("he0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[56] <= UInt<12>("hc8") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[57] <= UInt<12>("haf") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[58] <= UInt<12>("h96") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[59] <= UInt<12>("h7d") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[60] <= UInt<12>("h64") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[61] <= UInt<12>("h4b") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[62] <= UInt<12>("h32") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[63] <= UInt<12>("h19") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[64] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[65] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[66] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[67] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[68] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[69] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[70] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[71] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[72] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[73] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[74] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[75] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[76] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[77] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[78] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[79] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[80] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[81] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[82] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[83] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[84] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[85] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[86] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[87] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[88] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[89] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[90] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[91] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[92] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[93] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[94] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[95] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[96] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[97] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[98] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[99] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[100] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[101] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[102] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[103] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[104] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[105] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[106] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[107] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[108] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[109] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[110] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[111] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[112] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[113] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[114] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[115] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[116] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[117] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[118] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[119] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[120] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[121] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[122] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[123] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[124] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[125] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[126] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    twi_cos_tb1_p10[127] <= UInt<12>("h0") @[FFTTwiddle.scala 32:34]
    wire twi_sin_tb1_p10 : UInt<12>[128] @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[0] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[1] <= UInt<12>("h19") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[2] <= UInt<12>("h32") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[3] <= UInt<12>("h4b") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[4] <= UInt<12>("h64") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[5] <= UInt<12>("h7d") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[6] <= UInt<12>("h96") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[7] <= UInt<12>("haf") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[8] <= UInt<12>("hc8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[9] <= UInt<12>("he0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[10] <= UInt<12>("hf9") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[11] <= UInt<12>("h111") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[12] <= UInt<12>("h129") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[13] <= UInt<12>("h141") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[14] <= UInt<12>("h159") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[15] <= UInt<12>("h171") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[16] <= UInt<12>("h188") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[17] <= UInt<12>("h19f") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[18] <= UInt<12>("h1b6") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[19] <= UInt<12>("h1cc") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[20] <= UInt<12>("h1e3") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[21] <= UInt<12>("h1f9") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[22] <= UInt<12>("h20e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[23] <= UInt<12>("h224") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[24] <= UInt<12>("h239") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[25] <= UInt<12>("h24e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[26] <= UInt<12>("h262") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[27] <= UInt<12>("h276") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[28] <= UInt<12>("h28a") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[29] <= UInt<12>("h29d") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[30] <= UInt<12>("h2b0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[31] <= UInt<12>("h2c2") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[32] <= UInt<12>("h2d4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[33] <= UInt<12>("h2e6") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[34] <= UInt<12>("h2f7") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[35] <= UInt<12>("h307") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[36] <= UInt<12>("h318") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[37] <= UInt<12>("h327") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[38] <= UInt<12>("h336") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[39] <= UInt<12>("h345") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[40] <= UInt<12>("h353") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[41] <= UInt<12>("h361") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[42] <= UInt<12>("h36e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[43] <= UInt<12>("h37b") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[44] <= UInt<12>("h387") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[45] <= UInt<12>("h393") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[46] <= UInt<12>("h39e") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[47] <= UInt<12>("h3a8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[48] <= UInt<12>("h3b2") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[49] <= UInt<12>("h3bb") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[50] <= UInt<12>("h3c4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[51] <= UInt<12>("h3cc") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[52] <= UInt<12>("h3d4") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[53] <= UInt<12>("h3db") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[54] <= UInt<12>("h3e1") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[55] <= UInt<12>("h3e7") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[56] <= UInt<12>("h3ec") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[57] <= UInt<12>("h3f1") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[58] <= UInt<12>("h3f5") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[59] <= UInt<12>("h3f8") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[60] <= UInt<12>("h3fb") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[61] <= UInt<12>("h3fd") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[62] <= UInt<12>("h3ff") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[63] <= UInt<12>("h400") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[64] <= UInt<12>("h400") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[65] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[66] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[67] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[68] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[69] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[70] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[71] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[72] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[73] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[74] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[75] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[76] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[77] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[78] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[79] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[80] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[81] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[82] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[83] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[84] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[85] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[86] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[87] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[88] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[89] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[90] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[91] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[92] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[93] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[94] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[95] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[96] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[97] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[98] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[99] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[100] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[101] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[102] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[103] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[104] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[105] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[106] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[107] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[108] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[109] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[110] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[111] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[112] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[113] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[114] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[115] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[116] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[117] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[118] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[119] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[120] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[121] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[122] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[123] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[124] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[125] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[126] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    twi_sin_tb1_p10[127] <= UInt<12>("h0") @[FFTTwiddle.scala 33:34]
    node _idx_r_T = bits(io.nk, 6, 6) @[FFTTwiddle.scala 35:27]
    node _idx_r_T_1 = bits(io.nk, 5, 0) @[FFTTwiddle.scala 35:50]
    node _idx_r_T_2 = orr(_idx_r_T_1) @[FFTTwiddle.scala 35:73]
    node _idx_r_T_3 = and(_idx_r_T, _idx_r_T_2) @[FFTTwiddle.scala 35:43]
    node _idx_r_T_4 = not(io.nk) @[FFTTwiddle.scala 35:80]
    node _idx_r_T_5 = add(_idx_r_T_4, UInt<1>("h1")) @[FFTTwiddle.scala 35:87]
    node _idx_r_T_6 = tail(_idx_r_T_5, 1) @[FFTTwiddle.scala 35:87]
    node idx_r = mux(_idx_r_T_3, _idx_r_T_6, io.nk) @[FFTTwiddle.scala 35:20]
    node _lut_chg_sign_flag_r_T = bits(io.nk, 6, 6) @[FFTTwiddle.scala 37:36]
    node _lut_chg_sign_flag_r_T_1 = bits(io.nk, 5, 0) @[FFTTwiddle.scala 37:60]
    node _lut_chg_sign_flag_r_T_2 = orr(_lut_chg_sign_flag_r_T_1) @[FFTTwiddle.scala 37:83]
    node lut_chg_sign_flag_r = and(_lut_chg_sign_flag_r_T, _lut_chg_sign_flag_r_T_2) @[FFTTwiddle.scala 37:52]
    node _lut_w_r_T = or(idx_r, UInt<7>("h0"))
    node _lut_w_r_T_1 = bits(_lut_w_r_T, 6, 0)
    node idx_i = bits(idx_r, 6, 0) @[FFTTwiddle.scala 41:22]
    node _chg_sign_flag_r_T = eq(io.twiLutCaseIndex, UInt<2>("h2")) @[FFTTwiddle.scala 47:51]
    node _chg_sign_flag_r_T_1 = eq(lut_chg_sign_flag_r, UInt<1>("h0")) @[FFTTwiddle.scala 47:61]
    node chg_sign_flag_r = mux(_chg_sign_flag_r_T, _chg_sign_flag_r_T_1, lut_chg_sign_flag_r) @[FFTTwiddle.scala 47:30]
    node _chg_sign_flag_i_T = eq(io.twiLutCaseIndex, UInt<1>("h1")) @[FFTTwiddle.scala 48:51]
    node _chg_sign_flag_i_T_1 = eq(UInt<1>("h1"), UInt<1>("h0")) @[FFTTwiddle.scala 48:61]
    node chg_sign_flag_i = mux(_chg_sign_flag_i_T, _chg_sign_flag_i_T_1, UInt<1>("h1")) @[FFTTwiddle.scala 48:30]
    node _io_wR_T = not(twi_cos_tb1_p10[_lut_w_r_T_1]) @[FFTTwiddle.scala 50:36]
    node _io_wR_T_1 = add(_io_wR_T, UInt<1>("h1")) @[FFTTwiddle.scala 50:45]
    node _io_wR_T_2 = tail(_io_wR_T_1, 1) @[FFTTwiddle.scala 50:45]
    node _io_wR_T_3 = mux(chg_sign_flag_r, _io_wR_T_2, twi_cos_tb1_p10[_lut_w_r_T_1]) @[FFTTwiddle.scala 50:17]
    io.wR <= _io_wR_T_3 @[FFTTwiddle.scala 50:11]
    node _io_wI_T = not(twi_sin_tb1_p10[idx_i]) @[FFTTwiddle.scala 51:36]
    node _io_wI_T_1 = add(_io_wI_T, UInt<1>("h1")) @[FFTTwiddle.scala 51:45]
    node _io_wI_T_2 = tail(_io_wI_T_1, 1) @[FFTTwiddle.scala 51:45]
    node _io_wI_T_3 = mux(chg_sign_flag_i, _io_wI_T_2, twi_sin_tb1_p10[idx_i]) @[FFTTwiddle.scala 51:17]
    io.wI <= _io_wI_T_3 @[FFTTwiddle.scala 51:11]

  module FFTMultiply :
    output io : { flip a : UInt<18>, flip b : UInt<18>, flip tc : UInt<1>, product : UInt<36>}

    node _temp_a_T = bits(io.a, 17, 17) @[FFTMultiply.scala 14:26]
    node _temp_a_T_1 = not(io.a) @[FFTMultiply.scala 14:51]
    node _temp_a_T_2 = add(_temp_a_T_1, UInt<1>("h1")) @[FFTMultiply.scala 14:57]
    node _temp_a_T_3 = tail(_temp_a_T_2, 1) @[FFTMultiply.scala 14:57]
    node temp_a = mux(_temp_a_T, _temp_a_T_3, io.a) @[FFTMultiply.scala 14:21]
    node _temp_b_T = bits(io.b, 17, 17) @[FFTMultiply.scala 15:26]
    node _temp_b_T_1 = not(io.b) @[FFTMultiply.scala 15:51]
    node _temp_b_T_2 = add(_temp_b_T_1, UInt<1>("h1")) @[FFTMultiply.scala 15:57]
    node _temp_b_T_3 = tail(_temp_b_T_2, 1) @[FFTMultiply.scala 15:57]
    node temp_b = mux(_temp_b_T, _temp_b_T_3, io.b) @[FFTMultiply.scala 15:21]
    node long_temp1 = mul(temp_a, temp_b) @[FFTMultiply.scala 17:29]
    node _long_temp2_T = sub(long_temp1, UInt<1>("h1")) @[FFTMultiply.scala 18:35]
    node _long_temp2_T_1 = tail(_long_temp2_T, 1) @[FFTMultiply.scala 18:35]
    node long_temp2 = not(_long_temp2_T_1) @[FFTMultiply.scala 18:22]
    node _io_product_T = xor(io.a, io.a) @[FFTMultiply.scala 20:31]
    node _io_product_T_1 = xorr(_io_product_T) @[FFTMultiply.scala 20:39]
    node _io_product_T_2 = neq(_io_product_T_1, UInt<1>("h0")) @[FFTMultiply.scala 20:44]
    node _io_product_T_3 = xor(io.b, io.b) @[FFTMultiply.scala 20:67]
    node _io_product_T_4 = xorr(_io_product_T_3) @[FFTMultiply.scala 20:75]
    node _io_product_T_5 = neq(_io_product_T_4, UInt<1>("h0")) @[FFTMultiply.scala 20:80]
    node _io_product_T_6 = or(_io_product_T_2, _io_product_T_5) @[FFTMultiply.scala 20:57]
    node _io_product_T_7 = xor(io.tc, io.tc) @[FFTMultiply.scala 20:104]
    node _io_product_T_8 = xorr(_io_product_T_7) @[FFTMultiply.scala 20:113]
    node _io_product_T_9 = neq(_io_product_T_8, UInt<1>("h0")) @[FFTMultiply.scala 20:118]
    node _io_product_T_10 = or(_io_product_T_6, _io_product_T_9) @[FFTMultiply.scala 20:93]
    node _io_product_T_11 = mux(UInt<1>("h1"), UInt<36>("hfffffffff"), UInt<36>("h0")) @[Bitwise.scala 77:12]
    node _io_product_T_12 = bits(io.a, 17, 17) @[FFTMultiply.scala 20:194]
    node _io_product_T_13 = bits(io.b, 17, 17) @[FFTMultiply.scala 20:223]
    node _io_product_T_14 = xor(_io_product_T_12, _io_product_T_13) @[FFTMultiply.scala 20:217]
    node _io_product_T_15 = orr(long_temp1) @[FFTMultiply.scala 20:262]
    node _io_product_T_16 = and(_io_product_T_14, _io_product_T_15) @[FFTMultiply.scala 20:247]
    node _io_product_T_17 = cat(UInt<1>("h1"), long_temp2) @[Cat.scala 33:92]
    node _io_product_T_18 = cat(UInt<1>("h0"), long_temp1) @[Cat.scala 33:92]
    node _io_product_T_19 = mux(_io_product_T_16, _io_product_T_17, _io_product_T_18) @[FFTMultiply.scala 20:187]
    node _io_product_T_20 = mul(io.a, io.b) @[FFTMultiply.scala 20:329]
    node _io_product_T_21 = mux(io.tc, _io_product_T_19, _io_product_T_20) @[FFTMultiply.scala 20:176]
    node _io_product_T_22 = mux(_io_product_T_10, _io_product_T_11, _io_product_T_21) @[FFTMultiply.scala 20:22]
    io.product <= _io_product_T_22 @[FFTMultiply.scala 20:16]

  module FFT3PipelineCalc :
    input clock : Clock
    input reset : Reset
    output io : { flip dataInSR : UInt, flip dataInSI : UInt, flip dataInTR : UInt, flip dataInTI : UInt, dataOutSR3c : UInt, dataOutSI3c : UInt, dataOutTR3c : UInt, dataOutTI3c : UInt, flip nk : UInt, flip rShiftSym : UInt<1>, flip isFFT : UInt<1>, flip dataMode : UInt<1>, flip state1c : UInt<1>, flip state2c : UInt<1>}

    clock is invalid
    reset is invalid
    io is invalid
    node _dataInSRRnd_T = bits(io.dataInSR, 15, 15) @[FFT3PipelineCalc.scala 28:38]
    node _dataInSRRnd_T_1 = bits(io.dataInSR, 15, 1) @[FFT3PipelineCalc.scala 28:69]
    node _dataInSRRnd_T_2 = cat(_dataInSRRnd_T, _dataInSRRnd_T_1) @[Cat.scala 33:92]
    node _dataInSRRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInSRRnd_T_4 = bits(io.dataInSR, 0, 0) @[FFT3PipelineCalc.scala 28:138]
    node _dataInSRRnd_T_5 = cat(_dataInSRRnd_T_3, _dataInSRRnd_T_4) @[Cat.scala 33:92]
    node _dataInSRRnd_T_6 = add(_dataInSRRnd_T_2, _dataInSRRnd_T_5) @[FFT3PipelineCalc.scala 28:92]
    node dataInSRRnd = tail(_dataInSRRnd_T_6, 1) @[FFT3PipelineCalc.scala 28:92]
    node _dataInSIRnd_T = bits(io.dataInSI, 15, 15) @[FFT3PipelineCalc.scala 29:38]
    node _dataInSIRnd_T_1 = bits(io.dataInSI, 15, 1) @[FFT3PipelineCalc.scala 29:69]
    node _dataInSIRnd_T_2 = cat(_dataInSIRnd_T, _dataInSIRnd_T_1) @[Cat.scala 33:92]
    node _dataInSIRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInSIRnd_T_4 = bits(io.dataInSI, 0, 0) @[FFT3PipelineCalc.scala 29:138]
    node _dataInSIRnd_T_5 = cat(_dataInSIRnd_T_3, _dataInSIRnd_T_4) @[Cat.scala 33:92]
    node _dataInSIRnd_T_6 = add(_dataInSIRnd_T_2, _dataInSIRnd_T_5) @[FFT3PipelineCalc.scala 29:92]
    node dataInSIRnd = tail(_dataInSIRnd_T_6, 1) @[FFT3PipelineCalc.scala 29:92]
    node _dataInTRRnd_T = bits(io.dataInTR, 15, 15) @[FFT3PipelineCalc.scala 30:38]
    node _dataInTRRnd_T_1 = bits(io.dataInTR, 15, 1) @[FFT3PipelineCalc.scala 30:69]
    node _dataInTRRnd_T_2 = cat(_dataInTRRnd_T, _dataInTRRnd_T_1) @[Cat.scala 33:92]
    node _dataInTRRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInTRRnd_T_4 = bits(io.dataInTR, 0, 0) @[FFT3PipelineCalc.scala 30:138]
    node _dataInTRRnd_T_5 = cat(_dataInTRRnd_T_3, _dataInTRRnd_T_4) @[Cat.scala 33:92]
    node _dataInTRRnd_T_6 = add(_dataInTRRnd_T_2, _dataInTRRnd_T_5) @[FFT3PipelineCalc.scala 30:92]
    node dataInTRRnd = tail(_dataInTRRnd_T_6, 1) @[FFT3PipelineCalc.scala 30:92]
    node _dataInTIRnd_T = bits(io.dataInTI, 15, 15) @[FFT3PipelineCalc.scala 31:38]
    node _dataInTIRnd_T_1 = bits(io.dataInTI, 15, 1) @[FFT3PipelineCalc.scala 31:69]
    node _dataInTIRnd_T_2 = cat(_dataInTIRnd_T, _dataInTIRnd_T_1) @[Cat.scala 33:92]
    node _dataInTIRnd_T_3 = mux(UInt<1>("h0"), UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _dataInTIRnd_T_4 = bits(io.dataInTI, 0, 0) @[FFT3PipelineCalc.scala 31:138]
    node _dataInTIRnd_T_5 = cat(_dataInTIRnd_T_3, _dataInTIRnd_T_4) @[Cat.scala 33:92]
    node _dataInTIRnd_T_6 = add(_dataInTIRnd_T_2, _dataInTIRnd_T_5) @[FFT3PipelineCalc.scala 31:92]
    node dataInTIRnd = tail(_dataInTIRnd_T_6, 1) @[FFT3PipelineCalc.scala 31:92]
    node dataInSR1c = mux(io.rShiftSym, dataInSRRnd, io.dataInSR) @[FFT3PipelineCalc.scala 33:25]
    node dataInSI1c = mux(io.rShiftSym, dataInSIRnd, io.dataInSI) @[FFT3PipelineCalc.scala 34:25]
    node dataInTR1c = mux(io.rShiftSym, dataInTRRnd, io.dataInTR) @[FFT3PipelineCalc.scala 35:25]
    node dataInTI1c = mux(io.rShiftSym, dataInTIRnd, io.dataInTI) @[FFT3PipelineCalc.scala 36:25]
    reg nk1c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      nk1c <= io.nk @[Reg.scala 36:22]
    node _twiLutIdx1c_T = bits(nk1c, 5, 0) @[FFT3PipelineCalc.scala 40:31]
    node twiLutIdx1c = cat(_twiLutIdx1c_T, UInt<1>("h0")) @[Cat.scala 33:92]
    node twiLutCaseIdx1c = mux(io.isFFT, UInt<2>("h0"), UInt<2>("h1")) @[FFT3PipelineCalc.scala 42:30]
    inst fftTwiddle of FFTTwiddle @[FFT3PipelineCalc.scala 44:28]
    fftTwiddle.io.nk <= twiLutIdx1c @[FFT3PipelineCalc.scala 45:22]
    fftTwiddle.io.twiLutCaseIndex <= twiLutCaseIdx1c @[FFT3PipelineCalc.scala 46:35]
    reg sR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      sR2c <= dataInSR1c @[Reg.scala 36:22]
    reg sI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      sI2c <= dataInSI1c @[Reg.scala 36:22]
    reg tR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      tR2c <= dataInTR1c @[Reg.scala 36:22]
    reg tI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      tI2c <= dataInTI1c @[Reg.scala 36:22]
    node _wR2c_T = mux(UInt<1>("h0"), UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 77:12]
    node _wR2c_T_1 = cat(fftTwiddle.io.wR, _wR2c_T) @[Cat.scala 33:92]
    reg wR2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      wR2c <= _wR2c_T_1 @[Reg.scala 36:22]
    node _wI2c_T = mux(UInt<1>("h0"), UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 77:12]
    node _wI2c_T_1 = cat(fftTwiddle.io.wI, _wI2c_T) @[Cat.scala 33:92]
    reg wI2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state1c : @[Reg.scala 36:18]
      wI2c <= _wI2c_T_1 @[Reg.scala 36:22]
    node _addTRI_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 57:34]
    node _addTRI_T_1 = bits(_addTRI_T, 0, 0) @[Bitwise.scala 77:15]
    node _addTRI_T_2 = mux(_addTRI_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _addTRI_T_3 = cat(_addTRI_T_2, tR2c) @[Cat.scala 33:92]
    node _addTRI_T_4 = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 57:79]
    node _addTRI_T_5 = bits(_addTRI_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _addTRI_T_6 = mux(_addTRI_T_5, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _addTRI_T_7 = cat(_addTRI_T_6, tI2c) @[Cat.scala 33:92]
    node _addTRI_T_8 = add(_addTRI_T_3, _addTRI_T_7) @[FFT3PipelineCalc.scala 57:61]
    node addTRI = tail(_addTRI_T_8, 1) @[FFT3PipelineCalc.scala 57:61]
    node _addWRI_T = bits(wR2c, 16, 16) @[FFT3PipelineCalc.scala 58:26]
    node _addWRI_T_1 = cat(_addWRI_T, wR2c) @[Cat.scala 33:92]
    node _addWRI_T_2 = bits(wI2c, 16, 16) @[FFT3PipelineCalc.scala 58:62]
    node _addWRI_T_3 = cat(_addWRI_T_2, wI2c) @[Cat.scala 33:92]
    node _addWRI_T_4 = add(_addWRI_T_1, _addWRI_T_3) @[FFT3PipelineCalc.scala 58:52]
    node addWRI = tail(_addWRI_T_4, 1) @[FFT3PipelineCalc.scala 58:52]
    inst fftMultiply of FFTMultiply @[FFT3PipelineCalc.scala 59:29]
    fftMultiply.io.a <= addTRI @[FFT3PipelineCalc.scala 60:22]
    fftMultiply.io.b <= addWRI @[FFT3PipelineCalc.scala 61:22]
    fftMultiply.io.tc <= UInt<1>("h1") @[FFT3PipelineCalc.scala 62:23]
    node _multRPre_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 65:51]
    node _multRPre_T_1 = bits(_multRPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _multRPre_T_2 = mux(_multRPre_T_1, UInt<17>("h1ffff"), UInt<17>("h0")) @[Bitwise.scala 77:12]
    node _multRPre_T_3 = cat(_multRPre_T_2, tR2c) @[Cat.scala 33:92]
    node _multRPre_T_4 = bits(wR2c, 16, 16) @[FFT3PipelineCalc.scala 65:111]
    node _multRPre_T_5 = bits(_multRPre_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _multRPre_T_6 = mux(_multRPre_T_5, UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
    node _multRPre_T_7 = cat(_multRPre_T_6, wR2c) @[Cat.scala 33:92]
    node multRPre = mul(_multRPre_T_3, _multRPre_T_7) @[FFT3PipelineCalc.scala 65:78]
    node multR = bits(multRPre, 32, 0) @[FFT3PipelineCalc.scala 66:25]
    node _multIPre_T = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 68:51]
    node _multIPre_T_1 = bits(_multIPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _multIPre_T_2 = mux(_multIPre_T_1, UInt<17>("h1ffff"), UInt<17>("h0")) @[Bitwise.scala 77:12]
    node _multIPre_T_3 = cat(_multIPre_T_2, tI2c) @[Cat.scala 33:92]
    node _multIPre_T_4 = bits(wI2c, 16, 16) @[FFT3PipelineCalc.scala 68:111]
    node _multIPre_T_5 = bits(_multIPre_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _multIPre_T_6 = mux(_multIPre_T_5, UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
    node _multIPre_T_7 = cat(_multIPre_T_6, wI2c) @[Cat.scala 33:92]
    node multIPre = mul(_multIPre_T_3, _multIPre_T_7) @[FFT3PipelineCalc.scala 68:78]
    node multI = bits(multIPre, 32, 0) @[FFT3PipelineCalc.scala 69:25]
    node _qR2cKernel_T = bits(multR, 32, 32) @[FFT3PipelineCalc.scala 71:31]
    node _qR2cKernel_T_1 = bits(multR, 30, 15) @[FFT3PipelineCalc.scala 71:62]
    node _qR2cKernel_T_2 = cat(_qR2cKernel_T, _qR2cKernel_T_1) @[Cat.scala 33:92]
    node _qR2cKernel_T_3 = bits(multI, 32, 32) @[FFT3PipelineCalc.scala 71:119]
    node _qR2cKernel_T_4 = bits(multI, 30, 15) @[FFT3PipelineCalc.scala 71:150]
    node _qR2cKernel_T_5 = cat(_qR2cKernel_T_3, _qR2cKernel_T_4) @[Cat.scala 33:92]
    node _qR2cKernel_T_6 = sub(_qR2cKernel_T_2, _qR2cKernel_T_5) @[FFT3PipelineCalc.scala 71:108]
    node qR2cKernel = tail(_qR2cKernel_T_6, 1) @[FFT3PipelineCalc.scala 71:108]
    node _qI2cKernel_T = bits(fftMultiply.io.product, 35, 35) @[FFT3PipelineCalc.scala 72:31]
    node _qI2cKernel_T_1 = bits(fftMultiply.io.product, 30, 15) @[FFT3PipelineCalc.scala 72:66]
    node _qI2cKernel_T_2 = cat(_qI2cKernel_T, _qI2cKernel_T_1) @[Cat.scala 33:92]
    node _qI2cKernel_T_3 = bits(multR, 32, 32) @[FFT3PipelineCalc.scala 72:123]
    node _qI2cKernel_T_4 = bits(multR, 30, 15) @[FFT3PipelineCalc.scala 72:154]
    node _qI2cKernel_T_5 = cat(_qI2cKernel_T_3, _qI2cKernel_T_4) @[Cat.scala 33:92]
    node _qI2cKernel_T_6 = sub(_qI2cKernel_T_2, _qI2cKernel_T_5) @[FFT3PipelineCalc.scala 72:112]
    node _qI2cKernel_T_7 = tail(_qI2cKernel_T_6, 1) @[FFT3PipelineCalc.scala 72:112]
    node _qI2cKernel_T_8 = bits(multI, 32, 32) @[FFT3PipelineCalc.scala 72:211]
    node _qI2cKernel_T_9 = bits(multI, 30, 15) @[FFT3PipelineCalc.scala 72:242]
    node _qI2cKernel_T_10 = cat(_qI2cKernel_T_8, _qI2cKernel_T_9) @[Cat.scala 33:92]
    node _qI2cKernel_T_11 = sub(_qI2cKernel_T_7, _qI2cKernel_T_10) @[FFT3PipelineCalc.scala 72:200]
    node qI2cKernel = tail(_qI2cKernel_T_11, 1) @[FFT3PipelineCalc.scala 72:200]
    node _qR2cProc_T = bits(tR2c, 15, 15) @[FFT3PipelineCalc.scala 74:28]
    node qR2cProc = cat(_qR2cProc_T, tR2c) @[Cat.scala 33:92]
    node _qI2cProc_T = bits(tI2c, 15, 15) @[FFT3PipelineCalc.scala 75:29]
    node _qI2cProc_T_1 = cat(_qI2cProc_T, tI2c) @[Cat.scala 33:92]
    node _qI2cProc_T_2 = not(_qI2cProc_T_1) @[FFT3PipelineCalc.scala 75:20]
    node _qI2cProc_T_3 = add(_qI2cProc_T_2, UInt<1>("h1")) @[FFT3PipelineCalc.scala 75:55]
    node qI2cProc = tail(_qI2cProc_T_3, 1) @[FFT3PipelineCalc.scala 75:55]
    node qR2c = mux(io.dataMode, qR2cProc, qR2cKernel) @[FFT3PipelineCalc.scala 77:19]
    node qI2c = mux(io.dataMode, qI2cProc, qI2cKernel) @[FFT3PipelineCalc.scala 78:19]
    reg sR3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      sR3c <= sR2c @[Reg.scala 36:22]
    reg sI3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      sI3c <= sI2c @[Reg.scala 36:22]
    reg qR3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      qR3c <= qR2c @[Reg.scala 36:22]
    reg qI3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when io.state2c : @[Reg.scala 36:18]
      qI3c <= qI2c @[Reg.scala 36:22]
    node _xR3cPre_T = bits(sR3c, 15, 15) @[FFT3PipelineCalc.scala 86:35]
    node _xR3cPre_T_1 = bits(_xR3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _xR3cPre_T_2 = mux(_xR3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _xR3cPre_T_3 = cat(_xR3cPre_T_2, sR3c) @[Cat.scala 33:92]
    node _xR3cPre_T_4 = bits(qR3c, 16, 16) @[FFT3PipelineCalc.scala 86:72]
    node _xR3cPre_T_5 = cat(_xR3cPre_T_4, qR3c) @[Cat.scala 33:92]
    node _xR3cPre_T_6 = add(_xR3cPre_T_3, _xR3cPre_T_5) @[FFT3PipelineCalc.scala 86:62]
    node xR3cPre = tail(_xR3cPre_T_6, 1) @[FFT3PipelineCalc.scala 86:62]
    node _xI3cPre_T = bits(sI3c, 15, 15) @[FFT3PipelineCalc.scala 87:35]
    node _xI3cPre_T_1 = bits(_xI3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _xI3cPre_T_2 = mux(_xI3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _xI3cPre_T_3 = cat(_xI3cPre_T_2, sI3c) @[Cat.scala 33:92]
    node _xI3cPre_T_4 = bits(qI3c, 16, 16) @[FFT3PipelineCalc.scala 87:72]
    node _xI3cPre_T_5 = cat(_xI3cPre_T_4, qI3c) @[Cat.scala 33:92]
    node _xI3cPre_T_6 = add(_xI3cPre_T_3, _xI3cPre_T_5) @[FFT3PipelineCalc.scala 87:62]
    node xI3cPre = tail(_xI3cPre_T_6, 1) @[FFT3PipelineCalc.scala 87:62]
    node _xR3c_T = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:28]
    node _xR3c_T_1 = bits(xR3cPre, 16, 16) @[FFT3PipelineCalc.scala 89:56]
    node _xR3c_T_2 = xor(_xR3c_T, _xR3c_T_1) @[FFT3PipelineCalc.scala 89:47]
    node _xR3c_T_3 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:88]
    node _xR3c_T_4 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:139]
    node _xR3c_T_5 = bits(_xR3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _xR3c_T_6 = mux(_xR3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xR3c_T_7 = not(_xR3c_T_6) @[FFT3PipelineCalc.scala 89:108]
    node _xR3c_T_8 = cat(_xR3c_T_3, _xR3c_T_7) @[Cat.scala 33:92]
    node _xR3c_T_9 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:173]
    node _xR3c_T_10 = bits(xR3cPre, 15, 15) @[FFT3PipelineCalc.scala 89:201]
    node _xR3c_T_11 = xor(_xR3c_T_9, _xR3c_T_10) @[FFT3PipelineCalc.scala 89:192]
    node _xR3c_T_12 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:233]
    node _xR3c_T_13 = bits(xR3cPre, 17, 17) @[FFT3PipelineCalc.scala 89:284]
    node _xR3c_T_14 = bits(_xR3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _xR3c_T_15 = mux(_xR3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xR3c_T_16 = not(_xR3c_T_15) @[FFT3PipelineCalc.scala 89:253]
    node _xR3c_T_17 = cat(_xR3c_T_12, _xR3c_T_16) @[Cat.scala 33:92]
    node _xR3c_T_18 = bits(xR3cPre, 15, 0) @[FFT3PipelineCalc.scala 89:313]
    node _xR3c_T_19 = mux(_xR3c_T_11, _xR3c_T_17, _xR3c_T_18) @[FFT3PipelineCalc.scala 89:164]
    node xR3c = mux(_xR3c_T_2, _xR3c_T_8, _xR3c_T_19) @[FFT3PipelineCalc.scala 89:19]
    node _xI3c_T = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:28]
    node _xI3c_T_1 = bits(xI3cPre, 16, 16) @[FFT3PipelineCalc.scala 90:56]
    node _xI3c_T_2 = xor(_xI3c_T, _xI3c_T_1) @[FFT3PipelineCalc.scala 90:47]
    node _xI3c_T_3 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:88]
    node _xI3c_T_4 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:139]
    node _xI3c_T_5 = bits(_xI3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _xI3c_T_6 = mux(_xI3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xI3c_T_7 = not(_xI3c_T_6) @[FFT3PipelineCalc.scala 90:108]
    node _xI3c_T_8 = cat(_xI3c_T_3, _xI3c_T_7) @[Cat.scala 33:92]
    node _xI3c_T_9 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:173]
    node _xI3c_T_10 = bits(xI3cPre, 15, 15) @[FFT3PipelineCalc.scala 90:201]
    node _xI3c_T_11 = xor(_xI3c_T_9, _xI3c_T_10) @[FFT3PipelineCalc.scala 90:192]
    node _xI3c_T_12 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:233]
    node _xI3c_T_13 = bits(xI3cPre, 17, 17) @[FFT3PipelineCalc.scala 90:284]
    node _xI3c_T_14 = bits(_xI3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _xI3c_T_15 = mux(_xI3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _xI3c_T_16 = not(_xI3c_T_15) @[FFT3PipelineCalc.scala 90:253]
    node _xI3c_T_17 = cat(_xI3c_T_12, _xI3c_T_16) @[Cat.scala 33:92]
    node _xI3c_T_18 = bits(xI3cPre, 15, 0) @[FFT3PipelineCalc.scala 90:313]
    node _xI3c_T_19 = mux(_xI3c_T_11, _xI3c_T_17, _xI3c_T_18) @[FFT3PipelineCalc.scala 90:164]
    node xI3c = mux(_xI3c_T_2, _xI3c_T_8, _xI3c_T_19) @[FFT3PipelineCalc.scala 90:19]
    io.dataOutSR3c <= xR3c @[FFT3PipelineCalc.scala 92:20]
    io.dataOutSI3c <= xI3c @[FFT3PipelineCalc.scala 93:20]
    node _yR3cPre_T = bits(sR3c, 15, 15) @[FFT3PipelineCalc.scala 95:35]
    node _yR3cPre_T_1 = bits(_yR3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _yR3cPre_T_2 = mux(_yR3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _yR3cPre_T_3 = cat(_yR3cPre_T_2, sR3c) @[Cat.scala 33:92]
    node _yR3cPre_T_4 = bits(qR3c, 16, 16) @[FFT3PipelineCalc.scala 95:72]
    node _yR3cPre_T_5 = cat(_yR3cPre_T_4, qR3c) @[Cat.scala 33:92]
    node _yR3cPre_T_6 = sub(_yR3cPre_T_3, _yR3cPre_T_5) @[FFT3PipelineCalc.scala 95:62]
    node yR3cPre = tail(_yR3cPre_T_6, 1) @[FFT3PipelineCalc.scala 95:62]
    node _yI3cPre_T = bits(sI3c, 15, 15) @[FFT3PipelineCalc.scala 96:35]
    node _yI3cPre_T_1 = bits(_yI3cPre_T, 0, 0) @[Bitwise.scala 77:15]
    node _yI3cPre_T_2 = mux(_yI3cPre_T_1, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 77:12]
    node _yI3cPre_T_3 = cat(_yI3cPre_T_2, sI3c) @[Cat.scala 33:92]
    node _yI3cPre_T_4 = bits(qI3c, 16, 16) @[FFT3PipelineCalc.scala 96:72]
    node _yI3cPre_T_5 = cat(_yI3cPre_T_4, qI3c) @[Cat.scala 33:92]
    node _yI3cPre_T_6 = sub(_yI3cPre_T_3, _yI3cPre_T_5) @[FFT3PipelineCalc.scala 96:62]
    node yI3cPre = tail(_yI3cPre_T_6, 1) @[FFT3PipelineCalc.scala 96:62]
    node _yR3c_T = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:28]
    node _yR3c_T_1 = bits(yR3cPre, 16, 16) @[FFT3PipelineCalc.scala 98:56]
    node _yR3c_T_2 = xor(_yR3c_T, _yR3c_T_1) @[FFT3PipelineCalc.scala 98:47]
    node _yR3c_T_3 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:88]
    node _yR3c_T_4 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:139]
    node _yR3c_T_5 = bits(_yR3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _yR3c_T_6 = mux(_yR3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yR3c_T_7 = not(_yR3c_T_6) @[FFT3PipelineCalc.scala 98:108]
    node _yR3c_T_8 = cat(_yR3c_T_3, _yR3c_T_7) @[Cat.scala 33:92]
    node _yR3c_T_9 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:173]
    node _yR3c_T_10 = bits(yR3cPre, 15, 15) @[FFT3PipelineCalc.scala 98:201]
    node _yR3c_T_11 = xor(_yR3c_T_9, _yR3c_T_10) @[FFT3PipelineCalc.scala 98:192]
    node _yR3c_T_12 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:233]
    node _yR3c_T_13 = bits(yR3cPre, 17, 17) @[FFT3PipelineCalc.scala 98:284]
    node _yR3c_T_14 = bits(_yR3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _yR3c_T_15 = mux(_yR3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yR3c_T_16 = not(_yR3c_T_15) @[FFT3PipelineCalc.scala 98:253]
    node _yR3c_T_17 = cat(_yR3c_T_12, _yR3c_T_16) @[Cat.scala 33:92]
    node _yR3c_T_18 = bits(yR3cPre, 15, 0) @[FFT3PipelineCalc.scala 98:313]
    node _yR3c_T_19 = mux(_yR3c_T_11, _yR3c_T_17, _yR3c_T_18) @[FFT3PipelineCalc.scala 98:164]
    node yR3c = mux(_yR3c_T_2, _yR3c_T_8, _yR3c_T_19) @[FFT3PipelineCalc.scala 98:19]
    node _yI3c_T = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:28]
    node _yI3c_T_1 = bits(yI3cPre, 16, 16) @[FFT3PipelineCalc.scala 99:56]
    node _yI3c_T_2 = xor(_yI3c_T, _yI3c_T_1) @[FFT3PipelineCalc.scala 99:47]
    node _yI3c_T_3 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:88]
    node _yI3c_T_4 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:139]
    node _yI3c_T_5 = bits(_yI3c_T_4, 0, 0) @[Bitwise.scala 77:15]
    node _yI3c_T_6 = mux(_yI3c_T_5, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yI3c_T_7 = not(_yI3c_T_6) @[FFT3PipelineCalc.scala 99:108]
    node _yI3c_T_8 = cat(_yI3c_T_3, _yI3c_T_7) @[Cat.scala 33:92]
    node _yI3c_T_9 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:173]
    node _yI3c_T_10 = bits(yI3cPre, 15, 15) @[FFT3PipelineCalc.scala 99:201]
    node _yI3c_T_11 = xor(_yI3c_T_9, _yI3c_T_10) @[FFT3PipelineCalc.scala 99:192]
    node _yI3c_T_12 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:233]
    node _yI3c_T_13 = bits(yI3cPre, 17, 17) @[FFT3PipelineCalc.scala 99:284]
    node _yI3c_T_14 = bits(_yI3c_T_13, 0, 0) @[Bitwise.scala 77:15]
    node _yI3c_T_15 = mux(_yI3c_T_14, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 77:12]
    node _yI3c_T_16 = not(_yI3c_T_15) @[FFT3PipelineCalc.scala 99:253]
    node _yI3c_T_17 = cat(_yI3c_T_12, _yI3c_T_16) @[Cat.scala 33:92]
    node _yI3c_T_18 = bits(yI3cPre, 15, 0) @[FFT3PipelineCalc.scala 99:313]
    node _yI3c_T_19 = mux(_yI3c_T_11, _yI3c_T_17, _yI3c_T_18) @[FFT3PipelineCalc.scala 99:164]
    node yI3c = mux(_yI3c_T_2, _yI3c_T_8, _yI3c_T_19) @[FFT3PipelineCalc.scala 99:19]
    io.dataOutTR3c <= yR3c @[FFT3PipelineCalc.scala 101:20]
    io.dataOutTI3c <= yI3c @[FFT3PipelineCalc.scala 102:20]

  module FFTDataProcess :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip readDataSram0Bank : UInt<32>[8], flip readDataSram1Bank : UInt<32>[8], readEnableSram0Bank : UInt<1>[8], readEnableSram1Bank : UInt<1>[8], writeDataSram0Bank : UInt<32>[8], writeDataSram1Bank : UInt<32>[8], writeEnableSram0Bank : UInt<1>[8], writeEnableSram1Bank : UInt<1>[8], addrSram0Bank : UInt<4>[8], addrSram1Bank : UInt<4>[8], procDone : UInt<1>, flip procKick : UInt<1>, flip fftMode : UInt<1>}

    clock is invalid
    reset is invalid
    io is invalid
    node isFFT = eq(io.fftMode, UInt<1>("h0")) @[FFTDataProcess.scala 36:17]
    reg stateReg : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[FFTDataProcess.scala 38:27]
    reg radixCount : UInt<7>, clock with :
      reset => (reset, UInt<7>("h0")) @[FFTDataProcess.scala 40:29]
    reg phaseCount : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[FFTDataProcess.scala 42:29]
    node _T = eq(UInt<3>("h0"), stateReg) @[FFTDataProcess.scala 44:22]
    when _T : @[FFTDataProcess.scala 44:22]
      when io.procKick : @[FFTDataProcess.scala 46:31]
        stateReg <= UInt<3>("h1") @[FFTDataProcess.scala 47:26]
      else :
        stateReg <= stateReg @[FFTDataProcess.scala 49:26]
    else :
      node _T_1 = eq(UInt<3>("h1"), stateReg) @[FFTDataProcess.scala 44:22]
      when _T_1 : @[FFTDataProcess.scala 44:22]
        node _T_2 = eq(radixCount, UInt<6>("h3f")) @[FFTDataProcess.scala 53:29]
        when _T_2 : @[FFTDataProcess.scala 53:47]
          stateReg <= UInt<3>("h2") @[FFTDataProcess.scala 54:26]
        else :
          stateReg <= stateReg @[FFTDataProcess.scala 56:26]
      else :
        node _T_3 = eq(UInt<3>("h2"), stateReg) @[FFTDataProcess.scala 44:22]
        when _T_3 : @[FFTDataProcess.scala 44:22]
          node _T_4 = eq(radixCount, UInt<2>("h3")) @[FFTDataProcess.scala 60:29]
          when _T_4 : @[FFTDataProcess.scala 60:46]
            stateReg <= UInt<3>("h3") @[FFTDataProcess.scala 61:26]
          else :
            stateReg <= stateReg @[FFTDataProcess.scala 63:26]
        else :
          node _T_5 = eq(UInt<3>("h3"), stateReg) @[FFTDataProcess.scala 44:22]
          when _T_5 : @[FFTDataProcess.scala 44:22]
            node _T_6 = eq(phaseCount, UInt<1>("h1")) @[FFTDataProcess.scala 67:29]
            when _T_6 : @[FFTDataProcess.scala 67:47]
              stateReg <= UInt<3>("h4") @[FFTDataProcess.scala 68:26]
            else :
              stateReg <= UInt<3>("h1") @[FFTDataProcess.scala 70:26]
          else :
            node _T_7 = eq(UInt<3>("h4"), stateReg) @[FFTDataProcess.scala 44:22]
            when _T_7 : @[FFTDataProcess.scala 44:22]
              stateReg <= UInt<3>("h0") @[FFTDataProcess.scala 74:22]
    node _radixInit_T = eq(stateReg, UInt<3>("h0")) @[FFTDataProcess.scala 78:31]
    node _radixInit_T_1 = eq(stateReg, UInt<3>("h1")) @[FFTDataProcess.scala 79:16]
    node _radixInit_T_2 = eq(radixCount, UInt<6>("h3f")) @[FFTDataProcess.scala 79:43]
    node _radixInit_T_3 = and(_radixInit_T_1, _radixInit_T_2) @[FFTDataProcess.scala 79:28]
    node _radixInit_T_4 = or(_radixInit_T, _radixInit_T_3) @[FFTDataProcess.scala 78:45]
    node _radixInit_T_5 = eq(stateReg, UInt<3>("h2")) @[FFTDataProcess.scala 80:16]
    node _radixInit_T_6 = eq(radixCount, UInt<2>("h3")) @[FFTDataProcess.scala 80:44]
    node _radixInit_T_7 = and(_radixInit_T_5, _radixInit_T_6) @[FFTDataProcess.scala 80:29]
    node _radixInit_T_8 = or(_radixInit_T_4, _radixInit_T_7) @[FFTDataProcess.scala 79:62]
    node _radixInit_T_9 = eq(stateReg, UInt<3>("h3")) @[FFTDataProcess.scala 81:15]
    node _radixInit_T_10 = or(_radixInit_T_8, _radixInit_T_9) @[FFTDataProcess.scala 80:62]
    node _radixInit_T_11 = eq(stateReg, UInt<3>("h4")) @[FFTDataProcess.scala 82:15]
    node radixInit = or(_radixInit_T_10, _radixInit_T_11) @[FFTDataProcess.scala 81:30]
    node _radixUp_T = eq(stateReg, UInt<3>("h1")) @[FFTDataProcess.scala 84:29]
    node _radixUp_T_1 = eq(stateReg, UInt<3>("h2")) @[FFTDataProcess.scala 84:53]
    node radixUp = or(_radixUp_T, _radixUp_T_1) @[FFTDataProcess.scala 84:41]
    when radixInit : @[FFTDataProcess.scala 86:21]
      radixCount <= UInt<1>("h0") @[FFTDataProcess.scala 87:20]
    else :
      when radixUp : @[FFTDataProcess.scala 88:26]
        node _radixCount_T = add(radixCount, UInt<1>("h1")) @[FFTDataProcess.scala 89:34]
        node _radixCount_T_1 = tail(_radixCount_T, 1) @[FFTDataProcess.scala 89:34]
        radixCount <= _radixCount_T_1 @[FFTDataProcess.scala 89:20]
      else :
        radixCount <= radixCount @[FFTDataProcess.scala 91:20]
    node _phaseInit_T = eq(stateReg, UInt<3>("h0")) @[FFTDataProcess.scala 94:31]
    node _phaseInit_T_1 = eq(stateReg, UInt<3>("h3")) @[FFTDataProcess.scala 95:16]
    node _phaseInit_T_2 = eq(phaseCount, UInt<1>("h1")) @[FFTDataProcess.scala 95:45]
    node _phaseInit_T_3 = and(_phaseInit_T_1, _phaseInit_T_2) @[FFTDataProcess.scala 95:31]
    node _phaseInit_T_4 = or(_phaseInit_T, _phaseInit_T_3) @[FFTDataProcess.scala 94:45]
    node _phaseInit_T_5 = eq(stateReg, UInt<3>("h4")) @[FFTDataProcess.scala 96:15]
    node phaseInit = or(_phaseInit_T_4, _phaseInit_T_5) @[FFTDataProcess.scala 95:64]
    node phaseUp = eq(stateReg, UInt<3>("h3")) @[FFTDataProcess.scala 98:29]
    when phaseInit : @[FFTDataProcess.scala 100:21]
      phaseCount <= UInt<1>("h0") @[FFTDataProcess.scala 101:20]
    else :
      when phaseUp : @[FFTDataProcess.scala 102:26]
        node _phaseCount_T = add(phaseCount, UInt<1>("h1")) @[FFTDataProcess.scala 103:34]
        node _phaseCount_T_1 = tail(_phaseCount_T, 1) @[FFTDataProcess.scala 103:34]
        phaseCount <= _phaseCount_T_1 @[FFTDataProcess.scala 103:20]
      else :
        phaseCount <= phaseCount @[FFTDataProcess.scala 105:20]
    reg srcBuffer : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[FFTDataProcess.scala 108:28]
    node _srcBufferNext_T = eq(stateReg, UInt<3>("h3")) @[FFTDataProcess.scala 110:35]
    node _srcBufferNext_T_1 = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 110:52]
    node srcBufferNext = and(_srcBufferNext_T, _srcBufferNext_T_1) @[FFTDataProcess.scala 110:50]
    node _srcUp_T = eq(stateReg, UInt<3>("h0")) @[FFTDataProcess.scala 112:27]
    node _srcUp_T_1 = eq(stateReg, UInt<3>("h3")) @[FFTDataProcess.scala 112:53]
    node srcUp = or(_srcUp_T, _srcUp_T_1) @[FFTDataProcess.scala 112:41]
    when srcUp : @[FFTDataProcess.scala 114:17]
      srcBuffer <= srcBufferNext @[FFTDataProcess.scala 115:19]
    else :
      srcBuffer <= srcBuffer @[FFTDataProcess.scala 117:19]
    node procState = eq(stateReg, UInt<3>("h1")) @[FFTDataProcess.scala 120:31]
    node _addrS_temp_T = bits(radixCount, 6, 6) @[FFTDataProcess.scala 126:34]
    node _addrS_temp_T_1 = bits(radixCount, 0, 0) @[FFTDataProcess.scala 126:55]
    node addrS_temp_0 = mux(UInt<1>("h1"), _addrS_temp_T, _addrS_temp_T_1) @[FFTDataProcess.scala 126:26]
    node _addrS_temp_T_2 = bits(radixCount, 5, 5) @[FFTDataProcess.scala 126:34]
    node _addrS_temp_T_3 = bits(radixCount, 1, 1) @[FFTDataProcess.scala 126:55]
    node addrS_temp_1 = mux(UInt<1>("h1"), _addrS_temp_T_2, _addrS_temp_T_3) @[FFTDataProcess.scala 126:26]
    node _addrS_temp_T_4 = bits(radixCount, 4, 4) @[FFTDataProcess.scala 126:34]
    node _addrS_temp_T_5 = bits(radixCount, 2, 2) @[FFTDataProcess.scala 126:55]
    node addrS_temp_2 = mux(UInt<1>("h1"), _addrS_temp_T_4, _addrS_temp_T_5) @[FFTDataProcess.scala 126:26]
    node _addrS_temp_T_6 = bits(radixCount, 3, 3) @[FFTDataProcess.scala 126:34]
    node _addrS_temp_T_7 = bits(radixCount, 3, 3) @[FFTDataProcess.scala 126:55]
    node addrS_temp_3 = mux(UInt<1>("h1"), _addrS_temp_T_6, _addrS_temp_T_7) @[FFTDataProcess.scala 126:26]
    node _addrS_temp_T_8 = bits(radixCount, 2, 2) @[FFTDataProcess.scala 126:34]
    node _addrS_temp_T_9 = bits(radixCount, 4, 4) @[FFTDataProcess.scala 126:55]
    node addrS_temp_4 = mux(UInt<1>("h1"), _addrS_temp_T_8, _addrS_temp_T_9) @[FFTDataProcess.scala 126:26]
    node _addrS_temp_T_10 = bits(radixCount, 1, 1) @[FFTDataProcess.scala 126:34]
    node _addrS_temp_T_11 = bits(radixCount, 5, 5) @[FFTDataProcess.scala 126:55]
    node addrS_temp_5 = mux(UInt<1>("h1"), _addrS_temp_T_10, _addrS_temp_T_11) @[FFTDataProcess.scala 126:26]
    node _addrS_temp_T_12 = bits(radixCount, 0, 0) @[FFTDataProcess.scala 126:34]
    node _addrS_temp_T_13 = bits(radixCount, 6, 6) @[FFTDataProcess.scala 126:55]
    node addrS_temp_6 = mux(UInt<1>("h1"), _addrS_temp_T_12, _addrS_temp_T_13) @[FFTDataProcess.scala 126:26]
    wire _addrS_WIRE : UInt<1>[7] @[FFTDataProcess.scala 130:24]
    _addrS_WIRE[0] <= addrS_temp_0 @[FFTDataProcess.scala 130:24]
    _addrS_WIRE[1] <= addrS_temp_1 @[FFTDataProcess.scala 130:24]
    _addrS_WIRE[2] <= addrS_temp_2 @[FFTDataProcess.scala 130:24]
    _addrS_WIRE[3] <= addrS_temp_3 @[FFTDataProcess.scala 130:24]
    _addrS_WIRE[4] <= addrS_temp_4 @[FFTDataProcess.scala 130:24]
    _addrS_WIRE[5] <= addrS_temp_5 @[FFTDataProcess.scala 130:24]
    _addrS_WIRE[6] <= addrS_temp_6 @[FFTDataProcess.scala 130:24]
    node addrS_lo_hi = cat(_addrS_WIRE[2], _addrS_WIRE[1]) @[FFTDataProcess.scala 130:70]
    node addrS_lo = cat(addrS_lo_hi, _addrS_WIRE[0]) @[FFTDataProcess.scala 130:70]
    node addrS_hi_lo = cat(_addrS_WIRE[4], _addrS_WIRE[3]) @[FFTDataProcess.scala 130:70]
    node addrS_hi_hi = cat(_addrS_WIRE[6], _addrS_WIRE[5]) @[FFTDataProcess.scala 130:70]
    node addrS_hi = cat(addrS_hi_hi, addrS_hi_lo) @[FFTDataProcess.scala 130:70]
    node addrS = cat(addrS_hi, addrS_lo) @[FFTDataProcess.scala 130:70]
    node _addrT_T = not(radixCount) @[FFTDataProcess.scala 131:58]
    node _addrT_T_1 = add(_addrT_T, UInt<1>("h1")) @[FFTDataProcess.scala 131:70]
    node _addrT_T_2 = tail(_addrT_T_1, 1) @[FFTDataProcess.scala 131:70]
    node _addrT_T_3 = bits(_addrT_T_2, 6, 0) @[FFTDataProcess.scala 131:76]
    node _addrT_temp_T = bits(_addrT_T_3, 6, 6) @[FFTDataProcess.scala 126:34]
    node _addrT_temp_T_1 = bits(_addrT_T_3, 0, 0) @[FFTDataProcess.scala 126:55]
    node addrT_temp_0 = mux(UInt<1>("h1"), _addrT_temp_T, _addrT_temp_T_1) @[FFTDataProcess.scala 126:26]
    node _addrT_temp_T_2 = bits(_addrT_T_3, 5, 5) @[FFTDataProcess.scala 126:34]
    node _addrT_temp_T_3 = bits(_addrT_T_3, 1, 1) @[FFTDataProcess.scala 126:55]
    node addrT_temp_1 = mux(UInt<1>("h1"), _addrT_temp_T_2, _addrT_temp_T_3) @[FFTDataProcess.scala 126:26]
    node _addrT_temp_T_4 = bits(_addrT_T_3, 4, 4) @[FFTDataProcess.scala 126:34]
    node _addrT_temp_T_5 = bits(_addrT_T_3, 2, 2) @[FFTDataProcess.scala 126:55]
    node addrT_temp_2 = mux(UInt<1>("h1"), _addrT_temp_T_4, _addrT_temp_T_5) @[FFTDataProcess.scala 126:26]
    node _addrT_temp_T_6 = bits(_addrT_T_3, 3, 3) @[FFTDataProcess.scala 126:34]
    node _addrT_temp_T_7 = bits(_addrT_T_3, 3, 3) @[FFTDataProcess.scala 126:55]
    node addrT_temp_3 = mux(UInt<1>("h1"), _addrT_temp_T_6, _addrT_temp_T_7) @[FFTDataProcess.scala 126:26]
    node _addrT_temp_T_8 = bits(_addrT_T_3, 2, 2) @[FFTDataProcess.scala 126:34]
    node _addrT_temp_T_9 = bits(_addrT_T_3, 4, 4) @[FFTDataProcess.scala 126:55]
    node addrT_temp_4 = mux(UInt<1>("h1"), _addrT_temp_T_8, _addrT_temp_T_9) @[FFTDataProcess.scala 126:26]
    node _addrT_temp_T_10 = bits(_addrT_T_3, 1, 1) @[FFTDataProcess.scala 126:34]
    node _addrT_temp_T_11 = bits(_addrT_T_3, 5, 5) @[FFTDataProcess.scala 126:55]
    node addrT_temp_5 = mux(UInt<1>("h1"), _addrT_temp_T_10, _addrT_temp_T_11) @[FFTDataProcess.scala 126:26]
    node _addrT_temp_T_12 = bits(_addrT_T_3, 0, 0) @[FFTDataProcess.scala 126:34]
    node _addrT_temp_T_13 = bits(_addrT_T_3, 6, 6) @[FFTDataProcess.scala 126:55]
    node addrT_temp_6 = mux(UInt<1>("h1"), _addrT_temp_T_12, _addrT_temp_T_13) @[FFTDataProcess.scala 126:26]
    wire _addrT_WIRE : UInt<1>[7] @[FFTDataProcess.scala 131:24]
    _addrT_WIRE[0] <= addrT_temp_0 @[FFTDataProcess.scala 131:24]
    _addrT_WIRE[1] <= addrT_temp_1 @[FFTDataProcess.scala 131:24]
    _addrT_WIRE[2] <= addrT_temp_2 @[FFTDataProcess.scala 131:24]
    _addrT_WIRE[3] <= addrT_temp_3 @[FFTDataProcess.scala 131:24]
    _addrT_WIRE[4] <= addrT_temp_4 @[FFTDataProcess.scala 131:24]
    _addrT_WIRE[5] <= addrT_temp_5 @[FFTDataProcess.scala 131:24]
    _addrT_WIRE[6] <= addrT_temp_6 @[FFTDataProcess.scala 131:24]
    node addrT_lo_hi = cat(_addrT_WIRE[2], _addrT_WIRE[1]) @[FFTDataProcess.scala 131:97]
    node addrT_lo = cat(addrT_lo_hi, _addrT_WIRE[0]) @[FFTDataProcess.scala 131:97]
    node addrT_hi_lo = cat(_addrT_WIRE[4], _addrT_WIRE[3]) @[FFTDataProcess.scala 131:97]
    node addrT_hi_hi = cat(_addrT_WIRE[6], _addrT_WIRE[5]) @[FFTDataProcess.scala 131:97]
    node addrT_hi = cat(addrT_hi_hi, addrT_hi_lo) @[FFTDataProcess.scala 131:97]
    node addrT = cat(addrT_hi, addrT_lo) @[FFTDataProcess.scala 131:97]
    node sameAddr = eq(addrS, addrT) @[FFTDataProcess.scala 133:26]
    node _addrSBankSelPre_sum_T = dshr(addrS, UInt<2>("h2")) @[FFTDataProcess.scala 136:115]
    node _addrSBankSelPre_sum_T_1 = bits(_addrSBankSelPre_sum_T, 0, 0) @[FFTDataProcess.scala 136:115]
    node _addrSBankSelPre_sum_T_2 = add(UInt<3>("h0"), _addrSBankSelPre_sum_T_1) @[FFTDataProcess.scala 136:107]
    node _addrSBankSelPre_sum_T_3 = tail(_addrSBankSelPre_sum_T_2, 1) @[FFTDataProcess.scala 136:107]
    node _addrSBankSelPre_sum_T_4 = dshr(addrS, UInt<3>("h5")) @[FFTDataProcess.scala 136:115]
    node _addrSBankSelPre_sum_T_5 = bits(_addrSBankSelPre_sum_T_4, 0, 0) @[FFTDataProcess.scala 136:115]
    node _addrSBankSelPre_sum_T_6 = add(_addrSBankSelPre_sum_T_3, _addrSBankSelPre_sum_T_5) @[FFTDataProcess.scala 136:107]
    node addrSBankSelPre_0 = tail(_addrSBankSelPre_sum_T_6, 1) @[FFTDataProcess.scala 136:107]
    node _addrSBankSelPre_sum_T_7 = dshr(addrS, UInt<1>("h1")) @[FFTDataProcess.scala 136:115]
    node _addrSBankSelPre_sum_T_8 = bits(_addrSBankSelPre_sum_T_7, 0, 0) @[FFTDataProcess.scala 136:115]
    node _addrSBankSelPre_sum_T_9 = add(UInt<3>("h0"), _addrSBankSelPre_sum_T_8) @[FFTDataProcess.scala 136:107]
    node _addrSBankSelPre_sum_T_10 = tail(_addrSBankSelPre_sum_T_9, 1) @[FFTDataProcess.scala 136:107]
    node _addrSBankSelPre_sum_T_11 = dshr(addrS, UInt<3>("h4")) @[FFTDataProcess.scala 136:115]
    node _addrSBankSelPre_sum_T_12 = bits(_addrSBankSelPre_sum_T_11, 0, 0) @[FFTDataProcess.scala 136:115]
    node _addrSBankSelPre_sum_T_13 = add(_addrSBankSelPre_sum_T_10, _addrSBankSelPre_sum_T_12) @[FFTDataProcess.scala 136:107]
    node addrSBankSelPre_1 = tail(_addrSBankSelPre_sum_T_13, 1) @[FFTDataProcess.scala 136:107]
    node _addrSBankSelPre_sum_T_14 = dshr(addrS, UInt<1>("h0")) @[FFTDataProcess.scala 136:115]
    node _addrSBankSelPre_sum_T_15 = bits(_addrSBankSelPre_sum_T_14, 0, 0) @[FFTDataProcess.scala 136:115]
    node _addrSBankSelPre_sum_T_16 = add(UInt<3>("h0"), _addrSBankSelPre_sum_T_15) @[FFTDataProcess.scala 136:107]
    node _addrSBankSelPre_sum_T_17 = tail(_addrSBankSelPre_sum_T_16, 1) @[FFTDataProcess.scala 136:107]
    node _addrSBankSelPre_sum_T_18 = dshr(addrS, UInt<2>("h3")) @[FFTDataProcess.scala 136:115]
    node _addrSBankSelPre_sum_T_19 = bits(_addrSBankSelPre_sum_T_18, 0, 0) @[FFTDataProcess.scala 136:115]
    node _addrSBankSelPre_sum_T_20 = add(_addrSBankSelPre_sum_T_17, _addrSBankSelPre_sum_T_19) @[FFTDataProcess.scala 136:107]
    node _addrSBankSelPre_sum_T_21 = tail(_addrSBankSelPre_sum_T_20, 1) @[FFTDataProcess.scala 136:107]
    node _addrSBankSelPre_sum_T_22 = dshr(addrS, UInt<3>("h6")) @[FFTDataProcess.scala 136:115]
    node _addrSBankSelPre_sum_T_23 = bits(_addrSBankSelPre_sum_T_22, 0, 0) @[FFTDataProcess.scala 136:115]
    node _addrSBankSelPre_sum_T_24 = add(_addrSBankSelPre_sum_T_21, _addrSBankSelPre_sum_T_23) @[FFTDataProcess.scala 136:107]
    node addrSBankSelPre_2 = tail(_addrSBankSelPre_sum_T_24, 1) @[FFTDataProcess.scala 136:107]
    node _addrSBankSel_T = shl(UInt<1>("h0"), 1) @[FFTDataProcess.scala 142:63]
    node _addrSBankSel_T_1 = add(_addrSBankSel_T, addrSBankSelPre_0) @[FFTDataProcess.scala 142:69]
    node _addrSBankSel_T_2 = tail(_addrSBankSel_T_1, 1) @[FFTDataProcess.scala 142:69]
    node _addrSBankSel_T_3 = shl(_addrSBankSel_T_2, 1) @[FFTDataProcess.scala 142:63]
    node _addrSBankSel_T_4 = add(_addrSBankSel_T_3, addrSBankSelPre_1) @[FFTDataProcess.scala 142:69]
    node _addrSBankSel_T_5 = tail(_addrSBankSel_T_4, 1) @[FFTDataProcess.scala 142:69]
    node _addrSBankSel_T_6 = shl(_addrSBankSel_T_5, 1) @[FFTDataProcess.scala 142:63]
    node _addrSBankSel_T_7 = add(_addrSBankSel_T_6, addrSBankSelPre_2) @[FFTDataProcess.scala 142:69]
    node _addrSBankSel_T_8 = tail(_addrSBankSel_T_7, 1) @[FFTDataProcess.scala 142:69]
    node addrSBankSel = bits(_addrSBankSel_T_8, 2, 0) @[FFTDataProcess.scala 142:73]
    node _addrTBankSelPre_sum_T = dshr(addrT, UInt<2>("h2")) @[FFTDataProcess.scala 136:115]
    node _addrTBankSelPre_sum_T_1 = bits(_addrTBankSelPre_sum_T, 0, 0) @[FFTDataProcess.scala 136:115]
    node _addrTBankSelPre_sum_T_2 = add(UInt<3>("h0"), _addrTBankSelPre_sum_T_1) @[FFTDataProcess.scala 136:107]
    node _addrTBankSelPre_sum_T_3 = tail(_addrTBankSelPre_sum_T_2, 1) @[FFTDataProcess.scala 136:107]
    node _addrTBankSelPre_sum_T_4 = dshr(addrT, UInt<3>("h5")) @[FFTDataProcess.scala 136:115]
    node _addrTBankSelPre_sum_T_5 = bits(_addrTBankSelPre_sum_T_4, 0, 0) @[FFTDataProcess.scala 136:115]
    node _addrTBankSelPre_sum_T_6 = add(_addrTBankSelPre_sum_T_3, _addrTBankSelPre_sum_T_5) @[FFTDataProcess.scala 136:107]
    node addrTBankSelPre_0 = tail(_addrTBankSelPre_sum_T_6, 1) @[FFTDataProcess.scala 136:107]
    node _addrTBankSelPre_sum_T_7 = dshr(addrT, UInt<1>("h1")) @[FFTDataProcess.scala 136:115]
    node _addrTBankSelPre_sum_T_8 = bits(_addrTBankSelPre_sum_T_7, 0, 0) @[FFTDataProcess.scala 136:115]
    node _addrTBankSelPre_sum_T_9 = add(UInt<3>("h0"), _addrTBankSelPre_sum_T_8) @[FFTDataProcess.scala 136:107]
    node _addrTBankSelPre_sum_T_10 = tail(_addrTBankSelPre_sum_T_9, 1) @[FFTDataProcess.scala 136:107]
    node _addrTBankSelPre_sum_T_11 = dshr(addrT, UInt<3>("h4")) @[FFTDataProcess.scala 136:115]
    node _addrTBankSelPre_sum_T_12 = bits(_addrTBankSelPre_sum_T_11, 0, 0) @[FFTDataProcess.scala 136:115]
    node _addrTBankSelPre_sum_T_13 = add(_addrTBankSelPre_sum_T_10, _addrTBankSelPre_sum_T_12) @[FFTDataProcess.scala 136:107]
    node addrTBankSelPre_1 = tail(_addrTBankSelPre_sum_T_13, 1) @[FFTDataProcess.scala 136:107]
    node _addrTBankSelPre_sum_T_14 = dshr(addrT, UInt<1>("h0")) @[FFTDataProcess.scala 136:115]
    node _addrTBankSelPre_sum_T_15 = bits(_addrTBankSelPre_sum_T_14, 0, 0) @[FFTDataProcess.scala 136:115]
    node _addrTBankSelPre_sum_T_16 = add(UInt<3>("h0"), _addrTBankSelPre_sum_T_15) @[FFTDataProcess.scala 136:107]
    node _addrTBankSelPre_sum_T_17 = tail(_addrTBankSelPre_sum_T_16, 1) @[FFTDataProcess.scala 136:107]
    node _addrTBankSelPre_sum_T_18 = dshr(addrT, UInt<2>("h3")) @[FFTDataProcess.scala 136:115]
    node _addrTBankSelPre_sum_T_19 = bits(_addrTBankSelPre_sum_T_18, 0, 0) @[FFTDataProcess.scala 136:115]
    node _addrTBankSelPre_sum_T_20 = add(_addrTBankSelPre_sum_T_17, _addrTBankSelPre_sum_T_19) @[FFTDataProcess.scala 136:107]
    node _addrTBankSelPre_sum_T_21 = tail(_addrTBankSelPre_sum_T_20, 1) @[FFTDataProcess.scala 136:107]
    node _addrTBankSelPre_sum_T_22 = dshr(addrT, UInt<3>("h6")) @[FFTDataProcess.scala 136:115]
    node _addrTBankSelPre_sum_T_23 = bits(_addrTBankSelPre_sum_T_22, 0, 0) @[FFTDataProcess.scala 136:115]
    node _addrTBankSelPre_sum_T_24 = add(_addrTBankSelPre_sum_T_21, _addrTBankSelPre_sum_T_23) @[FFTDataProcess.scala 136:107]
    node addrTBankSelPre_2 = tail(_addrTBankSelPre_sum_T_24, 1) @[FFTDataProcess.scala 136:107]
    node _addrTBankSel_T = shl(UInt<1>("h0"), 1) @[FFTDataProcess.scala 146:63]
    node _addrTBankSel_T_1 = add(_addrTBankSel_T, addrTBankSelPre_0) @[FFTDataProcess.scala 146:69]
    node _addrTBankSel_T_2 = tail(_addrTBankSel_T_1, 1) @[FFTDataProcess.scala 146:69]
    node _addrTBankSel_T_3 = shl(_addrTBankSel_T_2, 1) @[FFTDataProcess.scala 146:63]
    node _addrTBankSel_T_4 = add(_addrTBankSel_T_3, addrTBankSelPre_1) @[FFTDataProcess.scala 146:69]
    node _addrTBankSel_T_5 = tail(_addrTBankSel_T_4, 1) @[FFTDataProcess.scala 146:69]
    node _addrTBankSel_T_6 = shl(_addrTBankSel_T_5, 1) @[FFTDataProcess.scala 146:63]
    node _addrTBankSel_T_7 = add(_addrTBankSel_T_6, addrTBankSelPre_2) @[FFTDataProcess.scala 146:69]
    node _addrTBankSel_T_8 = tail(_addrTBankSel_T_7, 1) @[FFTDataProcess.scala 146:69]
    node addrTBankSel = bits(_addrTBankSel_T_8, 2, 0) @[FFTDataProcess.scala 146:73]
    node _T_8 = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 148:20]
    when _T_8 : @[FFTDataProcess.scala 148:29]
      node _io_addrSram0Bank_T = bits(addrS, 3, 0) @[FFTDataProcess.scala 149:48]
      io.addrSram0Bank[addrSBankSel] <= _io_addrSram0Bank_T @[FFTDataProcess.scala 149:40]
      node _io_addrSram0Bank_T_1 = bits(addrT, 3, 0) @[FFTDataProcess.scala 150:48]
      io.addrSram0Bank[addrTBankSel] <= _io_addrSram0Bank_T_1 @[FFTDataProcess.scala 150:40]
    else :
      node _io_addrSram1Bank_T = bits(addrS, 3, 0) @[FFTDataProcess.scala 152:48]
      io.addrSram1Bank[addrSBankSel] <= _io_addrSram1Bank_T @[FFTDataProcess.scala 152:40]
      node _io_addrSram1Bank_T_1 = bits(addrT, 3, 0) @[FFTDataProcess.scala 153:48]
      io.addrSram1Bank[addrTBankSel] <= _io_addrSram1Bank_T_1 @[FFTDataProcess.scala 153:40]
    node _T_9 = eq(UInt<1>("h0"), addrSBankSel) @[FFTDataProcess.scala 157:19]
    node _T_10 = eq(UInt<1>("h0"), addrTBankSel) @[FFTDataProcess.scala 157:45]
    node _T_11 = or(_T_9, _T_10) @[FFTDataProcess.scala 157:37]
    when _T_11 : @[FFTDataProcess.scala 157:64]
      node _io_readEnableSram0Bank_0_T = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 158:55]
      node _io_readEnableSram0Bank_0_T_1 = and(procState, _io_readEnableSram0Bank_0_T) @[FFTDataProcess.scala 158:53]
      io.readEnableSram0Bank[0] <= _io_readEnableSram0Bank_0_T_1 @[FFTDataProcess.scala 158:39]
      node _io_readEnableSram0Bank_0_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 159:55]
      node _io_readEnableSram0Bank_0_T_3 = and(procState, _io_readEnableSram0Bank_0_T_2) @[FFTDataProcess.scala 159:53]
      io.readEnableSram0Bank[0] <= _io_readEnableSram0Bank_0_T_3 @[FFTDataProcess.scala 159:39]
      node _io_readEnableSram1Bank_0_T = and(procState, srcBuffer) @[FFTDataProcess.scala 160:53]
      io.readEnableSram1Bank[0] <= _io_readEnableSram1Bank_0_T @[FFTDataProcess.scala 160:39]
      node _io_readEnableSram1Bank_0_T_1 = and(procState, srcBuffer) @[FFTDataProcess.scala 161:53]
      io.readEnableSram1Bank[0] <= _io_readEnableSram1Bank_0_T_1 @[FFTDataProcess.scala 161:39]
    else :
      io.readEnableSram0Bank[0] <= UInt<1>("h0") @[FFTDataProcess.scala 163:39]
      io.readEnableSram0Bank[0] <= UInt<1>("h0") @[FFTDataProcess.scala 164:39]
      io.readEnableSram1Bank[0] <= UInt<1>("h0") @[FFTDataProcess.scala 165:39]
      io.readEnableSram1Bank[0] <= UInt<1>("h0") @[FFTDataProcess.scala 166:39]
    node _T_12 = eq(UInt<1>("h1"), addrSBankSel) @[FFTDataProcess.scala 157:19]
    node _T_13 = eq(UInt<1>("h1"), addrTBankSel) @[FFTDataProcess.scala 157:45]
    node _T_14 = or(_T_12, _T_13) @[FFTDataProcess.scala 157:37]
    when _T_14 : @[FFTDataProcess.scala 157:64]
      node _io_readEnableSram0Bank_1_T = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 158:55]
      node _io_readEnableSram0Bank_1_T_1 = and(procState, _io_readEnableSram0Bank_1_T) @[FFTDataProcess.scala 158:53]
      io.readEnableSram0Bank[1] <= _io_readEnableSram0Bank_1_T_1 @[FFTDataProcess.scala 158:39]
      node _io_readEnableSram0Bank_1_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 159:55]
      node _io_readEnableSram0Bank_1_T_3 = and(procState, _io_readEnableSram0Bank_1_T_2) @[FFTDataProcess.scala 159:53]
      io.readEnableSram0Bank[1] <= _io_readEnableSram0Bank_1_T_3 @[FFTDataProcess.scala 159:39]
      node _io_readEnableSram1Bank_1_T = and(procState, srcBuffer) @[FFTDataProcess.scala 160:53]
      io.readEnableSram1Bank[1] <= _io_readEnableSram1Bank_1_T @[FFTDataProcess.scala 160:39]
      node _io_readEnableSram1Bank_1_T_1 = and(procState, srcBuffer) @[FFTDataProcess.scala 161:53]
      io.readEnableSram1Bank[1] <= _io_readEnableSram1Bank_1_T_1 @[FFTDataProcess.scala 161:39]
    else :
      io.readEnableSram0Bank[1] <= UInt<1>("h0") @[FFTDataProcess.scala 163:39]
      io.readEnableSram0Bank[1] <= UInt<1>("h0") @[FFTDataProcess.scala 164:39]
      io.readEnableSram1Bank[1] <= UInt<1>("h0") @[FFTDataProcess.scala 165:39]
      io.readEnableSram1Bank[1] <= UInt<1>("h0") @[FFTDataProcess.scala 166:39]
    node _T_15 = eq(UInt<2>("h2"), addrSBankSel) @[FFTDataProcess.scala 157:19]
    node _T_16 = eq(UInt<2>("h2"), addrTBankSel) @[FFTDataProcess.scala 157:45]
    node _T_17 = or(_T_15, _T_16) @[FFTDataProcess.scala 157:37]
    when _T_17 : @[FFTDataProcess.scala 157:64]
      node _io_readEnableSram0Bank_2_T = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 158:55]
      node _io_readEnableSram0Bank_2_T_1 = and(procState, _io_readEnableSram0Bank_2_T) @[FFTDataProcess.scala 158:53]
      io.readEnableSram0Bank[2] <= _io_readEnableSram0Bank_2_T_1 @[FFTDataProcess.scala 158:39]
      node _io_readEnableSram0Bank_2_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 159:55]
      node _io_readEnableSram0Bank_2_T_3 = and(procState, _io_readEnableSram0Bank_2_T_2) @[FFTDataProcess.scala 159:53]
      io.readEnableSram0Bank[2] <= _io_readEnableSram0Bank_2_T_3 @[FFTDataProcess.scala 159:39]
      node _io_readEnableSram1Bank_2_T = and(procState, srcBuffer) @[FFTDataProcess.scala 160:53]
      io.readEnableSram1Bank[2] <= _io_readEnableSram1Bank_2_T @[FFTDataProcess.scala 160:39]
      node _io_readEnableSram1Bank_2_T_1 = and(procState, srcBuffer) @[FFTDataProcess.scala 161:53]
      io.readEnableSram1Bank[2] <= _io_readEnableSram1Bank_2_T_1 @[FFTDataProcess.scala 161:39]
    else :
      io.readEnableSram0Bank[2] <= UInt<1>("h0") @[FFTDataProcess.scala 163:39]
      io.readEnableSram0Bank[2] <= UInt<1>("h0") @[FFTDataProcess.scala 164:39]
      io.readEnableSram1Bank[2] <= UInt<1>("h0") @[FFTDataProcess.scala 165:39]
      io.readEnableSram1Bank[2] <= UInt<1>("h0") @[FFTDataProcess.scala 166:39]
    node _T_18 = eq(UInt<2>("h3"), addrSBankSel) @[FFTDataProcess.scala 157:19]
    node _T_19 = eq(UInt<2>("h3"), addrTBankSel) @[FFTDataProcess.scala 157:45]
    node _T_20 = or(_T_18, _T_19) @[FFTDataProcess.scala 157:37]
    when _T_20 : @[FFTDataProcess.scala 157:64]
      node _io_readEnableSram0Bank_3_T = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 158:55]
      node _io_readEnableSram0Bank_3_T_1 = and(procState, _io_readEnableSram0Bank_3_T) @[FFTDataProcess.scala 158:53]
      io.readEnableSram0Bank[3] <= _io_readEnableSram0Bank_3_T_1 @[FFTDataProcess.scala 158:39]
      node _io_readEnableSram0Bank_3_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 159:55]
      node _io_readEnableSram0Bank_3_T_3 = and(procState, _io_readEnableSram0Bank_3_T_2) @[FFTDataProcess.scala 159:53]
      io.readEnableSram0Bank[3] <= _io_readEnableSram0Bank_3_T_3 @[FFTDataProcess.scala 159:39]
      node _io_readEnableSram1Bank_3_T = and(procState, srcBuffer) @[FFTDataProcess.scala 160:53]
      io.readEnableSram1Bank[3] <= _io_readEnableSram1Bank_3_T @[FFTDataProcess.scala 160:39]
      node _io_readEnableSram1Bank_3_T_1 = and(procState, srcBuffer) @[FFTDataProcess.scala 161:53]
      io.readEnableSram1Bank[3] <= _io_readEnableSram1Bank_3_T_1 @[FFTDataProcess.scala 161:39]
    else :
      io.readEnableSram0Bank[3] <= UInt<1>("h0") @[FFTDataProcess.scala 163:39]
      io.readEnableSram0Bank[3] <= UInt<1>("h0") @[FFTDataProcess.scala 164:39]
      io.readEnableSram1Bank[3] <= UInt<1>("h0") @[FFTDataProcess.scala 165:39]
      io.readEnableSram1Bank[3] <= UInt<1>("h0") @[FFTDataProcess.scala 166:39]
    node _T_21 = eq(UInt<3>("h4"), addrSBankSel) @[FFTDataProcess.scala 157:19]
    node _T_22 = eq(UInt<3>("h4"), addrTBankSel) @[FFTDataProcess.scala 157:45]
    node _T_23 = or(_T_21, _T_22) @[FFTDataProcess.scala 157:37]
    when _T_23 : @[FFTDataProcess.scala 157:64]
      node _io_readEnableSram0Bank_4_T = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 158:55]
      node _io_readEnableSram0Bank_4_T_1 = and(procState, _io_readEnableSram0Bank_4_T) @[FFTDataProcess.scala 158:53]
      io.readEnableSram0Bank[4] <= _io_readEnableSram0Bank_4_T_1 @[FFTDataProcess.scala 158:39]
      node _io_readEnableSram0Bank_4_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 159:55]
      node _io_readEnableSram0Bank_4_T_3 = and(procState, _io_readEnableSram0Bank_4_T_2) @[FFTDataProcess.scala 159:53]
      io.readEnableSram0Bank[4] <= _io_readEnableSram0Bank_4_T_3 @[FFTDataProcess.scala 159:39]
      node _io_readEnableSram1Bank_4_T = and(procState, srcBuffer) @[FFTDataProcess.scala 160:53]
      io.readEnableSram1Bank[4] <= _io_readEnableSram1Bank_4_T @[FFTDataProcess.scala 160:39]
      node _io_readEnableSram1Bank_4_T_1 = and(procState, srcBuffer) @[FFTDataProcess.scala 161:53]
      io.readEnableSram1Bank[4] <= _io_readEnableSram1Bank_4_T_1 @[FFTDataProcess.scala 161:39]
    else :
      io.readEnableSram0Bank[4] <= UInt<1>("h0") @[FFTDataProcess.scala 163:39]
      io.readEnableSram0Bank[4] <= UInt<1>("h0") @[FFTDataProcess.scala 164:39]
      io.readEnableSram1Bank[4] <= UInt<1>("h0") @[FFTDataProcess.scala 165:39]
      io.readEnableSram1Bank[4] <= UInt<1>("h0") @[FFTDataProcess.scala 166:39]
    node _T_24 = eq(UInt<3>("h5"), addrSBankSel) @[FFTDataProcess.scala 157:19]
    node _T_25 = eq(UInt<3>("h5"), addrTBankSel) @[FFTDataProcess.scala 157:45]
    node _T_26 = or(_T_24, _T_25) @[FFTDataProcess.scala 157:37]
    when _T_26 : @[FFTDataProcess.scala 157:64]
      node _io_readEnableSram0Bank_5_T = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 158:55]
      node _io_readEnableSram0Bank_5_T_1 = and(procState, _io_readEnableSram0Bank_5_T) @[FFTDataProcess.scala 158:53]
      io.readEnableSram0Bank[5] <= _io_readEnableSram0Bank_5_T_1 @[FFTDataProcess.scala 158:39]
      node _io_readEnableSram0Bank_5_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 159:55]
      node _io_readEnableSram0Bank_5_T_3 = and(procState, _io_readEnableSram0Bank_5_T_2) @[FFTDataProcess.scala 159:53]
      io.readEnableSram0Bank[5] <= _io_readEnableSram0Bank_5_T_3 @[FFTDataProcess.scala 159:39]
      node _io_readEnableSram1Bank_5_T = and(procState, srcBuffer) @[FFTDataProcess.scala 160:53]
      io.readEnableSram1Bank[5] <= _io_readEnableSram1Bank_5_T @[FFTDataProcess.scala 160:39]
      node _io_readEnableSram1Bank_5_T_1 = and(procState, srcBuffer) @[FFTDataProcess.scala 161:53]
      io.readEnableSram1Bank[5] <= _io_readEnableSram1Bank_5_T_1 @[FFTDataProcess.scala 161:39]
    else :
      io.readEnableSram0Bank[5] <= UInt<1>("h0") @[FFTDataProcess.scala 163:39]
      io.readEnableSram0Bank[5] <= UInt<1>("h0") @[FFTDataProcess.scala 164:39]
      io.readEnableSram1Bank[5] <= UInt<1>("h0") @[FFTDataProcess.scala 165:39]
      io.readEnableSram1Bank[5] <= UInt<1>("h0") @[FFTDataProcess.scala 166:39]
    node _T_27 = eq(UInt<3>("h6"), addrSBankSel) @[FFTDataProcess.scala 157:19]
    node _T_28 = eq(UInt<3>("h6"), addrTBankSel) @[FFTDataProcess.scala 157:45]
    node _T_29 = or(_T_27, _T_28) @[FFTDataProcess.scala 157:37]
    when _T_29 : @[FFTDataProcess.scala 157:64]
      node _io_readEnableSram0Bank_6_T = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 158:55]
      node _io_readEnableSram0Bank_6_T_1 = and(procState, _io_readEnableSram0Bank_6_T) @[FFTDataProcess.scala 158:53]
      io.readEnableSram0Bank[6] <= _io_readEnableSram0Bank_6_T_1 @[FFTDataProcess.scala 158:39]
      node _io_readEnableSram0Bank_6_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 159:55]
      node _io_readEnableSram0Bank_6_T_3 = and(procState, _io_readEnableSram0Bank_6_T_2) @[FFTDataProcess.scala 159:53]
      io.readEnableSram0Bank[6] <= _io_readEnableSram0Bank_6_T_3 @[FFTDataProcess.scala 159:39]
      node _io_readEnableSram1Bank_6_T = and(procState, srcBuffer) @[FFTDataProcess.scala 160:53]
      io.readEnableSram1Bank[6] <= _io_readEnableSram1Bank_6_T @[FFTDataProcess.scala 160:39]
      node _io_readEnableSram1Bank_6_T_1 = and(procState, srcBuffer) @[FFTDataProcess.scala 161:53]
      io.readEnableSram1Bank[6] <= _io_readEnableSram1Bank_6_T_1 @[FFTDataProcess.scala 161:39]
    else :
      io.readEnableSram0Bank[6] <= UInt<1>("h0") @[FFTDataProcess.scala 163:39]
      io.readEnableSram0Bank[6] <= UInt<1>("h0") @[FFTDataProcess.scala 164:39]
      io.readEnableSram1Bank[6] <= UInt<1>("h0") @[FFTDataProcess.scala 165:39]
      io.readEnableSram1Bank[6] <= UInt<1>("h0") @[FFTDataProcess.scala 166:39]
    node _T_30 = eq(UInt<3>("h7"), addrSBankSel) @[FFTDataProcess.scala 157:19]
    node _T_31 = eq(UInt<3>("h7"), addrTBankSel) @[FFTDataProcess.scala 157:45]
    node _T_32 = or(_T_30, _T_31) @[FFTDataProcess.scala 157:37]
    when _T_32 : @[FFTDataProcess.scala 157:64]
      node _io_readEnableSram0Bank_7_T = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 158:55]
      node _io_readEnableSram0Bank_7_T_1 = and(procState, _io_readEnableSram0Bank_7_T) @[FFTDataProcess.scala 158:53]
      io.readEnableSram0Bank[7] <= _io_readEnableSram0Bank_7_T_1 @[FFTDataProcess.scala 158:39]
      node _io_readEnableSram0Bank_7_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 159:55]
      node _io_readEnableSram0Bank_7_T_3 = and(procState, _io_readEnableSram0Bank_7_T_2) @[FFTDataProcess.scala 159:53]
      io.readEnableSram0Bank[7] <= _io_readEnableSram0Bank_7_T_3 @[FFTDataProcess.scala 159:39]
      node _io_readEnableSram1Bank_7_T = and(procState, srcBuffer) @[FFTDataProcess.scala 160:53]
      io.readEnableSram1Bank[7] <= _io_readEnableSram1Bank_7_T @[FFTDataProcess.scala 160:39]
      node _io_readEnableSram1Bank_7_T_1 = and(procState, srcBuffer) @[FFTDataProcess.scala 161:53]
      io.readEnableSram1Bank[7] <= _io_readEnableSram1Bank_7_T_1 @[FFTDataProcess.scala 161:39]
    else :
      io.readEnableSram0Bank[7] <= UInt<1>("h0") @[FFTDataProcess.scala 163:39]
      io.readEnableSram0Bank[7] <= UInt<1>("h0") @[FFTDataProcess.scala 164:39]
      io.readEnableSram1Bank[7] <= UInt<1>("h0") @[FFTDataProcess.scala 165:39]
      io.readEnableSram1Bank[7] <= UInt<1>("h0") @[FFTDataProcess.scala 166:39]
    reg addrSBankSel1c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSel1c <= addrSBankSel @[Reg.scala 36:22]
    reg addrSBankSel2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSel2c <= addrSBankSel1c @[Reg.scala 36:22]
    reg addrSBankSel3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrSBankSel3c <= addrSBankSel2c @[Reg.scala 36:22]
    reg addrTBankSel1c : UInt, clock with :
      reset => (reset, UInt<1>("h1")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSel1c <= addrTBankSel @[Reg.scala 36:22]
    reg addrTBankSel2c : UInt, clock with :
      reset => (reset, UInt<1>("h1")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSel2c <= addrTBankSel1c @[Reg.scala 36:22]
    reg addrTBankSel3c : UInt, clock with :
      reset => (reset, UInt<1>("h1")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrTBankSel3c <= addrTBankSel2c @[Reg.scala 36:22]
    reg procState1c : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      procState1c <= procState @[Reg.scala 36:22]
    reg procState2c : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      procState2c <= procState1c @[Reg.scala 36:22]
    reg procState3c : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      procState3c <= procState2c @[Reg.scala 36:22]
    node _addrS1c_T = bits(addrS, 3, 0) @[FFTDataProcess.scala 182:38]
    reg addrS1c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS1c <= _addrS1c_T @[Reg.scala 36:22]
    reg addrS2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS2c <= addrS1c @[Reg.scala 36:22]
    reg addrS3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrS3c <= addrS2c @[Reg.scala 36:22]
    node _addrT1c_T = bits(addrT, 3, 0) @[FFTDataProcess.scala 186:38]
    reg addrT1c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT1c <= _addrT1c_T @[Reg.scala 36:22]
    reg addrT2c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT2c <= addrT1c @[Reg.scala 36:22]
    reg addrT3c : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      addrT3c <= addrT2c @[Reg.scala 36:22]
    reg sameAddr1c : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      sameAddr1c <= sameAddr @[Reg.scala 36:22]
    reg sameAddr2c : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      sameAddr2c <= sameAddr1c @[Reg.scala 36:22]
    reg sameAddr3c : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Reg.scala 35:20]
    when UInt<1>("h1") : @[Reg.scala 36:18]
      sameAddr3c <= sameAddr2c @[Reg.scala 36:22]
    node _dataInSR_T = or(addrSBankSel1c, UInt<3>("h0"))
    node _dataInSR_T_1 = bits(_dataInSR_T, 2, 0)
    node _dataInSR_T_2 = bits(io.readDataSram1Bank[_dataInSR_T_1], 15, 0) @[FFTDataProcess.scala 194:71]
    node _dataInSR_T_3 = or(addrSBankSel1c, UInt<3>("h0"))
    node _dataInSR_T_4 = bits(_dataInSR_T_3, 2, 0)
    node _dataInSR_T_5 = bits(io.readDataSram0Bank[_dataInSR_T_4], 15, 0) @[FFTDataProcess.scala 194:130]
    node dataInSR = mux(srcBuffer, _dataInSR_T_2, _dataInSR_T_5) @[FFTDataProcess.scala 194:23]
    node _dataInSI_T = or(addrSBankSel1c, UInt<3>("h0"))
    node _dataInSI_T_1 = bits(_dataInSI_T, 2, 0)
    node _dataInSI_T_2 = bits(io.readDataSram1Bank[_dataInSI_T_1], 31, 16) @[FFTDataProcess.scala 195:71]
    node _dataInSI_T_3 = or(addrSBankSel1c, UInt<3>("h0"))
    node _dataInSI_T_4 = bits(_dataInSI_T_3, 2, 0)
    node _dataInSI_T_5 = bits(io.readDataSram0Bank[_dataInSI_T_4], 31, 16) @[FFTDataProcess.scala 195:155]
    node dataInSI = mux(srcBuffer, _dataInSI_T_2, _dataInSI_T_5) @[FFTDataProcess.scala 195:23]
    node _dataInTR_T = or(addrTBankSel1c, UInt<3>("h0"))
    node _dataInTR_T_1 = bits(_dataInTR_T, 2, 0)
    node _dataInTR_T_2 = bits(io.readDataSram1Bank[_dataInTR_T_1], 15, 0) @[FFTDataProcess.scala 197:71]
    node _dataInTR_T_3 = or(addrTBankSel1c, UInt<3>("h0"))
    node _dataInTR_T_4 = bits(_dataInTR_T_3, 2, 0)
    node _dataInTR_T_5 = bits(io.readDataSram0Bank[_dataInTR_T_4], 15, 0) @[FFTDataProcess.scala 197:130]
    node dataInTR = mux(srcBuffer, _dataInTR_T_2, _dataInTR_T_5) @[FFTDataProcess.scala 197:23]
    node _dataInTI_T = or(addrTBankSel1c, UInt<3>("h0"))
    node _dataInTI_T_1 = bits(_dataInTI_T, 2, 0)
    node _dataInTI_T_2 = bits(io.readDataSram1Bank[_dataInTI_T_1], 31, 16) @[FFTDataProcess.scala 198:71]
    node _dataInTI_T_3 = or(addrTBankSel1c, UInt<3>("h0"))
    node _dataInTI_T_4 = bits(_dataInTI_T_3, 2, 0)
    node _dataInTI_T_5 = bits(io.readDataSram0Bank[_dataInTI_T_4], 31, 16) @[FFTDataProcess.scala 198:155]
    node dataInTI = mux(srcBuffer, _dataInTI_T_2, _dataInTI_T_5) @[FFTDataProcess.scala 198:23]
    inst dataCalc of FFT3PipelineCalc @[FFTDataProcess.scala 200:26]
    dataCalc.clock <= clock
    dataCalc.reset <= reset
    dataCalc.io.dataInSR <= dataInSR @[FFTDataProcess.scala 201:26]
    node _dataCalc_io_dataInSI_T = eq(phaseCount, UInt<1>("h1")) @[FFTDataProcess.scala 202:58]
    node _dataCalc_io_dataInSI_T_1 = and(sameAddr1c, _dataCalc_io_dataInSI_T) @[FFTDataProcess.scala 202:44]
    node _dataCalc_io_dataInSI_T_2 = mux(_dataCalc_io_dataInSI_T_1, UInt<1>("h0"), dataInSI) @[FFTDataProcess.scala 202:32]
    dataCalc.io.dataInSI <= _dataCalc_io_dataInSI_T_2 @[FFTDataProcess.scala 202:26]
    node _dataCalc_io_dataInTR_T = eq(phaseCount, UInt<1>("h1")) @[FFTDataProcess.scala 203:58]
    node _dataCalc_io_dataInTR_T_1 = and(sameAddr1c, _dataCalc_io_dataInTR_T) @[FFTDataProcess.scala 203:44]
    node _dataCalc_io_dataInTR_T_2 = mux(_dataCalc_io_dataInTR_T_1, dataInTI, dataInTR) @[FFTDataProcess.scala 203:32]
    dataCalc.io.dataInTR <= _dataCalc_io_dataInTR_T_2 @[FFTDataProcess.scala 203:26]
    node _dataCalc_io_dataInTI_T = eq(phaseCount, UInt<1>("h1")) @[FFTDataProcess.scala 204:58]
    node _dataCalc_io_dataInTI_T_1 = and(sameAddr1c, _dataCalc_io_dataInTI_T) @[FFTDataProcess.scala 204:44]
    node _dataCalc_io_dataInTI_T_2 = mux(_dataCalc_io_dataInTI_T_1, UInt<1>("h0"), dataInTI) @[FFTDataProcess.scala 204:32]
    dataCalc.io.dataInTI <= _dataCalc_io_dataInTI_T_2 @[FFTDataProcess.scala 204:26]
    node _dataCalc_io_nk_T = bits(radixCount, 6, 0) @[FFTDataProcess.scala 205:33]
    dataCalc.io.nk <= _dataCalc_io_nk_T @[FFTDataProcess.scala 205:20]
    node _dataCalc_io_rShiftSym_T = bits(phaseCount, 0, 0) @[FFTDataProcess.scala 206:40]
    dataCalc.io.rShiftSym <= _dataCalc_io_rShiftSym_T @[FFTDataProcess.scala 206:27]
    dataCalc.io.isFFT <= isFFT @[FFTDataProcess.scala 207:23]
    node _dataCalc_io_dataMode_T = bits(phaseCount, 0, 0) @[FFTDataProcess.scala 208:40]
    node _dataCalc_io_dataMode_T_1 = not(_dataCalc_io_dataMode_T) @[FFTDataProcess.scala 208:29]
    dataCalc.io.dataMode <= _dataCalc_io_dataMode_T_1 @[FFTDataProcess.scala 208:26]
    dataCalc.io.state1c <= procState1c @[FFTDataProcess.scala 209:25]
    dataCalc.io.state2c <= procState2c @[FFTDataProcess.scala 210:25]
    node _writeDataTRPre_T = eq(phaseCount, UInt<1>("h1")) @[FFTDataProcess.scala 213:41]
    node writeDataTRPre = mux(_writeDataTRPre_T, dataCalc.io.dataOutTR3c, dataCalc.io.dataOutTI3c) @[FFTDataProcess.scala 213:29]
    node _writeDataTIPre_T = eq(phaseCount, UInt<1>("h1")) @[FFTDataProcess.scala 214:41]
    node _writeDataTIPre_T_1 = not(dataCalc.io.dataOutTI3c) @[FFTDataProcess.scala 214:50]
    node _writeDataTIPre_T_2 = add(_writeDataTIPre_T_1, UInt<1>("h1")) @[FFTDataProcess.scala 214:75]
    node _writeDataTIPre_T_3 = tail(_writeDataTIPre_T_2, 1) @[FFTDataProcess.scala 214:75]
    node _writeDataTIPre_T_4 = not(dataCalc.io.dataOutTR3c) @[FFTDataProcess.scala 214:82]
    node _writeDataTIPre_T_5 = add(_writeDataTIPre_T_4, UInt<1>("h1")) @[FFTDataProcess.scala 214:107]
    node _writeDataTIPre_T_6 = tail(_writeDataTIPre_T_5, 1) @[FFTDataProcess.scala 214:107]
    node writeDataTIPre = mux(_writeDataTIPre_T, _writeDataTIPre_T_3, _writeDataTIPre_T_6) @[FFTDataProcess.scala 214:29]
    wire writeDataS : UInt @[FFTDataProcess.scala 216:26]
    wire writeDataT : UInt @[FFTDataProcess.scala 217:26]
    when sameAddr3c : @[FFTDataProcess.scala 218:22]
      node _writeDataS_T = cat(writeDataTIPre, dataCalc.io.dataOutSR3c) @[Cat.scala 33:92]
      writeDataS <= _writeDataS_T @[FFTDataProcess.scala 219:20]
      node _writeDataT_T = eq(phaseCount, UInt<1>("h0")) @[FFTDataProcess.scala 220:38]
      node _writeDataT_T_1 = cat(writeDataTRPre, dataCalc.io.dataOutSR3c) @[Cat.scala 33:92]
      node _writeDataT_T_2 = cat(dataCalc.io.dataOutSI3c, dataCalc.io.dataOutSR3c) @[Cat.scala 33:92]
      node _writeDataT_T_3 = mux(_writeDataT_T, _writeDataT_T_1, _writeDataT_T_2) @[FFTDataProcess.scala 220:26]
      writeDataT <= _writeDataT_T_3 @[FFTDataProcess.scala 220:20]
    else :
      node _writeDataS_T_1 = cat(dataCalc.io.dataOutSI3c, dataCalc.io.dataOutSR3c) @[Cat.scala 33:92]
      writeDataS <= _writeDataS_T_1 @[FFTDataProcess.scala 222:20]
      node _writeDataT_T_4 = cat(writeDataTIPre, writeDataTRPre) @[Cat.scala 33:92]
      writeDataT <= _writeDataT_T_4 @[FFTDataProcess.scala 223:20]
    node _T_33 = eq(UInt<1>("h0"), addrSBankSel3c) @[FFTDataProcess.scala 227:19]
    node _T_34 = eq(UInt<1>("h0"), addrTBankSel3c) @[FFTDataProcess.scala 227:47]
    node _T_35 = or(_T_33, _T_34) @[FFTDataProcess.scala 227:39]
    when _T_35 : @[FFTDataProcess.scala 227:68]
      node _io_writeEnableSram0Bank_0_T = and(srcBuffer, procState3c) @[FFTDataProcess.scala 228:53]
      io.writeEnableSram0Bank[0] <= _io_writeEnableSram0Bank_0_T @[FFTDataProcess.scala 228:40]
      node _io_writeEnableSram0Bank_0_T_1 = and(srcBuffer, procState3c) @[FFTDataProcess.scala 229:53]
      io.writeEnableSram0Bank[0] <= _io_writeEnableSram0Bank_0_T_1 @[FFTDataProcess.scala 229:40]
      node _io_writeEnableSram1Bank_0_T = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 230:43]
      node _io_writeEnableSram1Bank_0_T_1 = and(_io_writeEnableSram1Bank_0_T, procState3c) @[FFTDataProcess.scala 230:54]
      io.writeEnableSram1Bank[0] <= _io_writeEnableSram1Bank_0_T_1 @[FFTDataProcess.scala 230:40]
      node _io_writeEnableSram1Bank_0_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 231:43]
      node _io_writeEnableSram1Bank_0_T_3 = and(_io_writeEnableSram1Bank_0_T_2, procState3c) @[FFTDataProcess.scala 231:54]
      io.writeEnableSram1Bank[0] <= _io_writeEnableSram1Bank_0_T_3 @[FFTDataProcess.scala 231:40]
    else :
      io.writeEnableSram0Bank[0] <= UInt<1>("h0") @[FFTDataProcess.scala 233:40]
      io.writeEnableSram0Bank[0] <= UInt<1>("h0") @[FFTDataProcess.scala 234:40]
      io.writeEnableSram1Bank[0] <= UInt<1>("h0") @[FFTDataProcess.scala 235:40]
      io.writeEnableSram1Bank[0] <= UInt<1>("h0") @[FFTDataProcess.scala 236:40]
    node _T_36 = eq(UInt<1>("h1"), addrSBankSel3c) @[FFTDataProcess.scala 227:19]
    node _T_37 = eq(UInt<1>("h1"), addrTBankSel3c) @[FFTDataProcess.scala 227:47]
    node _T_38 = or(_T_36, _T_37) @[FFTDataProcess.scala 227:39]
    when _T_38 : @[FFTDataProcess.scala 227:68]
      node _io_writeEnableSram0Bank_1_T = and(srcBuffer, procState3c) @[FFTDataProcess.scala 228:53]
      io.writeEnableSram0Bank[1] <= _io_writeEnableSram0Bank_1_T @[FFTDataProcess.scala 228:40]
      node _io_writeEnableSram0Bank_1_T_1 = and(srcBuffer, procState3c) @[FFTDataProcess.scala 229:53]
      io.writeEnableSram0Bank[1] <= _io_writeEnableSram0Bank_1_T_1 @[FFTDataProcess.scala 229:40]
      node _io_writeEnableSram1Bank_1_T = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 230:43]
      node _io_writeEnableSram1Bank_1_T_1 = and(_io_writeEnableSram1Bank_1_T, procState3c) @[FFTDataProcess.scala 230:54]
      io.writeEnableSram1Bank[1] <= _io_writeEnableSram1Bank_1_T_1 @[FFTDataProcess.scala 230:40]
      node _io_writeEnableSram1Bank_1_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 231:43]
      node _io_writeEnableSram1Bank_1_T_3 = and(_io_writeEnableSram1Bank_1_T_2, procState3c) @[FFTDataProcess.scala 231:54]
      io.writeEnableSram1Bank[1] <= _io_writeEnableSram1Bank_1_T_3 @[FFTDataProcess.scala 231:40]
    else :
      io.writeEnableSram0Bank[1] <= UInt<1>("h0") @[FFTDataProcess.scala 233:40]
      io.writeEnableSram0Bank[1] <= UInt<1>("h0") @[FFTDataProcess.scala 234:40]
      io.writeEnableSram1Bank[1] <= UInt<1>("h0") @[FFTDataProcess.scala 235:40]
      io.writeEnableSram1Bank[1] <= UInt<1>("h0") @[FFTDataProcess.scala 236:40]
    node _T_39 = eq(UInt<2>("h2"), addrSBankSel3c) @[FFTDataProcess.scala 227:19]
    node _T_40 = eq(UInt<2>("h2"), addrTBankSel3c) @[FFTDataProcess.scala 227:47]
    node _T_41 = or(_T_39, _T_40) @[FFTDataProcess.scala 227:39]
    when _T_41 : @[FFTDataProcess.scala 227:68]
      node _io_writeEnableSram0Bank_2_T = and(srcBuffer, procState3c) @[FFTDataProcess.scala 228:53]
      io.writeEnableSram0Bank[2] <= _io_writeEnableSram0Bank_2_T @[FFTDataProcess.scala 228:40]
      node _io_writeEnableSram0Bank_2_T_1 = and(srcBuffer, procState3c) @[FFTDataProcess.scala 229:53]
      io.writeEnableSram0Bank[2] <= _io_writeEnableSram0Bank_2_T_1 @[FFTDataProcess.scala 229:40]
      node _io_writeEnableSram1Bank_2_T = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 230:43]
      node _io_writeEnableSram1Bank_2_T_1 = and(_io_writeEnableSram1Bank_2_T, procState3c) @[FFTDataProcess.scala 230:54]
      io.writeEnableSram1Bank[2] <= _io_writeEnableSram1Bank_2_T_1 @[FFTDataProcess.scala 230:40]
      node _io_writeEnableSram1Bank_2_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 231:43]
      node _io_writeEnableSram1Bank_2_T_3 = and(_io_writeEnableSram1Bank_2_T_2, procState3c) @[FFTDataProcess.scala 231:54]
      io.writeEnableSram1Bank[2] <= _io_writeEnableSram1Bank_2_T_3 @[FFTDataProcess.scala 231:40]
    else :
      io.writeEnableSram0Bank[2] <= UInt<1>("h0") @[FFTDataProcess.scala 233:40]
      io.writeEnableSram0Bank[2] <= UInt<1>("h0") @[FFTDataProcess.scala 234:40]
      io.writeEnableSram1Bank[2] <= UInt<1>("h0") @[FFTDataProcess.scala 235:40]
      io.writeEnableSram1Bank[2] <= UInt<1>("h0") @[FFTDataProcess.scala 236:40]
    node _T_42 = eq(UInt<2>("h3"), addrSBankSel3c) @[FFTDataProcess.scala 227:19]
    node _T_43 = eq(UInt<2>("h3"), addrTBankSel3c) @[FFTDataProcess.scala 227:47]
    node _T_44 = or(_T_42, _T_43) @[FFTDataProcess.scala 227:39]
    when _T_44 : @[FFTDataProcess.scala 227:68]
      node _io_writeEnableSram0Bank_3_T = and(srcBuffer, procState3c) @[FFTDataProcess.scala 228:53]
      io.writeEnableSram0Bank[3] <= _io_writeEnableSram0Bank_3_T @[FFTDataProcess.scala 228:40]
      node _io_writeEnableSram0Bank_3_T_1 = and(srcBuffer, procState3c) @[FFTDataProcess.scala 229:53]
      io.writeEnableSram0Bank[3] <= _io_writeEnableSram0Bank_3_T_1 @[FFTDataProcess.scala 229:40]
      node _io_writeEnableSram1Bank_3_T = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 230:43]
      node _io_writeEnableSram1Bank_3_T_1 = and(_io_writeEnableSram1Bank_3_T, procState3c) @[FFTDataProcess.scala 230:54]
      io.writeEnableSram1Bank[3] <= _io_writeEnableSram1Bank_3_T_1 @[FFTDataProcess.scala 230:40]
      node _io_writeEnableSram1Bank_3_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 231:43]
      node _io_writeEnableSram1Bank_3_T_3 = and(_io_writeEnableSram1Bank_3_T_2, procState3c) @[FFTDataProcess.scala 231:54]
      io.writeEnableSram1Bank[3] <= _io_writeEnableSram1Bank_3_T_3 @[FFTDataProcess.scala 231:40]
    else :
      io.writeEnableSram0Bank[3] <= UInt<1>("h0") @[FFTDataProcess.scala 233:40]
      io.writeEnableSram0Bank[3] <= UInt<1>("h0") @[FFTDataProcess.scala 234:40]
      io.writeEnableSram1Bank[3] <= UInt<1>("h0") @[FFTDataProcess.scala 235:40]
      io.writeEnableSram1Bank[3] <= UInt<1>("h0") @[FFTDataProcess.scala 236:40]
    node _T_45 = eq(UInt<3>("h4"), addrSBankSel3c) @[FFTDataProcess.scala 227:19]
    node _T_46 = eq(UInt<3>("h4"), addrTBankSel3c) @[FFTDataProcess.scala 227:47]
    node _T_47 = or(_T_45, _T_46) @[FFTDataProcess.scala 227:39]
    when _T_47 : @[FFTDataProcess.scala 227:68]
      node _io_writeEnableSram0Bank_4_T = and(srcBuffer, procState3c) @[FFTDataProcess.scala 228:53]
      io.writeEnableSram0Bank[4] <= _io_writeEnableSram0Bank_4_T @[FFTDataProcess.scala 228:40]
      node _io_writeEnableSram0Bank_4_T_1 = and(srcBuffer, procState3c) @[FFTDataProcess.scala 229:53]
      io.writeEnableSram0Bank[4] <= _io_writeEnableSram0Bank_4_T_1 @[FFTDataProcess.scala 229:40]
      node _io_writeEnableSram1Bank_4_T = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 230:43]
      node _io_writeEnableSram1Bank_4_T_1 = and(_io_writeEnableSram1Bank_4_T, procState3c) @[FFTDataProcess.scala 230:54]
      io.writeEnableSram1Bank[4] <= _io_writeEnableSram1Bank_4_T_1 @[FFTDataProcess.scala 230:40]
      node _io_writeEnableSram1Bank_4_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 231:43]
      node _io_writeEnableSram1Bank_4_T_3 = and(_io_writeEnableSram1Bank_4_T_2, procState3c) @[FFTDataProcess.scala 231:54]
      io.writeEnableSram1Bank[4] <= _io_writeEnableSram1Bank_4_T_3 @[FFTDataProcess.scala 231:40]
    else :
      io.writeEnableSram0Bank[4] <= UInt<1>("h0") @[FFTDataProcess.scala 233:40]
      io.writeEnableSram0Bank[4] <= UInt<1>("h0") @[FFTDataProcess.scala 234:40]
      io.writeEnableSram1Bank[4] <= UInt<1>("h0") @[FFTDataProcess.scala 235:40]
      io.writeEnableSram1Bank[4] <= UInt<1>("h0") @[FFTDataProcess.scala 236:40]
    node _T_48 = eq(UInt<3>("h5"), addrSBankSel3c) @[FFTDataProcess.scala 227:19]
    node _T_49 = eq(UInt<3>("h5"), addrTBankSel3c) @[FFTDataProcess.scala 227:47]
    node _T_50 = or(_T_48, _T_49) @[FFTDataProcess.scala 227:39]
    when _T_50 : @[FFTDataProcess.scala 227:68]
      node _io_writeEnableSram0Bank_5_T = and(srcBuffer, procState3c) @[FFTDataProcess.scala 228:53]
      io.writeEnableSram0Bank[5] <= _io_writeEnableSram0Bank_5_T @[FFTDataProcess.scala 228:40]
      node _io_writeEnableSram0Bank_5_T_1 = and(srcBuffer, procState3c) @[FFTDataProcess.scala 229:53]
      io.writeEnableSram0Bank[5] <= _io_writeEnableSram0Bank_5_T_1 @[FFTDataProcess.scala 229:40]
      node _io_writeEnableSram1Bank_5_T = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 230:43]
      node _io_writeEnableSram1Bank_5_T_1 = and(_io_writeEnableSram1Bank_5_T, procState3c) @[FFTDataProcess.scala 230:54]
      io.writeEnableSram1Bank[5] <= _io_writeEnableSram1Bank_5_T_1 @[FFTDataProcess.scala 230:40]
      node _io_writeEnableSram1Bank_5_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 231:43]
      node _io_writeEnableSram1Bank_5_T_3 = and(_io_writeEnableSram1Bank_5_T_2, procState3c) @[FFTDataProcess.scala 231:54]
      io.writeEnableSram1Bank[5] <= _io_writeEnableSram1Bank_5_T_3 @[FFTDataProcess.scala 231:40]
    else :
      io.writeEnableSram0Bank[5] <= UInt<1>("h0") @[FFTDataProcess.scala 233:40]
      io.writeEnableSram0Bank[5] <= UInt<1>("h0") @[FFTDataProcess.scala 234:40]
      io.writeEnableSram1Bank[5] <= UInt<1>("h0") @[FFTDataProcess.scala 235:40]
      io.writeEnableSram1Bank[5] <= UInt<1>("h0") @[FFTDataProcess.scala 236:40]
    node _T_51 = eq(UInt<3>("h6"), addrSBankSel3c) @[FFTDataProcess.scala 227:19]
    node _T_52 = eq(UInt<3>("h6"), addrTBankSel3c) @[FFTDataProcess.scala 227:47]
    node _T_53 = or(_T_51, _T_52) @[FFTDataProcess.scala 227:39]
    when _T_53 : @[FFTDataProcess.scala 227:68]
      node _io_writeEnableSram0Bank_6_T = and(srcBuffer, procState3c) @[FFTDataProcess.scala 228:53]
      io.writeEnableSram0Bank[6] <= _io_writeEnableSram0Bank_6_T @[FFTDataProcess.scala 228:40]
      node _io_writeEnableSram0Bank_6_T_1 = and(srcBuffer, procState3c) @[FFTDataProcess.scala 229:53]
      io.writeEnableSram0Bank[6] <= _io_writeEnableSram0Bank_6_T_1 @[FFTDataProcess.scala 229:40]
      node _io_writeEnableSram1Bank_6_T = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 230:43]
      node _io_writeEnableSram1Bank_6_T_1 = and(_io_writeEnableSram1Bank_6_T, procState3c) @[FFTDataProcess.scala 230:54]
      io.writeEnableSram1Bank[6] <= _io_writeEnableSram1Bank_6_T_1 @[FFTDataProcess.scala 230:40]
      node _io_writeEnableSram1Bank_6_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 231:43]
      node _io_writeEnableSram1Bank_6_T_3 = and(_io_writeEnableSram1Bank_6_T_2, procState3c) @[FFTDataProcess.scala 231:54]
      io.writeEnableSram1Bank[6] <= _io_writeEnableSram1Bank_6_T_3 @[FFTDataProcess.scala 231:40]
    else :
      io.writeEnableSram0Bank[6] <= UInt<1>("h0") @[FFTDataProcess.scala 233:40]
      io.writeEnableSram0Bank[6] <= UInt<1>("h0") @[FFTDataProcess.scala 234:40]
      io.writeEnableSram1Bank[6] <= UInt<1>("h0") @[FFTDataProcess.scala 235:40]
      io.writeEnableSram1Bank[6] <= UInt<1>("h0") @[FFTDataProcess.scala 236:40]
    node _T_54 = eq(UInt<3>("h7"), addrSBankSel3c) @[FFTDataProcess.scala 227:19]
    node _T_55 = eq(UInt<3>("h7"), addrTBankSel3c) @[FFTDataProcess.scala 227:47]
    node _T_56 = or(_T_54, _T_55) @[FFTDataProcess.scala 227:39]
    when _T_56 : @[FFTDataProcess.scala 227:68]
      node _io_writeEnableSram0Bank_7_T = and(srcBuffer, procState3c) @[FFTDataProcess.scala 228:53]
      io.writeEnableSram0Bank[7] <= _io_writeEnableSram0Bank_7_T @[FFTDataProcess.scala 228:40]
      node _io_writeEnableSram0Bank_7_T_1 = and(srcBuffer, procState3c) @[FFTDataProcess.scala 229:53]
      io.writeEnableSram0Bank[7] <= _io_writeEnableSram0Bank_7_T_1 @[FFTDataProcess.scala 229:40]
      node _io_writeEnableSram1Bank_7_T = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 230:43]
      node _io_writeEnableSram1Bank_7_T_1 = and(_io_writeEnableSram1Bank_7_T, procState3c) @[FFTDataProcess.scala 230:54]
      io.writeEnableSram1Bank[7] <= _io_writeEnableSram1Bank_7_T_1 @[FFTDataProcess.scala 230:40]
      node _io_writeEnableSram1Bank_7_T_2 = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 231:43]
      node _io_writeEnableSram1Bank_7_T_3 = and(_io_writeEnableSram1Bank_7_T_2, procState3c) @[FFTDataProcess.scala 231:54]
      io.writeEnableSram1Bank[7] <= _io_writeEnableSram1Bank_7_T_3 @[FFTDataProcess.scala 231:40]
    else :
      io.writeEnableSram0Bank[7] <= UInt<1>("h0") @[FFTDataProcess.scala 233:40]
      io.writeEnableSram0Bank[7] <= UInt<1>("h0") @[FFTDataProcess.scala 234:40]
      io.writeEnableSram1Bank[7] <= UInt<1>("h0") @[FFTDataProcess.scala 235:40]
      io.writeEnableSram1Bank[7] <= UInt<1>("h0") @[FFTDataProcess.scala 236:40]
    node _T_57 = eq(srcBuffer, UInt<1>("h0")) @[FFTDataProcess.scala 240:20]
    when _T_57 : @[FFTDataProcess.scala 240:29]
      node _io_addrSram0Bank_T_2 = bits(addrS, 3, 0) @[FFTDataProcess.scala 241:48]
      io.addrSram0Bank[addrSBankSel] <= _io_addrSram0Bank_T_2 @[FFTDataProcess.scala 241:40]
      node _io_addrSram0Bank_T_3 = bits(addrT, 3, 0) @[FFTDataProcess.scala 242:48]
      io.addrSram0Bank[addrTBankSel] <= _io_addrSram0Bank_T_3 @[FFTDataProcess.scala 242:40]
      node _T_58 = or(addrSBankSel3c, UInt<3>("h0"))
      node _T_59 = bits(_T_58, 2, 0)
      io.addrSram1Bank[_T_59] <= addrS3c @[FFTDataProcess.scala 243:42]
      node _T_60 = or(addrTBankSel3c, UInt<3>("h0"))
      node _T_61 = bits(_T_60, 2, 0)
      io.addrSram1Bank[_T_61] <= addrT3c @[FFTDataProcess.scala 244:42]
    else :
      node _T_62 = or(addrSBankSel3c, UInt<3>("h0"))
      node _T_63 = bits(_T_62, 2, 0)
      io.addrSram0Bank[_T_63] <= addrS3c @[FFTDataProcess.scala 246:42]
      node _T_64 = or(addrTBankSel3c, UInt<3>("h0"))
      node _T_65 = bits(_T_64, 2, 0)
      io.addrSram0Bank[_T_65] <= addrT3c @[FFTDataProcess.scala 247:42]
      node _io_addrSram1Bank_T_2 = bits(addrS, 3, 0) @[FFTDataProcess.scala 248:48]
      io.addrSram1Bank[addrSBankSel] <= _io_addrSram1Bank_T_2 @[FFTDataProcess.scala 248:40]
      node _io_addrSram1Bank_T_3 = bits(addrT, 3, 0) @[FFTDataProcess.scala 249:48]
      io.addrSram1Bank[addrTBankSel] <= _io_addrSram1Bank_T_3 @[FFTDataProcess.scala 249:40]
    node _T_66 = or(addrTBankSel3c, UInt<3>("h0"))
    node _T_67 = bits(_T_66, 2, 0)
    io.writeDataSram0Bank[_T_67] <= writeDataT @[FFTDataProcess.scala 252:43]
    node _T_68 = or(addrSBankSel3c, UInt<3>("h0"))
    node _T_69 = bits(_T_68, 2, 0)
    io.writeDataSram0Bank[_T_69] <= writeDataS @[FFTDataProcess.scala 253:43]
    node _T_70 = or(addrTBankSel3c, UInt<3>("h0"))
    node _T_71 = bits(_T_70, 2, 0)
    io.writeDataSram1Bank[_T_71] <= writeDataT @[FFTDataProcess.scala 254:43]
    node _T_72 = or(addrSBankSel3c, UInt<3>("h0"))
    node _T_73 = bits(_T_72, 2, 0)
    io.writeDataSram1Bank[_T_73] <= writeDataS @[FFTDataProcess.scala 255:43]
    node donePre = eq(stateReg, UInt<3>("h4")) @[FFTDataProcess.scala 257:29]
    reg procDoneReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[FFTDataProcess.scala 258:30]
    procDoneReg <= donePre @[FFTDataProcess.scala 258:30]
    io.procDone <= procDoneReg @[FFTDataProcess.scala 259:17]

